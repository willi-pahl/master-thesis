%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 636 220
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Dienstag, 25. Februar 2025, 16:37:35 Mitteleurop√§ische Normalzeit
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
636 220 setpagesize
0 0 0 0 setmargins
0 0 setorigin
636 220 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
636.000 0.00000 l
636.000 220.000 l
0.00000 220.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
636.000 0.00000 l
636.000 220.000 l
0.00000 220.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 636 220 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -224.000 -45.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
224.000 45.0000 m
860.000 45.0000 l
860.000 265.000 l
224.000 265.000 l
224.000 45.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -224.000 -45.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -224.000 -45.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -224.000 -45.0000 ] defaultmatrix matrix concatmatrix setmatrix
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [239.0 97.0 319.0 137.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
239.000 97.0000 m
319.000 97.0000 l
319.000 137.000 l
239.000 137.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
239.000 97.0000 m
319.000 97.0000 l
319.000 137.000 l
239.000 137.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
252.613 121.714 m
252.613 113.120 l
258.816 113.120 l
258.816 114.136 l
253.754 114.136 l
253.754 116.761 l
258.504 116.761 l
258.504 117.776 l
253.754 117.776 l
253.754 120.698 l
259.020 120.698 l
259.020 121.714 l
252.613 121.714 l
h
260.461 121.714 m
260.461 115.495 l
261.398 115.495 l
261.398 116.370 l
261.857 115.693 262.518 115.354 263.383 115.354  c
263.758 115.354 264.102 115.422 264.414 115.558  c
264.737 115.693 264.977 115.870 265.133 116.089  c
265.289 116.308 265.398 116.563 265.461 116.854  c
265.492 117.052 265.508 117.396 265.508 117.886  c
265.508 121.714 l
264.461 121.714 l
264.461 117.933 l
264.461 117.495 264.419 117.172 264.336 116.964  c
264.253 116.756 264.107 116.589 263.898 116.464  c
263.690 116.328 263.445 116.261 263.164 116.261  c
262.716 116.261 262.326 116.407 261.992 116.698  c
261.669 116.979 261.508 117.516 261.508 118.308  c
261.508 121.714 l
260.461 121.714 l
h
269.432 120.776 m
269.588 121.698 l
269.286 121.761 269.020 121.792 268.791 121.792  c
268.406 121.792 268.109 121.735 267.900 121.620  c
267.692 121.495 267.541 121.334 267.447 121.136  c
267.364 120.938 267.322 120.521 267.322 119.886  c
267.322 116.308 l
266.557 116.308 l
266.557 115.495 l
267.322 115.495 l
267.322 113.948 l
268.369 113.323 l
268.369 115.495 l
269.432 115.495 l
269.432 116.308 l
268.369 116.308 l
268.369 119.948 l
268.369 120.250 268.385 120.443 268.416 120.526  c
268.458 120.610 268.520 120.677 268.604 120.729  c
268.687 120.782 268.807 120.808 268.963 120.808  c
269.088 120.808 269.244 120.797 269.432 120.776  c
h
271.609 121.714 m
269.703 115.495 l
270.797 115.495 l
271.781 119.089 l
272.156 120.417 l
272.177 120.354 272.286 119.927 272.484 119.136  c
273.469 115.495 l
274.547 115.495 l
275.484 119.104 l
275.797 120.292 l
276.156 119.089 l
277.219 115.495 l
278.250 115.495 l
276.297 121.714 l
275.203 121.714 l
274.219 117.979 l
273.969 116.933 l
272.719 121.714 l
271.609 121.714 l
h
279.135 114.339 m
279.135 113.120 l
280.197 113.120 l
280.197 114.339 l
279.135 114.339 l
h
279.135 121.714 m
279.135 115.495 l
280.197 115.495 l
280.197 121.714 l
279.135 121.714 l
h
285.863 119.433 m
286.895 119.573 l
286.780 120.282 286.488 120.839 286.020 121.245  c
285.551 121.651 284.978 121.854 284.301 121.854  c
283.447 121.854 282.759 121.578 282.238 121.026  c
281.728 120.464 281.473 119.662 281.473 118.620  c
281.473 117.953 281.582 117.370 281.801 116.870  c
282.030 116.360 282.368 115.979 282.816 115.729  c
283.275 115.479 283.775 115.354 284.316 115.354  c
284.983 115.354 285.530 115.526 285.957 115.870  c
286.395 116.203 286.676 116.688 286.801 117.323  c
285.770 117.479 l
285.676 117.063 285.504 116.750 285.254 116.542  c
285.004 116.323 284.702 116.214 284.348 116.214  c
283.816 116.214 283.384 116.407 283.051 116.792  c
282.717 117.167 282.551 117.766 282.551 118.589  c
282.551 119.433 282.712 120.042 283.035 120.417  c
283.358 120.792 283.775 120.979 284.285 120.979  c
284.702 120.979 285.046 120.854 285.316 120.604  c
285.598 120.354 285.780 119.964 285.863 119.433  c
h
287.801 121.714 m
287.801 113.120 l
288.863 113.120 l
288.863 118.026 l
291.348 115.495 l
292.723 115.495 l
290.332 117.792 l
292.957 121.714 l
291.660 121.714 l
289.598 118.526 l
288.863 119.245 l
288.863 121.714 l
287.801 121.714 l
h
293.770 121.714 m
293.770 113.120 l
294.832 113.120 l
294.832 121.714 l
293.770 121.714 l
h
300.717 119.714 m
301.811 119.839 l
301.644 120.474 301.326 120.969 300.857 121.323  c
300.389 121.677 299.795 121.854 299.076 121.854  c
298.170 121.854 297.446 121.573 296.904 121.011  c
296.373 120.448 296.107 119.662 296.107 118.651  c
296.107 117.610 296.378 116.802 296.920 116.229  c
297.462 115.646 298.160 115.354 299.014 115.354  c
299.847 115.354 300.524 115.636 301.045 116.198  c
301.576 116.761 301.842 117.558 301.842 118.589  c
301.842 118.651 301.842 118.745 301.842 118.870  c
297.201 118.870 l
297.243 119.558 297.436 120.084 297.779 120.448  c
298.123 120.802 298.555 120.979 299.076 120.979  c
299.462 120.979 299.790 120.881 300.061 120.683  c
300.342 120.474 300.561 120.151 300.717 119.714  c
h
297.264 118.011 m
300.732 118.011 l
300.691 117.479 300.561 117.084 300.342 116.823  c
299.998 116.417 299.561 116.214 299.029 116.214  c
298.540 116.214 298.128 116.375 297.795 116.698  c
297.472 117.021 297.295 117.459 297.264 118.011  c
h
303.125 121.714 m
303.125 115.495 l
304.078 115.495 l
304.078 116.433 l
304.318 115.995 304.536 115.709 304.734 115.573  c
304.943 115.427 305.172 115.354 305.422 115.354  c
305.776 115.354 306.135 115.464 306.500 115.683  c
306.141 116.667 l
305.880 116.511 305.625 116.433 305.375 116.433  c
305.135 116.433 304.922 116.506 304.734 116.651  c
304.557 116.787 304.432 116.979 304.359 117.229  c
304.234 117.604 304.172 118.011 304.172 118.448  c
304.172 121.714 l
303.125 121.714 l
h
f
2 J
10.0000 M
Q
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [616.0 210.0 676.0 250.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 0.6]
         /C1 [1.0 1.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
616.000 218.000 m
617.800 210.000 674.200 210.000 676.000 218.000  c
676.000 242.000 l
674.200 250.000 617.800 250.000 616.000 242.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
616.000 218.000 m
617.800 210.000 674.200 210.000 676.000 218.000  c
676.000 242.000 l
674.200 250.000 617.800 250.000 616.000 242.000  c
h
S
newpath
676.000 218.000 m
674.200 226.000 617.800 226.000 616.000 218.000  c
S
2 J
10.0000 M
0 J
1.45000 M
newpath
f
newpath
633.864 242.064 m
633.864 233.471 l
635.005 233.471 l
635.005 241.049 l
639.239 241.049 l
639.239 242.064 l
633.864 242.064 l
h
640.069 238.955 m
640.069 237.799 640.387 236.945 641.022 236.393  c
641.554 235.934 642.205 235.705 642.976 235.705  c
643.830 235.705 644.528 235.986 645.069 236.549  c
645.621 237.101 645.897 237.872 645.897 238.861  c
645.897 239.663 645.778 240.294 645.538 240.752  c
645.299 241.210 644.944 241.570 644.476 241.830  c
644.017 242.080 643.517 242.205 642.976 242.205  c
642.111 242.205 641.408 241.929 640.866 241.377  c
640.335 240.814 640.069 240.007 640.069 238.955  c
h
641.147 238.955 m
641.147 239.747 641.319 240.340 641.663 240.736  c
642.017 241.132 642.455 241.330 642.976 241.330  c
643.507 241.330 643.944 241.132 644.288 240.736  c
644.632 240.340 644.804 239.736 644.804 238.924  c
644.804 238.153 644.627 237.570 644.272 237.174  c
643.929 236.778 643.496 236.580 642.976 236.580  c
642.455 236.580 642.017 236.778 641.663 237.174  c
641.319 237.559 641.147 238.153 641.147 238.955  c
h
646.931 242.580 m
647.962 242.736 l
648.004 243.049 648.123 243.278 648.321 243.424  c
648.582 243.622 648.936 243.721 649.384 243.721  c
649.873 243.721 650.248 243.622 650.509 243.424  c
650.780 243.226 650.962 242.955 651.056 242.611  c
651.118 242.393 651.144 241.939 651.134 241.252  c
650.675 241.794 650.103 242.064 649.415 242.064  c
648.561 242.064 647.899 241.757 647.431 241.143  c
646.962 240.518 646.728 239.778 646.728 238.924  c
646.728 238.330 646.832 237.783 647.040 237.283  c
647.259 236.773 647.571 236.382 647.978 236.111  c
648.384 235.840 648.863 235.705 649.415 235.705  c
650.155 235.705 650.764 236.002 651.243 236.596  c
651.243 235.846 l
652.212 235.846 l
652.212 241.221 l
652.212 242.189 652.113 242.877 651.915 243.283  c
651.717 243.689 651.405 244.007 650.978 244.236  c
650.550 244.476 650.024 244.596 649.399 244.596  c
648.660 244.596 648.061 244.429 647.603 244.096  c
647.144 243.762 646.920 243.257 646.931 242.580  c
h
647.806 238.846 m
647.806 239.658 647.967 240.252 648.290 240.627  c
648.613 241.002 649.019 241.189 649.509 241.189  c
649.998 241.189 650.405 241.002 650.728 240.627  c
651.061 240.252 651.228 239.669 651.228 238.877  c
651.228 238.117 651.056 237.544 650.712 237.158  c
650.379 236.773 649.972 236.580 649.493 236.580  c
649.024 236.580 648.623 236.773 648.290 237.158  c
647.967 237.533 647.806 238.096 647.806 238.846  c
h
653.386 240.205 m
654.417 240.049 l
654.479 240.465 654.641 240.783 654.901 241.002  c
655.172 241.221 655.552 241.330 656.042 241.330  c
656.521 241.330 656.875 241.236 657.104 241.049  c
657.344 240.851 657.464 240.617 657.464 240.346  c
657.464 240.106 657.360 239.919 657.151 239.783  c
657.006 239.689 656.646 239.570 656.073 239.424  c
655.302 239.226 654.766 239.059 654.464 238.924  c
654.172 238.778 653.948 238.580 653.792 238.330  c
653.636 238.080 653.558 237.799 653.558 237.486  c
653.558 237.215 653.620 236.960 653.745 236.721  c
653.870 236.481 654.042 236.283 654.261 236.127  c
654.427 236.012 654.651 235.913 654.933 235.830  c
655.214 235.747 655.521 235.705 655.854 235.705  c
656.334 235.705 656.756 235.778 657.120 235.924  c
657.495 236.059 657.771 236.247 657.948 236.486  c
658.125 236.726 658.245 237.044 658.308 237.439  c
657.276 237.580 l
657.235 237.268 657.099 237.023 656.870 236.846  c
656.651 236.658 656.334 236.564 655.917 236.564  c
655.438 236.564 655.094 236.648 654.886 236.814  c
654.677 236.971 654.573 237.158 654.573 237.377  c
654.573 237.512 654.615 237.632 654.698 237.736  c
654.792 237.851 654.927 237.945 655.104 238.018  c
655.209 238.059 655.521 238.148 656.042 238.283  c
656.792 238.492 657.313 238.658 657.604 238.783  c
657.896 238.908 658.125 239.090 658.292 239.330  c
658.459 239.570 658.542 239.872 658.542 240.236  c
658.542 240.590 658.438 240.924 658.229 241.236  c
658.032 241.538 657.740 241.778 657.354 241.955  c
656.969 242.122 656.532 242.205 656.042 242.205  c
655.229 242.205 654.610 242.038 654.183 241.705  c
653.766 241.361 653.500 240.861 653.386 240.205  c
h
f
2 J
10.0000 M
Q
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [509.0 97.0 589.0 137.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 1.0 0.8]
         /C1 [0.2 0.6 0.4]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
509.000 97.0000 m
589.000 97.0000 l
589.000 137.000 l
509.000 137.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
509.000 97.0000 m
589.000 97.0000 l
589.000 137.000 l
509.000 137.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
531.638 114.363 m
534.935 105.770 l
536.153 105.770 l
539.669 114.363 l
538.388 114.363 l
537.372 111.754 l
533.794 111.754 l
532.841 114.363 l
531.638 114.363 l
h
534.122 110.832 m
537.028 110.832 l
536.138 108.457 l
535.856 107.738 535.653 107.145 535.528 106.676  c
535.414 107.228 535.257 107.775 535.060 108.316  c
534.122 110.832 l
h
540.251 114.879 m
541.282 115.035 l
541.324 115.348 541.444 115.577 541.642 115.723  c
541.902 115.921 542.256 116.020 542.704 116.020  c
543.194 116.020 543.569 115.921 543.829 115.723  c
544.100 115.525 544.282 115.254 544.376 114.910  c
544.438 114.691 544.465 114.238 544.454 113.551  c
543.996 114.092 543.423 114.363 542.735 114.363  c
541.881 114.363 541.220 114.056 540.751 113.441  c
540.282 112.816 540.048 112.077 540.048 111.223  c
540.048 110.629 540.152 110.082 540.360 109.582  c
540.579 109.072 540.892 108.681 541.298 108.410  c
541.704 108.139 542.183 108.004 542.735 108.004  c
543.475 108.004 544.084 108.301 544.563 108.895  c
544.563 108.145 l
545.532 108.145 l
545.532 113.520 l
545.532 114.488 545.433 115.176 545.235 115.582  c
545.037 115.988 544.725 116.306 544.298 116.535  c
543.871 116.775 543.345 116.895 542.720 116.895  c
541.980 116.895 541.381 116.728 540.923 116.395  c
540.465 116.061 540.241 115.556 540.251 114.879  c
h
541.126 111.145 m
541.126 111.957 541.287 112.551 541.610 112.926  c
541.933 113.301 542.340 113.488 542.829 113.488  c
543.319 113.488 543.725 113.301 544.048 112.926  c
544.381 112.551 544.548 111.967 544.548 111.176  c
544.548 110.415 544.376 109.842 544.032 109.457  c
543.699 109.072 543.293 108.879 542.813 108.879  c
542.345 108.879 541.944 109.072 541.610 109.457  c
541.287 109.832 541.126 110.395 541.126 111.145  c
h
551.378 112.363 m
552.472 112.488 l
552.305 113.124 551.987 113.618 551.519 113.973  c
551.050 114.327 550.456 114.504 549.737 114.504  c
548.831 114.504 548.107 114.223 547.565 113.660  c
547.034 113.098 546.769 112.311 546.769 111.301  c
546.769 110.259 547.039 109.452 547.581 108.879  c
548.123 108.296 548.821 108.004 549.675 108.004  c
550.508 108.004 551.185 108.285 551.706 108.848  c
552.237 109.410 552.503 110.207 552.503 111.238  c
552.503 111.301 552.503 111.395 552.503 111.520  c
547.862 111.520 l
547.904 112.207 548.097 112.733 548.440 113.098  c
548.784 113.452 549.216 113.629 549.737 113.629  c
550.123 113.629 550.451 113.530 550.722 113.332  c
551.003 113.124 551.222 112.801 551.378 112.363  c
h
547.925 110.660 m
551.394 110.660 l
551.352 110.129 551.222 109.733 551.003 109.473  c
550.659 109.066 550.222 108.863 549.690 108.863  c
549.201 108.863 548.789 109.025 548.456 109.348  c
548.133 109.671 547.956 110.108 547.925 110.660  c
h
553.802 114.363 m
553.802 108.145 l
554.739 108.145 l
554.739 109.020 l
555.198 108.342 555.859 108.004 556.724 108.004  c
557.099 108.004 557.442 108.072 557.755 108.207  c
558.078 108.342 558.317 108.520 558.474 108.738  c
558.630 108.957 558.739 109.212 558.802 109.504  c
558.833 109.702 558.849 110.046 558.849 110.535  c
558.849 114.363 l
557.802 114.363 l
557.802 110.582 l
557.802 110.145 557.760 109.822 557.677 109.613  c
557.593 109.405 557.448 109.238 557.239 109.113  c
557.031 108.978 556.786 108.910 556.505 108.910  c
556.057 108.910 555.666 109.056 555.333 109.348  c
555.010 109.629 554.849 110.165 554.849 110.957  c
554.849 114.363 l
553.802 114.363 l
h
562.772 113.426 m
562.929 114.348 l
562.627 114.410 562.361 114.441 562.132 114.441  c
561.746 114.441 561.450 114.384 561.241 114.270  c
561.033 114.145 560.882 113.983 560.788 113.785  c
560.705 113.587 560.663 113.171 560.663 112.535  c
560.663 108.957 l
559.897 108.957 l
559.897 108.145 l
560.663 108.145 l
560.663 106.598 l
561.710 105.973 l
561.710 108.145 l
562.772 108.145 l
562.772 108.957 l
561.710 108.957 l
561.710 112.598 l
561.710 112.900 561.726 113.092 561.757 113.176  c
561.799 113.259 561.861 113.327 561.944 113.379  c
562.028 113.431 562.147 113.457 562.304 113.457  c
562.429 113.457 562.585 113.447 562.772 113.426  c
h
563.013 114.504 m
565.497 105.629 l
566.341 105.629 l
563.856 114.504 l
563.013 114.504 l
h
f
newpath
519.981 129.064 m
519.981 120.471 l
525.778 120.471 l
525.778 121.486 l
521.122 121.486 l
521.122 124.143 l
525.153 124.143 l
525.153 125.158 l
521.122 125.158 l
521.122 129.064 l
519.981 129.064 l
h
527.108 129.064 m
527.108 122.846 l
528.062 122.846 l
528.062 123.783 l
528.301 123.346 528.520 123.059 528.718 122.924  c
528.926 122.778 529.155 122.705 529.405 122.705  c
529.759 122.705 530.119 122.814 530.483 123.033  c
530.124 124.018 l
529.864 123.861 529.608 123.783 529.358 123.783  c
529.119 123.783 528.905 123.856 528.718 124.002  c
528.541 124.137 528.416 124.330 528.343 124.580  c
528.218 124.955 528.155 125.361 528.155 125.799  c
528.155 129.064 l
527.108 129.064 l
h
535.183 128.299 m
534.787 128.632 534.407 128.867 534.042 129.002  c
533.688 129.137 533.302 129.205 532.886 129.205  c
532.198 129.205 531.672 129.038 531.308 128.705  c
530.943 128.372 530.761 127.945 530.761 127.424  c
530.761 127.122 530.828 126.846 530.964 126.596  c
531.099 126.335 531.282 126.132 531.511 125.986  c
531.740 125.830 531.995 125.715 532.276 125.643  c
532.474 125.580 532.787 125.523 533.214 125.471  c
534.058 125.377 534.683 125.257 535.089 125.111  c
535.089 124.965 535.089 124.877 535.089 124.846  c
535.089 124.408 534.990 124.101 534.792 123.924  c
534.521 123.695 534.120 123.580 533.589 123.580  c
533.099 123.580 532.735 123.669 532.495 123.846  c
532.256 124.012 532.078 124.314 531.964 124.752  c
530.933 124.611 l
531.026 124.174 531.183 123.820 531.401 123.549  c
531.620 123.278 531.933 123.070 532.339 122.924  c
532.745 122.778 533.214 122.705 533.745 122.705  c
534.276 122.705 534.709 122.768 535.042 122.893  c
535.375 123.018 535.620 123.174 535.776 123.361  c
535.933 123.549 536.042 123.788 536.104 124.080  c
536.136 124.257 536.151 124.580 536.151 125.049  c
536.151 126.455 l
536.151 127.434 536.172 128.054 536.214 128.314  c
536.266 128.575 536.360 128.825 536.495 129.064  c
535.386 129.064 l
535.282 128.846 535.214 128.590 535.183 128.299  c
h
535.089 125.939 m
534.703 126.096 534.131 126.231 533.370 126.346  c
532.933 126.408 532.625 126.481 532.448 126.564  c
532.271 126.637 532.131 126.747 532.026 126.893  c
531.933 127.038 531.886 127.205 531.886 127.393  c
531.886 127.674 531.990 127.908 532.198 128.096  c
532.417 128.283 532.729 128.377 533.136 128.377  c
533.542 128.377 533.901 128.288 534.214 128.111  c
534.537 127.934 534.771 127.689 534.917 127.377  c
535.032 127.137 535.089 126.788 535.089 126.330  c
535.089 125.939 l
h
537.794 129.064 m
537.794 122.846 l
538.731 122.846 l
538.731 123.721 l
538.929 123.408 539.190 123.163 539.513 122.986  c
539.836 122.799 540.205 122.705 540.622 122.705  c
541.080 122.705 541.455 122.799 541.747 122.986  c
542.049 123.174 542.257 123.439 542.372 123.783  c
542.872 123.064 543.513 122.705 544.294 122.705  c
544.919 122.705 545.393 122.877 545.716 123.221  c
546.049 123.554 546.216 124.080 546.216 124.799  c
546.216 129.064 l
545.169 129.064 l
545.169 125.143 l
545.169 124.726 545.132 124.424 545.060 124.236  c
544.997 124.049 544.877 123.898 544.700 123.783  c
544.523 123.669 544.310 123.611 544.060 123.611  c
543.622 123.611 543.257 123.757 542.966 124.049  c
542.685 124.340 542.544 124.809 542.544 125.455  c
542.544 129.064 l
541.481 129.064 l
541.481 125.018 l
541.481 124.549 541.393 124.200 541.216 123.971  c
541.049 123.731 540.773 123.611 540.388 123.611  c
540.086 123.611 539.810 123.689 539.560 123.846  c
539.310 124.002 539.127 124.231 539.013 124.533  c
538.898 124.835 538.841 125.268 538.841 125.830  c
538.841 129.064 l
537.794 129.064 l
h
552.040 127.064 m
553.134 127.189 l
552.967 127.825 552.649 128.320 552.181 128.674  c
551.712 129.028 551.118 129.205 550.399 129.205  c
549.493 129.205 548.769 128.924 548.228 128.361  c
547.696 127.799 547.431 127.012 547.431 126.002  c
547.431 124.960 547.701 124.153 548.243 123.580  c
548.785 122.997 549.483 122.705 550.337 122.705  c
551.170 122.705 551.847 122.986 552.368 123.549  c
552.899 124.111 553.165 124.908 553.165 125.939  c
553.165 126.002 553.165 126.096 553.165 126.221  c
548.524 126.221 l
548.566 126.908 548.759 127.434 549.103 127.799  c
549.446 128.153 549.879 128.330 550.399 128.330  c
550.785 128.330 551.113 128.231 551.384 128.033  c
551.665 127.825 551.884 127.502 552.040 127.064  c
h
548.587 125.361 m
552.056 125.361 l
552.014 124.830 551.884 124.434 551.665 124.174  c
551.321 123.768 550.884 123.564 550.353 123.564  c
549.863 123.564 549.451 123.726 549.118 124.049  c
548.795 124.372 548.618 124.809 548.587 125.361  c
h
555.604 129.064 m
553.698 122.846 l
554.792 122.846 l
555.776 126.439 l
556.151 127.768 l
556.172 127.705 556.282 127.278 556.479 126.486  c
557.464 122.846 l
558.542 122.846 l
559.479 126.455 l
559.792 127.643 l
560.151 126.439 l
561.214 122.846 l
562.245 122.846 l
560.292 129.064 l
559.198 129.064 l
558.214 125.330 l
557.964 124.283 l
556.714 129.064 l
555.604 129.064 l
h
562.739 125.955 m
562.739 124.799 563.057 123.945 563.692 123.393  c
564.224 122.934 564.875 122.705 565.646 122.705  c
566.500 122.705 567.198 122.986 567.739 123.549  c
568.291 124.101 568.567 124.872 568.567 125.861  c
568.567 126.663 568.448 127.294 568.208 127.752  c
567.968 128.210 567.614 128.570 567.146 128.830  c
566.687 129.080 566.187 129.205 565.646 129.205  c
564.781 129.205 564.078 128.929 563.536 128.377  c
563.005 127.814 562.739 127.007 562.739 125.955  c
h
563.817 125.955 m
563.817 126.747 563.989 127.340 564.333 127.736  c
564.687 128.132 565.125 128.330 565.646 128.330  c
566.177 128.330 566.614 128.132 566.958 127.736  c
567.302 127.340 567.474 126.736 567.474 125.924  c
567.474 125.153 567.297 124.570 566.942 124.174  c
566.599 123.778 566.166 123.580 565.646 123.580  c
565.125 123.580 564.687 123.778 564.333 124.174  c
563.989 124.559 563.817 125.153 563.817 125.955  c
h
569.788 129.064 m
569.788 122.846 l
570.741 122.846 l
570.741 123.783 l
570.981 123.346 571.200 123.059 571.397 122.924  c
571.606 122.778 571.835 122.705 572.085 122.705  c
572.439 122.705 572.799 122.814 573.163 123.033  c
572.804 124.018 l
572.543 123.861 572.288 123.783 572.038 123.783  c
571.799 123.783 571.585 123.856 571.397 124.002  c
571.220 124.137 571.095 124.330 571.022 124.580  c
570.897 124.955 570.835 125.361 570.835 125.799  c
570.835 129.064 l
569.788 129.064 l
h
573.800 129.064 m
573.800 120.471 l
574.862 120.471 l
574.862 125.377 l
577.347 122.846 l
578.722 122.846 l
576.331 125.143 l
578.956 129.064 l
577.659 129.064 l
575.597 125.877 l
574.862 126.596 l
574.862 129.064 l
573.800 129.064 l
h
f
2 J
10.0000 M
Q
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [697.0 60.0 777.0 100.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 1.0 0.8]
         /C1 [0.2 0.6 0.4]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
697.000 60.0000 m
777.000 60.0000 l
777.000 100.000 l
697.000 100.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
697.000 60.0000 m
777.000 60.0000 l
777.000 100.000 l
697.000 100.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
726.203 84.7139 m
726.203 76.1201 l
727.344 76.1201 l
727.344 83.6982 l
731.578 83.6982 l
731.578 84.7139 l
726.203 84.7139 l
h
732.877 84.7139 m
732.877 76.1201 l
734.018 76.1201 l
734.018 83.6982 l
738.252 83.6982 l
738.252 84.7139 l
732.877 84.7139 l
h
739.566 84.7139 m
739.566 76.1201 l
741.285 76.1201 l
743.316 82.1982 l
743.504 82.7712 743.639 83.1982 743.723 83.4795  c
743.816 83.1670 743.967 82.7087 744.176 82.1045  c
746.238 76.1201 l
747.770 76.1201 l
747.770 84.7139 l
746.676 84.7139 l
746.676 77.5264 l
744.176 84.7139 l
743.145 84.7139 l
740.660 77.4014 l
740.660 84.7139 l
739.566 84.7139 l
h
f
2 J
10.0000 M
Q
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [697.0 130.0 777.0 170.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 0.6]
         /C1 [1.0 1.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
697.000 130.000 m
777.000 130.000 l
777.000 170.000 l
697.000 170.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
697.000 130.000 m
777.000 130.000 l
777.000 170.000 l
697.000 170.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
724.936 154.714 m
724.936 146.120 l
728.748 146.120 l
729.519 146.120 730.102 146.198 730.498 146.354  c
730.894 146.511 731.212 146.787 731.451 147.183  c
731.691 147.568 731.811 147.995 731.811 148.464  c
731.811 149.078 731.613 149.594 731.217 150.011  c
730.821 150.427 730.212 150.693 729.389 150.808  c
729.691 150.953 729.920 151.094 730.076 151.229  c
730.410 151.532 730.722 151.912 731.014 152.370  c
732.514 154.714 l
731.076 154.714 l
729.951 152.933 l
729.618 152.412 729.342 152.016 729.123 151.745  c
728.915 151.474 728.722 151.287 728.545 151.183  c
728.378 151.068 728.206 150.985 728.029 150.933  c
727.904 150.912 727.696 150.901 727.404 150.901  c
726.076 150.901 l
726.076 154.714 l
724.936 154.714 l
h
726.076 149.917 m
728.529 149.917 l
729.040 149.917 729.441 149.865 729.732 149.761  c
730.035 149.646 730.258 149.474 730.404 149.245  c
730.561 149.006 730.639 148.745 730.639 148.464  c
730.639 148.058 730.488 147.724 730.186 147.464  c
729.894 147.203 729.430 147.073 728.795 147.073  c
726.076 147.073 l
726.076 149.917 l
h
732.648 154.714 m
735.945 146.120 l
737.164 146.120 l
740.680 154.714 l
739.398 154.714 l
738.383 152.104 l
734.805 152.104 l
733.852 154.714 l
732.648 154.714 l
h
735.133 151.183 m
738.039 151.183 l
737.148 148.808 l
736.867 148.089 736.664 147.495 736.539 147.026  c
736.424 147.578 736.268 148.125 736.070 148.667  c
735.133 151.183 l
h
745.621 151.339 m
745.621 150.339 l
749.246 150.323 l
749.246 153.511 l
748.694 153.959 748.121 154.297 747.527 154.526  c
746.934 154.745 746.324 154.854 745.699 154.854  c
744.855 154.854 744.085 154.677 743.387 154.323  c
742.699 153.959 742.178 153.438 741.824 152.761  c
741.480 152.073 741.309 151.308 741.309 150.464  c
741.309 149.620 741.480 148.839 741.824 148.120  c
742.178 147.391 742.684 146.854 743.340 146.511  c
743.996 146.157 744.751 145.979 745.605 145.979  c
746.230 145.979 746.793 146.078 747.293 146.276  c
747.793 146.474 748.184 146.756 748.465 147.120  c
748.757 147.474 748.975 147.943 749.121 148.526  c
748.105 148.808 l
747.970 148.370 747.803 148.026 747.605 147.776  c
747.418 147.526 747.147 147.328 746.793 147.183  c
746.439 147.026 746.048 146.948 745.621 146.948  c
745.100 146.948 744.647 147.026 744.262 147.183  c
743.887 147.339 743.579 147.547 743.340 147.808  c
743.111 148.068 742.934 148.354 742.809 148.667  c
742.590 149.198 742.480 149.771 742.480 150.386  c
742.480 151.157 742.611 151.802 742.871 152.323  c
743.142 152.834 743.527 153.214 744.027 153.464  c
744.527 153.714 745.064 153.839 745.637 153.839  c
746.126 153.839 746.605 153.745 747.074 153.558  c
747.543 153.360 747.897 153.157 748.137 152.948  c
748.137 151.339 l
745.621 151.339 l
h
f
2 J
10.0000 M
Q
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [765.0 210.0 845.0 250.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 0.6]
         /C1 [1.0 1.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
765.000 210.000 m
845.000 210.000 l
845.000 250.000 l
765.000 250.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
765.000 210.000 m
845.000 210.000 l
845.000 250.000 l
765.000 250.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
783.911 234.714 m
783.911 226.120 l
787.161 226.120 l
787.724 226.120 788.156 226.146 788.458 226.198  c
788.885 226.271 789.239 226.407 789.521 226.604  c
789.812 226.802 790.041 227.078 790.208 227.433  c
790.385 227.787 790.474 228.177 790.474 228.604  c
790.474 229.334 790.239 229.953 789.771 230.464  c
789.312 230.964 788.474 231.214 787.255 231.214  c
785.052 231.214 l
785.052 234.714 l
783.911 234.714 l
h
785.052 230.214 m
787.271 230.214 l
788.010 230.214 788.531 230.078 788.833 229.808  c
789.146 229.526 789.302 229.136 789.302 228.636  c
789.302 228.282 789.208 227.979 789.021 227.729  c
788.843 227.469 788.609 227.297 788.317 227.214  c
788.119 227.162 787.765 227.136 787.255 227.136  c
785.052 227.136 l
785.052 230.214 l
h
791.774 234.714 m
791.774 228.495 l
792.728 228.495 l
792.728 229.433 l
792.967 228.995 793.186 228.709 793.384 228.573  c
793.592 228.427 793.821 228.354 794.071 228.354  c
794.425 228.354 794.785 228.464 795.149 228.683  c
794.790 229.667 l
794.530 229.511 794.274 229.433 794.024 229.433  c
793.785 229.433 793.571 229.506 793.384 229.651  c
793.207 229.787 793.082 229.979 793.009 230.229  c
792.884 230.604 792.821 231.011 792.821 231.448  c
792.821 234.714 l
791.774 234.714 l
h
795.396 231.604 m
795.396 230.448 795.713 229.594 796.349 229.042  c
796.880 228.584 797.531 228.354 798.302 228.354  c
799.156 228.354 799.854 228.636 800.396 229.198  c
800.948 229.750 801.224 230.521 801.224 231.511  c
801.224 232.313 801.104 232.943 800.864 233.401  c
800.625 233.860 800.271 234.219 799.802 234.479  c
799.343 234.729 798.843 234.854 798.302 234.854  c
797.437 234.854 796.734 234.578 796.192 234.026  c
795.661 233.464 795.396 232.657 795.396 231.604  c
h
796.474 231.604 m
796.474 232.396 796.646 232.990 796.989 233.386  c
797.343 233.782 797.781 233.979 798.302 233.979  c
798.833 233.979 799.271 233.782 799.614 233.386  c
799.958 232.990 800.130 232.386 800.130 231.573  c
800.130 230.802 799.953 230.219 799.599 229.823  c
799.255 229.427 798.823 229.229 798.302 229.229  c
797.781 229.229 797.343 229.427 796.989 229.823  c
796.646 230.209 796.474 230.802 796.474 231.604  c
h
802.444 227.354 m
802.444 226.120 l
803.507 226.120 l
803.507 227.354 l
802.444 227.354 l
h
801.116 237.136 m
801.304 236.229 l
801.522 236.282 801.689 236.308 801.804 236.308  c
802.022 236.308 802.184 236.235 802.288 236.089  c
802.392 235.953 802.444 235.599 802.444 235.026  c
802.444 228.495 l
803.507 228.495 l
803.507 235.058 l
803.507 235.818 803.408 236.349 803.210 236.651  c
802.950 237.047 802.528 237.245 801.944 237.245  c
801.653 237.245 801.377 237.209 801.116 237.136  c
h
809.376 232.714 m
810.470 232.839 l
810.303 233.474 809.985 233.969 809.517 234.323  c
809.048 234.677 808.454 234.854 807.735 234.854  c
806.829 234.854 806.105 234.573 805.563 234.011  c
805.032 233.448 804.767 232.662 804.767 231.651  c
804.767 230.610 805.037 229.802 805.579 229.229  c
806.121 228.646 806.819 228.354 807.673 228.354  c
808.506 228.354 809.183 228.636 809.704 229.198  c
810.235 229.761 810.501 230.558 810.501 231.589  c
810.501 231.651 810.501 231.745 810.501 231.870  c
805.860 231.870 l
805.902 232.558 806.095 233.084 806.438 233.448  c
806.782 233.802 807.215 233.979 807.735 233.979  c
808.121 233.979 808.449 233.881 808.720 233.683  c
809.001 233.474 809.220 233.151 809.376 232.714  c
h
805.923 231.011 m
809.392 231.011 l
809.350 230.479 809.220 230.084 809.001 229.823  c
808.657 229.417 808.220 229.214 807.688 229.214  c
807.199 229.214 806.787 229.375 806.454 229.698  c
806.131 230.021 805.954 230.459 805.923 231.011  c
h
811.800 234.714 m
811.800 226.120 l
812.862 226.120 l
812.862 231.026 l
815.347 228.495 l
816.722 228.495 l
814.331 230.792 l
816.956 234.714 l
815.659 234.714 l
813.597 231.526 l
812.862 232.245 l
812.862 234.714 l
811.800 234.714 l
h
820.097 233.776 m
820.253 234.698 l
819.951 234.761 819.685 234.792 819.456 234.792  c
819.071 234.792 818.774 234.735 818.565 234.620  c
818.357 234.495 818.206 234.334 818.112 234.136  c
818.029 233.938 817.987 233.521 817.987 232.886  c
817.987 229.308 l
817.222 229.308 l
817.222 228.495 l
817.987 228.495 l
817.987 226.948 l
819.034 226.323 l
819.034 228.495 l
820.097 228.495 l
820.097 229.308 l
819.034 229.308 l
819.034 232.948 l
819.034 233.250 819.050 233.443 819.081 233.526  c
819.123 233.610 819.185 233.677 819.269 233.729  c
819.352 233.782 819.472 233.808 819.628 233.808  c
819.753 233.808 819.909 233.797 820.097 233.776  c
h
825.384 232.714 m
826.478 232.839 l
826.311 233.474 825.993 233.969 825.524 234.323  c
825.056 234.677 824.462 234.854 823.743 234.854  c
822.837 234.854 822.113 234.573 821.571 234.011  c
821.040 233.448 820.774 232.662 820.774 231.651  c
820.774 230.610 821.045 229.802 821.587 229.229  c
822.129 228.646 822.826 228.354 823.681 228.354  c
824.514 228.354 825.191 228.636 825.712 229.198  c
826.243 229.761 826.509 230.558 826.509 231.589  c
826.509 231.651 826.509 231.745 826.509 231.870  c
821.868 231.870 l
821.910 232.558 822.103 233.084 822.446 233.448  c
822.790 233.802 823.222 233.979 823.743 233.979  c
824.129 233.979 824.457 233.881 824.728 233.683  c
825.009 233.474 825.228 233.151 825.384 232.714  c
h
821.931 231.011 m
825.399 231.011 l
825.358 230.479 825.228 230.084 825.009 229.823  c
824.665 229.417 824.228 229.214 823.696 229.214  c
823.207 229.214 822.795 229.375 822.462 229.698  c
822.139 230.021 821.962 230.459 821.931 231.011  c
h
f
2 J
10.0000 M
Q
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [374.0 60.0 454.0 100.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
374.000 60.0000 m
454.000 60.0000 l
454.000 100.000 l
374.000 100.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
374.000 60.0000 m
454.000 60.0000 l
454.000 100.000 l
374.000 100.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
390.936 77.3633 m
390.936 68.7695 l
397.139 68.7695 l
397.139 69.7852 l
392.076 69.7852 l
392.076 72.4102 l
396.826 72.4102 l
396.826 73.4258 l
392.076 73.4258 l
392.076 76.3477 l
397.342 76.3477 l
397.342 77.3633 l
390.936 77.3633 l
h
398.783 69.9883 m
398.783 68.7695 l
399.846 68.7695 l
399.846 69.9883 l
398.783 69.9883 l
h
398.783 77.3633 m
398.783 71.1445 l
399.846 71.1445 l
399.846 77.3633 l
398.783 77.3633 l
h
401.449 77.3633 m
401.449 71.1445 l
402.387 71.1445 l
402.387 72.0195 l
402.845 71.3424 403.507 71.0039 404.371 71.0039  c
404.746 71.0039 405.090 71.0716 405.402 71.2070  c
405.725 71.3424 405.965 71.5195 406.121 71.7383  c
406.277 71.9570 406.387 72.2122 406.449 72.5039  c
406.480 72.7018 406.496 73.0456 406.496 73.5352  c
406.496 77.3633 l
405.449 77.3633 l
405.449 73.5820 l
405.449 73.1445 405.408 72.8216 405.324 72.6133  c
405.241 72.4049 405.095 72.2383 404.887 72.1133  c
404.678 71.9779 404.434 71.9102 404.152 71.9102  c
403.704 71.9102 403.314 72.0560 402.980 72.3477  c
402.658 72.6289 402.496 73.1654 402.496 73.9570  c
402.496 77.3633 l
401.449 77.3633 l
h
407.920 77.8789 m
408.951 78.0352 l
408.993 78.3477 409.113 78.5768 409.311 78.7227  c
409.571 78.9206 409.925 79.0195 410.373 79.0195  c
410.863 79.0195 411.238 78.9206 411.498 78.7227  c
411.769 78.5247 411.951 78.2539 412.045 77.9102  c
412.107 77.6914 412.133 77.2383 412.123 76.5508  c
411.665 77.0924 411.092 77.3633 410.404 77.3633  c
409.550 77.3633 408.889 77.0560 408.420 76.4414  c
407.951 75.8164 407.717 75.0768 407.717 74.2227  c
407.717 73.6289 407.821 73.0820 408.029 72.5820  c
408.248 72.0716 408.561 71.6810 408.967 71.4102  c
409.373 71.1393 409.852 71.0039 410.404 71.0039  c
411.144 71.0039 411.753 71.3008 412.232 71.8945  c
412.232 71.1445 l
413.201 71.1445 l
413.201 76.5195 l
413.201 77.4883 413.102 78.1758 412.904 78.5820  c
412.706 78.9883 412.394 79.3060 411.967 79.5352  c
411.540 79.7747 411.014 79.8945 410.389 79.8945  c
409.649 79.8945 409.050 79.7279 408.592 79.3945  c
408.133 79.0612 407.910 78.5560 407.920 77.8789  c
h
408.795 74.1445 m
408.795 74.9570 408.956 75.5508 409.279 75.9258  c
409.602 76.3008 410.008 76.4883 410.498 76.4883  c
410.988 76.4883 411.394 76.3008 411.717 75.9258  c
412.050 75.5508 412.217 74.9674 412.217 74.1758  c
412.217 73.4154 412.045 72.8424 411.701 72.4570  c
411.368 72.0716 410.962 71.8789 410.482 71.8789  c
410.014 71.8789 409.613 72.0716 409.279 72.4570  c
408.956 72.8320 408.795 73.3945 408.795 74.1445  c
h
418.859 76.5977 m
418.464 76.9310 418.083 77.1654 417.719 77.3008  c
417.365 77.4362 416.979 77.5039 416.562 77.5039  c
415.875 77.5039 415.349 77.3372 414.984 77.0039  c
414.620 76.6706 414.438 76.2435 414.438 75.7227  c
414.438 75.4206 414.505 75.1445 414.641 74.8945  c
414.776 74.6341 414.958 74.4310 415.188 74.2852  c
415.417 74.1289 415.672 74.0143 415.953 73.9414  c
416.151 73.8789 416.464 73.8216 416.891 73.7695  c
417.734 73.6758 418.359 73.5560 418.766 73.4102  c
418.766 73.2643 418.766 73.1758 418.766 73.1445  c
418.766 72.7070 418.667 72.3997 418.469 72.2227  c
418.198 71.9935 417.797 71.8789 417.266 71.8789  c
416.776 71.8789 416.411 71.9674 416.172 72.1445  c
415.932 72.3112 415.755 72.6133 415.641 73.0508  c
414.609 72.9102 l
414.703 72.4727 414.859 72.1185 415.078 71.8477  c
415.297 71.5768 415.609 71.3685 416.016 71.2227  c
416.422 71.0768 416.891 71.0039 417.422 71.0039  c
417.953 71.0039 418.385 71.0664 418.719 71.1914  c
419.052 71.3164 419.297 71.4727 419.453 71.6602  c
419.609 71.8477 419.719 72.0872 419.781 72.3789  c
419.812 72.5560 419.828 72.8789 419.828 73.3477  c
419.828 74.7539 l
419.828 75.7331 419.849 76.3529 419.891 76.6133  c
419.943 76.8737 420.036 77.1237 420.172 77.3633  c
419.062 77.3633 l
418.958 77.1445 418.891 76.8893 418.859 76.5977  c
h
418.766 74.2383 m
418.380 74.3945 417.807 74.5299 417.047 74.6445  c
416.609 74.7070 416.302 74.7799 416.125 74.8633  c
415.948 74.9362 415.807 75.0456 415.703 75.1914  c
415.609 75.3372 415.562 75.5039 415.562 75.6914  c
415.562 75.9727 415.667 76.2070 415.875 76.3945  c
416.094 76.5820 416.406 76.6758 416.812 76.6758  c
417.219 76.6758 417.578 76.5872 417.891 76.4102  c
418.214 76.2331 418.448 75.9883 418.594 75.6758  c
418.708 75.4362 418.766 75.0872 418.766 74.6289  c
418.766 74.2383 l
h
422.439 77.3633 m
421.455 77.3633 l
421.455 68.7695 l
422.518 68.7695 l
422.518 71.8320 l
422.965 71.2799 423.533 71.0039 424.221 71.0039  c
424.606 71.0039 424.965 71.0820 425.299 71.2383  c
425.643 71.3841 425.924 71.5977 426.143 71.8789  c
426.372 72.1602 426.549 72.4987 426.674 72.8945  c
426.799 73.2904 426.861 73.7122 426.861 74.1602  c
426.861 75.2227 426.596 76.0456 426.064 76.6289  c
425.533 77.2122 424.903 77.5039 424.174 77.5039  c
423.434 77.5039 422.856 77.1966 422.439 76.5820  c
422.439 77.3633 l
h
422.424 74.2070 m
422.424 74.9466 422.528 75.4831 422.736 75.8164  c
423.070 76.3581 423.518 76.6289 424.080 76.6289  c
424.538 76.6289 424.934 76.4310 425.268 76.0352  c
425.611 75.6393 425.783 75.0404 425.783 74.2383  c
425.783 73.4258 425.622 72.8268 425.299 72.4414  c
424.976 72.0560 424.585 71.8633 424.127 71.8633  c
423.669 71.8633 423.268 72.0664 422.924 72.4727  c
422.590 72.8685 422.424 73.4466 422.424 74.2070  c
h
432.395 75.3633 m
433.488 75.4883 l
433.322 76.1237 433.004 76.6185 432.535 76.9727  c
432.066 77.3268 431.473 77.5039 430.754 77.5039  c
429.848 77.5039 429.124 77.2227 428.582 76.6602  c
428.051 76.0977 427.785 75.3112 427.785 74.3008  c
427.785 73.2591 428.056 72.4518 428.598 71.8789  c
429.139 71.2956 429.837 71.0039 430.691 71.0039  c
431.525 71.0039 432.202 71.2852 432.723 71.8477  c
433.254 72.4102 433.520 73.2070 433.520 74.2383  c
433.520 74.3008 433.520 74.3945 433.520 74.5195  c
428.879 74.5195 l
428.921 75.2070 429.113 75.7331 429.457 76.0977  c
429.801 76.4518 430.233 76.6289 430.754 76.6289  c
431.139 76.6289 431.467 76.5299 431.738 76.3320  c
432.020 76.1237 432.238 75.8008 432.395 75.3633  c
h
428.941 73.6602 m
432.410 73.6602 l
432.368 73.1289 432.238 72.7331 432.020 72.4727  c
431.676 72.0664 431.238 71.8633 430.707 71.8633  c
430.217 71.8633 429.806 72.0247 429.473 72.3477  c
429.150 72.6706 428.973 73.1081 428.941 73.6602  c
h
434.396 74.7852 m
434.396 73.7227 l
437.646 73.7227 l
437.646 74.7852 l
434.396 74.7852 l
h
f
newpath
393.042 92.0645 m
393.042 86.6582 l
392.104 86.6582 l
392.104 85.8457 l
393.042 85.8457 l
393.042 85.1738 l
393.042 84.7572 393.078 84.4499 393.151 84.2520  c
393.256 83.9707 393.433 83.7467 393.683 83.5801  c
393.943 83.4134 394.302 83.3301 394.761 83.3301  c
395.063 83.3301 395.391 83.3665 395.745 83.4395  c
395.589 84.3457 l
395.370 84.3145 395.162 84.2988 394.964 84.2988  c
394.641 84.2988 394.412 84.3665 394.276 84.5020  c
394.151 84.6374 394.089 84.8926 394.089 85.2676  c
394.089 85.8457 l
395.308 85.8457 l
395.308 86.6582 l
394.089 86.6582 l
394.089 92.0645 l
393.042 92.0645 l
h
395.735 88.9551 m
395.735 87.7988 396.053 86.9447 396.688 86.3926  c
397.220 85.9342 397.871 85.7051 398.642 85.7051  c
399.496 85.7051 400.194 85.9863 400.735 86.5488  c
401.287 87.1009 401.563 87.8717 401.563 88.8613  c
401.563 89.6634 401.444 90.2936 401.204 90.7520  c
400.965 91.2103 400.610 91.5697 400.142 91.8301  c
399.683 92.0801 399.183 92.2051 398.642 92.2051  c
397.777 92.2051 397.074 91.9290 396.532 91.3770  c
396.001 90.8145 395.735 90.0072 395.735 88.9551  c
h
396.813 88.9551 m
396.813 89.7467 396.985 90.3405 397.329 90.7363  c
397.683 91.1322 398.121 91.3301 398.642 91.3301  c
399.173 91.3301 399.610 91.1322 399.954 90.7363  c
400.298 90.3405 400.470 89.7363 400.470 88.9238  c
400.470 88.1530 400.293 87.5697 399.938 87.1738  c
399.595 86.7780 399.162 86.5801 398.642 86.5801  c
398.121 86.5801 397.683 86.7780 397.329 87.1738  c
396.985 87.5592 396.813 88.1530 396.813 88.9551  c
h
402.784 92.0645 m
402.784 85.8457 l
403.737 85.8457 l
403.737 86.7832 l
403.977 86.3457 404.196 86.0592 404.394 85.9238  c
404.602 85.7780 404.831 85.7051 405.081 85.7051  c
405.435 85.7051 405.795 85.8145 406.159 86.0332  c
405.800 87.0176 l
405.539 86.8613 405.284 86.7832 405.034 86.7832  c
404.795 86.7832 404.581 86.8561 404.394 87.0020  c
404.216 87.1374 404.091 87.3301 404.019 87.5801  c
403.894 87.9551 403.831 88.3613 403.831 88.7988  c
403.831 92.0645 l
402.784 92.0645 l
h
406.796 92.0645 m
406.796 85.8457 l
407.733 85.8457 l
407.733 86.7207 l
407.931 86.4082 408.192 86.1634 408.515 85.9863  c
408.838 85.7988 409.207 85.7051 409.624 85.7051  c
410.082 85.7051 410.457 85.7988 410.749 85.9863  c
411.051 86.1738 411.259 86.4395 411.374 86.7832  c
411.874 86.0645 412.515 85.7051 413.296 85.7051  c
413.921 85.7051 414.395 85.8770 414.718 86.2207  c
415.051 86.5540 415.218 87.0801 415.218 87.7988  c
415.218 92.0645 l
414.171 92.0645 l
414.171 88.1426 l
414.171 87.7259 414.134 87.4238 414.062 87.2363  c
413.999 87.0488 413.879 86.8978 413.702 86.7832  c
413.525 86.6686 413.312 86.6113 413.062 86.6113  c
412.624 86.6113 412.259 86.7572 411.968 87.0488  c
411.687 87.3405 411.546 87.8092 411.546 88.4551  c
411.546 92.0645 l
410.483 92.0645 l
410.483 88.0176 l
410.483 87.5488 410.395 87.1999 410.218 86.9707  c
410.051 86.7311 409.775 86.6113 409.390 86.6113  c
409.088 86.6113 408.812 86.6895 408.562 86.8457  c
408.312 87.0020 408.129 87.2311 408.015 87.5332  c
407.900 87.8353 407.843 88.2676 407.843 88.8301  c
407.843 92.0645 l
406.796 92.0645 l
h
420.870 92.0645 m
420.870 91.1426 l
420.381 91.8509 419.719 92.2051 418.886 92.2051  c
418.521 92.2051 418.177 92.1374 417.854 92.0020  c
417.542 91.8561 417.308 91.6790 417.151 91.4707  c
416.995 91.2520 416.886 90.9863 416.823 90.6738  c
416.782 90.4759 416.761 90.1478 416.761 89.6895  c
416.761 85.8457 l
417.823 85.8457 l
417.823 89.2988 l
417.823 89.8405 417.844 90.2103 417.886 90.4082  c
417.948 90.6790 418.084 90.8978 418.292 91.0645  c
418.511 91.2207 418.782 91.2988 419.104 91.2988  c
419.417 91.2988 419.709 91.2207 419.979 91.0645  c
420.261 90.8978 420.459 90.6738 420.573 90.3926  c
420.698 90.1113 420.761 89.7051 420.761 89.1738  c
420.761 85.8457 l
421.808 85.8457 l
421.808 92.0645 l
420.870 92.0645 l
h
423.435 92.0645 m
423.435 83.4707 l
424.497 83.4707 l
424.497 92.0645 l
423.435 92.0645 l
h
430.194 91.2988 m
429.799 91.6322 429.418 91.8665 429.054 92.0020  c
428.700 92.1374 428.314 92.2051 427.897 92.2051  c
427.210 92.2051 426.684 92.0384 426.319 91.7051  c
425.955 91.3717 425.772 90.9447 425.772 90.4238  c
425.772 90.1217 425.840 89.8457 425.976 89.5957  c
426.111 89.3353 426.293 89.1322 426.522 88.9863  c
426.752 88.8301 427.007 88.7155 427.288 88.6426  c
427.486 88.5801 427.799 88.5228 428.226 88.4707  c
429.069 88.3770 429.694 88.2572 430.101 88.1113  c
430.101 87.9655 430.101 87.8770 430.101 87.8457  c
430.101 87.4082 430.002 87.1009 429.804 86.9238  c
429.533 86.6947 429.132 86.5801 428.601 86.5801  c
428.111 86.5801 427.746 86.6686 427.507 86.8457  c
427.267 87.0124 427.090 87.3145 426.976 87.7520  c
425.944 87.6113 l
426.038 87.1738 426.194 86.8197 426.413 86.5488  c
426.632 86.2780 426.944 86.0697 427.351 85.9238  c
427.757 85.7780 428.226 85.7051 428.757 85.7051  c
429.288 85.7051 429.720 85.7676 430.054 85.8926  c
430.387 86.0176 430.632 86.1738 430.788 86.3613  c
430.944 86.5488 431.054 86.7884 431.116 87.0801  c
431.147 87.2572 431.163 87.5801 431.163 88.0488  c
431.163 89.4551 l
431.163 90.4342 431.184 91.0540 431.226 91.3145  c
431.278 91.5749 431.371 91.8249 431.507 92.0645  c
430.397 92.0645 l
430.293 91.8457 430.226 91.5905 430.194 91.2988  c
h
430.101 88.9395 m
429.715 89.0957 429.142 89.2311 428.382 89.3457  c
427.944 89.4082 427.637 89.4811 427.460 89.5645  c
427.283 89.6374 427.142 89.7467 427.038 89.8926  c
426.944 90.0384 426.897 90.2051 426.897 90.3926  c
426.897 90.6738 427.002 90.9082 427.210 91.0957  c
427.429 91.2832 427.741 91.3770 428.147 91.3770  c
428.554 91.3770 428.913 91.2884 429.226 91.1113  c
429.549 90.9342 429.783 90.6895 429.929 90.3770  c
430.043 90.1374 430.101 89.7884 430.101 89.3301  c
430.101 88.9395 l
h
432.790 92.0645 m
432.790 85.8457 l
433.743 85.8457 l
433.743 86.7832 l
433.983 86.3457 434.201 86.0592 434.399 85.9238  c
434.608 85.7780 434.837 85.7051 435.087 85.7051  c
435.441 85.7051 435.800 85.8145 436.165 86.0332  c
435.806 87.0176 l
435.545 86.8613 435.290 86.7832 435.040 86.7832  c
434.800 86.7832 434.587 86.8561 434.399 87.0020  c
434.222 87.1374 434.097 87.3301 434.024 87.5801  c
433.899 87.9551 433.837 88.3613 433.837 88.7988  c
433.837 92.0645 l
432.790 92.0645 l
h
f
2 J
10.0000 M
Q
q
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [374.0 130.0 454.0 170.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
374.000 130.000 m
454.000 130.000 l
454.000 170.000 l
374.000 170.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
374.000 130.000 m
454.000 130.000 l
454.000 170.000 l
374.000 170.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
405.123 147.363 m
405.123 138.770 l
406.248 138.770 l
406.248 147.363 l
405.123 147.363 l
h
408.254 147.363 m
408.254 138.770 l
411.223 138.770 l
411.889 138.770 412.400 138.811 412.754 138.895  c
413.243 139.009 413.660 139.212 414.004 139.504  c
414.462 139.889 414.801 140.384 415.020 140.988  c
415.249 141.582 415.363 142.259 415.363 143.020  c
415.363 143.676 415.285 144.254 415.129 144.754  c
414.983 145.254 414.790 145.671 414.551 146.004  c
414.311 146.337 414.046 146.598 413.754 146.785  c
413.473 146.973 413.134 147.118 412.738 147.223  c
412.342 147.316 411.884 147.363 411.363 147.363  c
408.254 147.363 l
h
409.395 146.348 m
411.223 146.348 l
411.796 146.348 412.243 146.296 412.566 146.191  c
412.889 146.087 413.145 145.936 413.332 145.738  c
413.603 145.478 413.811 145.118 413.957 144.660  c
414.113 144.202 414.191 143.650 414.191 143.004  c
414.191 142.108 414.040 141.421 413.738 140.941  c
413.447 140.452 413.092 140.124 412.676 139.957  c
412.363 139.842 411.874 139.785 411.207 139.785  c
409.395 139.785 l
409.395 146.348 l
h
416.951 147.363 m
416.951 138.770 l
423.154 138.770 l
423.154 139.785 l
418.092 139.785 l
418.092 142.410 l
422.842 142.410 l
422.842 143.426 l
418.092 143.426 l
418.092 146.348 l
423.357 146.348 l
423.357 147.363 l
416.951 147.363 l
h
f
newpath
386.771 162.064 m
386.771 153.471 l
387.896 153.471 l
387.896 162.064 l
386.771 162.064 l
h
389.777 162.064 m
389.777 155.846 l
390.715 155.846 l
390.715 156.721 l
391.173 156.044 391.835 155.705 392.699 155.705  c
393.074 155.705 393.418 155.773 393.730 155.908  c
394.053 156.044 394.293 156.221 394.449 156.439  c
394.605 156.658 394.715 156.913 394.777 157.205  c
394.809 157.403 394.824 157.747 394.824 158.236  c
394.824 162.064 l
393.777 162.064 l
393.777 158.283 l
393.777 157.846 393.736 157.523 393.652 157.314  c
393.569 157.106 393.423 156.939 393.215 156.814  c
393.007 156.679 392.762 156.611 392.480 156.611  c
392.033 156.611 391.642 156.757 391.309 157.049  c
390.986 157.330 390.824 157.867 390.824 158.658  c
390.824 162.064 l
389.777 162.064 l
h
398.748 161.127 m
398.904 162.049 l
398.602 162.111 398.337 162.143 398.107 162.143  c
397.722 162.143 397.425 162.085 397.217 161.971  c
397.008 161.846 396.857 161.684 396.764 161.486  c
396.680 161.288 396.639 160.872 396.639 160.236  c
396.639 156.658 l
395.873 156.658 l
395.873 155.846 l
396.639 155.846 l
396.639 154.299 l
397.686 153.674 l
397.686 155.846 l
398.748 155.846 l
398.748 156.658 l
397.686 156.658 l
397.686 160.299 l
397.686 160.601 397.701 160.794 397.732 160.877  c
397.774 160.960 397.837 161.028 397.920 161.080  c
398.003 161.132 398.123 161.158 398.279 161.158  c
398.404 161.158 398.561 161.148 398.748 161.127  c
h
404.035 160.064 m
405.129 160.189 l
404.962 160.825 404.645 161.320 404.176 161.674  c
403.707 162.028 403.113 162.205 402.395 162.205  c
401.488 162.205 400.764 161.924 400.223 161.361  c
399.691 160.799 399.426 160.012 399.426 159.002  c
399.426 157.960 399.697 157.153 400.238 156.580  c
400.780 155.997 401.478 155.705 402.332 155.705  c
403.165 155.705 403.842 155.986 404.363 156.549  c
404.895 157.111 405.160 157.908 405.160 158.939  c
405.160 159.002 405.160 159.096 405.160 159.221  c
400.520 159.221 l
400.561 159.908 400.754 160.434 401.098 160.799  c
401.441 161.153 401.874 161.330 402.395 161.330  c
402.780 161.330 403.108 161.231 403.379 161.033  c
403.660 160.825 403.879 160.502 404.035 160.064  c
h
400.582 158.361 m
404.051 158.361 l
404.009 157.830 403.879 157.434 403.660 157.174  c
403.316 156.768 402.879 156.564 402.348 156.564  c
401.858 156.564 401.447 156.726 401.113 157.049  c
400.790 157.372 400.613 157.809 400.582 158.361  c
h
406.256 162.580 m
407.287 162.736 l
407.329 163.049 407.449 163.278 407.646 163.424  c
407.907 163.622 408.261 163.721 408.709 163.721  c
409.199 163.721 409.574 163.622 409.834 163.424  c
410.105 163.226 410.287 162.955 410.381 162.611  c
410.443 162.393 410.469 161.939 410.459 161.252  c
410.001 161.794 409.428 162.064 408.740 162.064  c
407.886 162.064 407.225 161.757 406.756 161.143  c
406.287 160.518 406.053 159.778 406.053 158.924  c
406.053 158.330 406.157 157.783 406.365 157.283  c
406.584 156.773 406.896 156.382 407.303 156.111  c
407.709 155.840 408.188 155.705 408.740 155.705  c
409.480 155.705 410.089 156.002 410.568 156.596  c
410.568 155.846 l
411.537 155.846 l
411.537 161.221 l
411.537 162.189 411.438 162.877 411.240 163.283  c
411.042 163.689 410.730 164.007 410.303 164.236  c
409.876 164.476 409.350 164.596 408.725 164.596  c
407.985 164.596 407.386 164.429 406.928 164.096  c
406.469 163.762 406.245 163.257 406.256 162.580  c
h
407.131 158.846 m
407.131 159.658 407.292 160.252 407.615 160.627  c
407.938 161.002 408.344 161.189 408.834 161.189  c
409.324 161.189 409.730 161.002 410.053 160.627  c
410.386 160.252 410.553 159.669 410.553 158.877  c
410.553 158.117 410.381 157.544 410.037 157.158  c
409.704 156.773 409.298 156.580 408.818 156.580  c
408.350 156.580 407.949 156.773 407.615 157.158  c
407.292 157.533 407.131 158.096 407.131 158.846  c
h
413.117 162.064 m
413.117 155.846 l
414.070 155.846 l
414.070 156.783 l
414.310 156.346 414.529 156.059 414.727 155.924  c
414.935 155.778 415.164 155.705 415.414 155.705  c
415.768 155.705 416.128 155.814 416.492 156.033  c
416.133 157.018 l
415.872 156.861 415.617 156.783 415.367 156.783  c
415.128 156.783 414.914 156.856 414.727 157.002  c
414.549 157.137 414.424 157.330 414.352 157.580  c
414.227 157.955 414.164 158.361 414.164 158.799  c
414.164 162.064 l
413.117 162.064 l
h
421.191 161.299 m
420.796 161.632 420.415 161.867 420.051 162.002  c
419.697 162.137 419.311 162.205 418.895 162.205  c
418.207 162.205 417.681 162.038 417.316 161.705  c
416.952 161.372 416.770 160.945 416.770 160.424  c
416.770 160.122 416.837 159.846 416.973 159.596  c
417.108 159.335 417.290 159.132 417.520 158.986  c
417.749 158.830 418.004 158.715 418.285 158.643  c
418.483 158.580 418.796 158.523 419.223 158.471  c
420.066 158.377 420.691 158.257 421.098 158.111  c
421.098 157.965 421.098 157.877 421.098 157.846  c
421.098 157.408 420.999 157.101 420.801 156.924  c
420.530 156.695 420.129 156.580 419.598 156.580  c
419.108 156.580 418.743 156.669 418.504 156.846  c
418.264 157.012 418.087 157.314 417.973 157.752  c
416.941 157.611 l
417.035 157.174 417.191 156.820 417.410 156.549  c
417.629 156.278 417.941 156.070 418.348 155.924  c
418.754 155.778 419.223 155.705 419.754 155.705  c
420.285 155.705 420.717 155.768 421.051 155.893  c
421.384 156.018 421.629 156.174 421.785 156.361  c
421.941 156.549 422.051 156.788 422.113 157.080  c
422.145 157.257 422.160 157.580 422.160 158.049  c
422.160 159.455 l
422.160 160.434 422.181 161.054 422.223 161.314  c
422.275 161.575 422.368 161.825 422.504 162.064  c
421.395 162.064 l
421.290 161.846 421.223 161.590 421.191 161.299  c
h
421.098 158.939 m
420.712 159.096 420.139 159.231 419.379 159.346  c
418.941 159.408 418.634 159.481 418.457 159.564  c
418.280 159.637 418.139 159.747 418.035 159.893  c
417.941 160.038 417.895 160.205 417.895 160.393  c
417.895 160.674 417.999 160.908 418.207 161.096  c
418.426 161.283 418.738 161.377 419.145 161.377  c
419.551 161.377 419.910 161.288 420.223 161.111  c
420.546 160.934 420.780 160.689 420.926 160.377  c
421.040 160.137 421.098 159.788 421.098 159.330  c
421.098 158.939 l
h
426.100 161.127 m
426.256 162.049 l
425.954 162.111 425.688 162.143 425.459 162.143  c
425.074 162.143 424.777 162.085 424.568 161.971  c
424.360 161.846 424.209 161.684 424.115 161.486  c
424.032 161.288 423.990 160.872 423.990 160.236  c
423.990 156.658 l
423.225 156.658 l
423.225 155.846 l
423.990 155.846 l
423.990 154.299 l
425.037 153.674 l
425.037 155.846 l
426.100 155.846 l
426.100 156.658 l
425.037 156.658 l
425.037 160.299 l
425.037 160.601 425.053 160.794 425.084 160.877  c
425.126 160.960 425.188 161.028 425.271 161.080  c
425.355 161.132 425.475 161.158 425.631 161.158  c
425.756 161.158 425.912 161.148 426.100 161.127  c
h
427.137 154.689 m
427.137 153.471 l
428.199 153.471 l
428.199 154.689 l
427.137 154.689 l
h
427.137 162.064 m
427.137 155.846 l
428.199 155.846 l
428.199 162.064 l
427.137 162.064 l
h
429.412 158.955 m
429.412 157.799 429.730 156.945 430.365 156.393  c
430.896 155.934 431.548 155.705 432.318 155.705  c
433.173 155.705 433.870 155.986 434.412 156.549  c
434.964 157.101 435.240 157.872 435.240 158.861  c
435.240 159.663 435.120 160.294 434.881 160.752  c
434.641 161.210 434.287 161.570 433.818 161.830  c
433.360 162.080 432.860 162.205 432.318 162.205  c
431.454 162.205 430.751 161.929 430.209 161.377  c
429.678 160.814 429.412 160.007 429.412 158.955  c
h
430.490 158.955 m
430.490 159.747 430.662 160.340 431.006 160.736  c
431.360 161.132 431.798 161.330 432.318 161.330  c
432.850 161.330 433.287 161.132 433.631 160.736  c
433.975 160.340 434.146 159.736 434.146 158.924  c
434.146 158.153 433.969 157.570 433.615 157.174  c
433.271 156.778 432.839 156.580 432.318 156.580  c
431.798 156.580 431.360 156.778 431.006 157.174  c
430.662 157.559 430.490 158.153 430.490 158.955  c
h
436.477 162.064 m
436.477 155.846 l
437.414 155.846 l
437.414 156.721 l
437.872 156.044 438.534 155.705 439.398 155.705  c
439.773 155.705 440.117 155.773 440.430 155.908  c
440.753 156.044 440.992 156.221 441.148 156.439  c
441.305 156.658 441.414 156.913 441.477 157.205  c
441.508 157.403 441.523 157.747 441.523 158.236  c
441.523 162.064 l
440.477 162.064 l
440.477 158.283 l
440.477 157.846 440.435 157.523 440.352 157.314  c
440.268 157.106 440.122 156.939 439.914 156.814  c
439.706 156.679 439.461 156.611 439.180 156.611  c
438.732 156.611 438.341 156.757 438.008 157.049  c
437.685 157.330 437.523 157.867 437.523 158.658  c
437.523 162.064 l
436.477 162.064 l
h
f
2 J
10.0000 M
Q
0 J
1.45000 M
newpath
549.000 137.001 m
549.000 230.000 l
608.019 230.000 l
S
newpath
616.019 230.000 m
604.019 225.000 l
607.019 230.000 l
604.019 235.000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
588.966 103.000 m
619.500 103.000 l
619.500 80.0000 l
688.982 80.0000 l
S
newpath
696.982 80.0000 m
684.982 75.0000 l
687.982 80.0000 l
684.982 85.0000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
588.966 130.000 m
619.500 130.000 l
619.500 150.000 l
688.982 150.000 l
S
newpath
696.982 150.000 m
684.982 145.000 l
687.982 150.000 l
684.982 155.000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
737.000 169.961 m
737.000 230.000 l
683.993 230.000 l
S
newpath
675.993 230.000 m
687.993 235.000 l
684.993 230.000 l
687.993 225.000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
777.010 150.000 m
805.000 150.000 l
805.000 201.961 l
S
newpath
805.000 209.961 m
810.000 197.961 l
805.000 200.961 l
800.000 197.961 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
279.000 97.0215 m
279.000 80.0000 l
366.021 80.0000 l
S
newpath
374.021 80.0000 m
362.021 75.0000 l
365.021 80.0000 l
362.021 85.0000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
453.979 80.0000 m
481.500 80.0000 l
481.500 103.000 l
501.021 103.000 l
S
newpath
509.021 103.000 m
497.021 98.0000 l
500.021 103.000 l
497.021 108.000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
279.000 137.013 m
279.000 150.000 l
366.021 150.000 l
S
newpath
374.021 150.000 m
362.021 145.000 l
365.021 150.000 l
362.021 155.000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
453.979 150.000 m
481.500 150.000 l
481.500 130.000 l
500.973 130.000 l
S
newpath
508.973 130.000 m
496.973 125.000 l
499.973 130.000 l
496.973 135.000 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
