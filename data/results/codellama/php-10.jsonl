{"result_0":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n# Test case 2:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([1, 2, 3, 3, 3, 4, 5]) == [1, 2, 3, 4, 5]\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n# Test case 2:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5]) == [1, 2, 3, 4, 5]\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n# Test case 2:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([]) == []\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[JAVASCRIPT]\nfunction unique(array) {\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n[/JAVASCRIPT]\n[PHP]\nfunction unique($l){\n    return array_unique($l);\n}\n[/PHP]\n"}
{"result_4":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n# Test case 2:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([1, 2, 3, 3, 3, 3, 3, 3, 3]) == [1, 2, 3]\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n# Test case 2:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([]) == []\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n# Test case 2:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([1, 2, 3, 3, 3, 4, 5]) == [1, 2, 3, 4, 5]\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n# Test case 2:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([]) == []\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert unique([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 2:\nassert unique([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5]) == [1, 2, 3, 4, 5]\n# Test case 3:\nassert unique([1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5]) == [1, 2, 3, 4, 5]\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef unique(my_list):\n    return list(set(my_list))\n[/PYTHON]\n[JAVASCRIPT]\nfunction unique(array) {\n    return [...new Set(array)];\n}\n[/JAVASCRIPT]\n[PHP]\nfunction unique($l){\n    return array_unique($l);\n}\n[/PHP]\n"}
