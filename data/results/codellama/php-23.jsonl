{"result_0":"[PYTHON]\ndef largest_prime_factor(n):\n    if n <= 1:\n        return n\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(104729) == 73\n# Test case 4:\nassert largest_prime_factor(104729 * 2) == 73\n# Test case 5:\nassert largest_prime_factor(104729 * 3) == 73\n# Test case 6:\nassert largest_prime_factor(104729 * 4) == 73\n# Test case 7:\nassert largest_prime_factor(104729 * 5) == 73\n# Test case 8:\nassert largest_prime_factor(104729 * 6) == 73\n# Test case 9:\nassert largest_prime_factor(104729 * 7) == 73\n# Test case 10:\nassert largest_prime_factor(104729 * 8) == 73\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef largest_prime_factor(n):\n    if n <= 1:\n        return n\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(1000000007) == 1000000007\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef largest_prime_factor(n):\n    if n <= 1:\n        return n\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(15) == 3\n# Test case 4:\nassert largest_prime_factor(104729) == 73\n# Test case 5:\nassert largest_prime_factor(987654321) == 858993459\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef largest_prime_factor(n):\n    if n == 1:\n        return 1\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(10) == 5\n# Test case 4:\nassert largest_prime_factor(100) == 11\n# Test case 5:\nassert largest_prime_factor(1000) == 7\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef largest_prime_factor(n):\n    if n == 1:\n        return 1\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(10) == 5\n# Test case 4:\nassert largest_prime_factor(97) == 7\n# Test case 5:\nassert largest_prime_factor(1000000007) == 1000000007\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef largest_prime_factor(n):\n    if n <= 1:\n        return n\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(15) == 3\n# Test case 4:\nassert largest_prime_factor(104729) == 73\n# Test case 5:\nassert largest_prime_factor(104728) == 73\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef largest_prime_factor(n):\n    if n == 1:\n        return 1\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(104729) == 73\n# Test case 4:\nassert largest_prime_factor(104731) == 104731\n# Test case 5:\nassert largest_prime_factor(104728) == 2\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef largest_prime_factor(n):\n    if n <= 1:\n        return n\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(15) == 3\n# Test case 4:\nassert largest_prime_factor(104729) == 73\n# Test case 5:\nassert largest_prime_factor(987654321) == 88178129\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef largest_prime_factor(n):\n    if n <= 1:\n        return n\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(10) == 5\n# Test case 4:\nassert largest_prime_factor(15) == 3\n# Test case 5:\nassert largest_prime_factor(24) == 3\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef largest_prime_factor(n):\n    if n == 1:\n        return 1\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert largest_prime_factor(13195) == 29\n# Test case 2:\nassert largest_prime_factor(2048) == 2\n# Test case 3:\nassert largest_prime_factor(104729) == 73\n# Test case 4:\nassert largest_prime_factor(104729 * 13195) == 29 * 73\n[/TESTS]\n"}
