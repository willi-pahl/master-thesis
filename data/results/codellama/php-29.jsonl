{"result_0":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef triangle_area(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        p = (a + b + c) / 2\n        return round((p * (p - a) * (p - b) * (p - c)) ** 0.5, 2)\n    else:\n        return -1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert triangle_area(3, 4, 5) == 6.00\n# Test case 2:\nassert triangle_area(1, 2, 10) == -1\n# Test case 3:\nassert triangle_area(5, 4, 3) == -1\n[/TESTS]\n"}
