{"result_0":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3], 4) == 24\n# Test case 2:\nassert add_elements([111, 21, 3], 3) == 34\n# Test case 3:\nassert add_elements([111, 21, 3], 2) == 33\n# Test case 4:\nassert add_elements([111, 21, 3], 1) == 111\n# Test case 5:\nassert add_elements([111, 21, 3], 0) == 0\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n# Test case 2:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 5) == 24\n# Test case 3:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 6) == 24\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n# Test case 2:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 5) == 30\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n# Test case 2:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 5) == 24\n# Test case 3:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 6) == 24\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111,21,3], 4) == 24\n# Test case 2:\nassert add_elements([111,21,3], 3) == 24\n# Test case 3:\nassert add_elements([111,21,3], 2) == 24\n# Test case 4:\nassert add_elements([111,21,3], 1) == 24\n# Test case 5:\nassert add_elements([111,21,3], 0) == 24\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n# Test case 2:\nassert add_elements([1, 2, 3, 4, 5, 6, 7, 8, 9], 5) == 15\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3], 4) == 24\n# Test case 2:\nassert add_elements([111, 21, 3], 3) == 24\n# Test case 3:\nassert add_elements([111, 21, 3], 2) == 21\n# Test case 4:\nassert add_elements([111, 21, 3], 1) == 111\n# Test case 5:\nassert add_elements([111, 21, 3], 0) == 0\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n# Test case 2:\nassert add_elements([1, 2, 3, 4, 5, 6, 7, 8, 9], 4) == 10\n# Test case 3:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 9) == 45\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n# Test case 2:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 5) == 26\n# Test case 3:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 6) == 28\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef add_elements(arr, k):\n    return sum(arr[:k])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n# Test case 2:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 10) == 45\n# Test case 3:\nassert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 0) == 0\n[/TESTS]\n"}
