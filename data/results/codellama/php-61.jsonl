{"result_0":"[PYTHON]\ndef check_if_last_char_is_a_letter(txt):\n    if len(txt) == 0:\n        return False\n    last_char = txt[-1]\n    return last_char.isalpha() and txt.rfind(last_char) == len(txt) - 1\n[/PYTHON]\n[PHP]\nfunction checkIfLastCharIsALetter($txt)\n{\n    if (strlen($txt) == 0) {\n        return false;\n    }\n    $lastChar = $txt[strlen($txt) - 1];\n    return ctype_alpha($lastChar) && strrpos($txt, $lastChar) == strlen($txt) - 1;\n}\n[/PHP]\n[JAVA]\npublic boolean checkIfLastCharIsALetter(String txt) {\n    if (txt.length() == 0) {\n        return false;\n    }\n    char lastChar = txt.charAt(txt.length() - 1);\n    return Character.isLetter(lastChar) && txt.lastIndexOf(lastChar) == txt.length() - 1;\n}\n[/JAVA]\n"}
{"result_1":"[PYTHON]\ndef check_if_last_char_is_a_letter(text):\n    if len(text) == 0:\n        return False\n    last_char = text[-1]\n    return last_char.isalpha() and text.rfind(last_char) == len(text) - 1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"a\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"abc\") == True\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"ab c\") == False\n# Test case 5:\nassert check_if_last_char_is_a_letter(\"ab-c\") == False\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef check_if_last_char_is_a_letter(txt):\n    if len(txt) == 0:\n        return False\n    last_char = txt[-1]\n    return last_char.isalpha() and not last_char.isalnum()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"abc\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"abc123\") == True\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"abc123!\") == False\n# Test case 5:\nassert check_if_last_char_is_a_letter(\"abc!123\") == False\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef check_if_last_char_is_a_letter(txt):\n    if len(txt) == 0:\n        return False\n    last_char = txt[-1]\n    if last_char.isalpha() and txt.count(last_char) == 1:\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"abc\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"ab1\") == False\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"ab c\") == True\n# Test case 5:\nassert check_if_last_char_is_a_letter(\"ab c \") == False\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef check_if_last_char_is_a_letter(input_string):\n    if len(input_string) == 0:\n        return False\n    last_char = input_string[-1]\n    if last_char.isalpha():\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"apple pie\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"apple pi e\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"apple pi e \") == False\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"\") == False\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef check_if_last_char_is_a_letter(txt):\n    if txt == \"\":\n        return False\n    return txt[-1].isalpha() and txt[-1] != txt[-1].upper()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"abc\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"ab1\") == False\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"ab c\") == True\n# Test case 5:\nassert check_if_last_char_is_a_letter(\"ab9c\") == False\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef check_if_last_char_is_a_letter(txt):\n    if len(txt) == 0:\n        return False\n    last_char = txt[-1]\n    return last_char.isalpha() and txt.count(last_char) == 1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"apple pie\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"apple pi e\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"apple pi e \") == False\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"\") == False\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef check_if_last_char_is_a_letter(txt):\n    if len(txt) == 0:\n        return False\n    last_char = txt[-1]\n    return last_char.isalpha() and txt.rfind(last_char) == len(txt) - 1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"apple pie\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"apple pi e\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"apple pi e \") == False\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"\") == False\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef check_if_last_char_is_a_letter(input_string):\n    if not input_string:\n        return False\n    if input_string[-1].isalpha():\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"abc\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"ab1\") == False\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"ab c\") == True\n# Test case 5:\nassert check_if_last_char_is_a_letter(\"ab9c\") == False\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef check_if_last_char_is_a_letter(txt):\n    if len(txt) == 0:\n        return False\n    last_char = txt[-1]\n    return last_char.isalpha() and txt.count(last_char) == 1\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert check_if_last_char_is_a_letter(\"\") == False\n# Test case 2:\nassert check_if_last_char_is_a_letter(\"a\") == True\n# Test case 3:\nassert check_if_last_char_is_a_letter(\"abcd\") == True\n# Test case 4:\nassert check_if_last_char_is_a_letter(\"abcd \") == False\n# Test case 5:\nassert check_if_last_char_is_a_letter(\"abcd  \") == False\n[/TESTS]\n"}
