{"result_0":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(int(num1) * int(num2)) + '/' + str(int(denom1) * int(denom2))\n    return result\n[/PYTHON]\n[JAVA]\npublic class Simplify {\n    public static void simplify(String x, String n) {\n        int num1 = Integer.parseInt(x.split(\"/\")[0]);\n        int denom1 = Integer.parseInt(x.split(\"/\")[1]);\n        int num2 = Integer.parseInt(n.split(\"/\")[0]);\n        int denom2 = Integer.parseInt(n.split(\"/\")[1]);\n        String result = (num1 * num2) + \"/\" + (denom1 * denom2);\n        System.out.println(result);\n    }\n}\n[/JAVA]\n[C#]\nusing System;\n\nclass Simplify {\n    static void simplify(string x, string n) {\n        int num1 = Int32.Parse(x.Split('/')[0]);\n        int denom1 = Int32.Parse(x.Split('/')[1]);\n        int num2 = Int32.Parse(n.Split('/')[0]);\n        int denom2 = Int32.Parse(n.Split('/')[1]);\n        string result = (num1 * num2) + \"/\" + (denom1 * denom2);\n        Console.WriteLine(result);\n    }\n}\n[/C#]\n[PHP]\nfunction simplify($x, $n){\n    $num1 = intval(explode('/', $x)[0]);\n    $denom1 = intval(explode('/', $x)[1]);\n    $num2 = intval(explode('/', $n)[0]);\n    $denom2 = intval(explode('/', $n)[1]);\n    $result = ($num1 * $num2) . '/' . ($denom1 * $denom2);\n    return $result;\n}\n[/PHP]\n"}
{"result_1":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(int(num1) * int(num2)) + '/' + str(int(denom1) * int(denom2))\n    if result.endswith('/1'):\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert simplify(\"1/5\", \"5/1\") == True\n# Test case 2:\nassert simplify(\"1/6\", \"2/1\") == False\n# Test case 3:\nassert simplify(\"7/10\", \"10/2\") == False\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split(\"/\")\n    num2, denom2 = n.split(\"/\")\n    result = str(int(num1) * int(num2)) + \"/\" + str(int(denom1) * int(denom2))\n    return result\n[/PYTHON]\n[JAVASCRIPT]\nfunction simplify(x, n) {\n    const num1 = x.split('/')[0];\n    const denom1 = x.split('/')[1];\n    const num2 = n.split('/')[0];\n    const denom2 = n.split('/')[1];\n    return (num1 * num2) / (denom1 * denom2);\n}\n[/JAVASCRIPT]\n[TYPESCRIPT]\nfunction simplify(x: string, n: string): string {\n    const num1 = parseInt(x.split('/')[0]);\n    const denom1 = parseInt(x.split('/')[1]);\n    const num2 = parseInt(n.split('/')[0]);\n    const denom2 = parseInt(n.split('/')[1]);\n    return `${num1 * num2}/${denom1 * denom2}`;\n}\n[/TYPESCRIPT]\n[GO]\nfunc simplify(x string, n string) string {\n	num1, _ := strconv.Atoi(strings.Split(x, \"/\")[0])\n	denom1, _ := strconv.Atoi(strings.Split(x, \"/\")[1])\n	num2, _ := strconv.Atoi(strings.Split(n, \"/\")[0])\n	denom2, _ := strconv.Atoi(strings.Split(n, \"/\")[1])\n	return fmt.Sprintf(\"%d/%d\", num1*num2, denom1*denom2)\n}\n[/GO]\n[PASCAL]\nfunction simplify(x, n: string): string;\nvar\n    num1, denom1, num2, denom2: integer;\nbegin\n    val(copy(x, 1, pos('/', x) - 1), num1, denom1);\n    val(copy(x, pos('/', x) + 1, length(x)), denom1, denom1);\n    val(copy(n, 1, pos('/', n) - 1), num2, denom2);\n    val(copy(n, pos('/', n) + 1, length(n)), denom2, denom2);\n    result := inttostr(num1 * num2) + '/' + inttostr(denom1 * denom2);\nend;\n[/PASCAL]\n[JAVA]\npublic class Simplify {\n    public static void main(String[] args) {\n        System.out.println(simplify(\"1/5\", \"5/1\"));\n    }\n\n    private static String simplify(String x, String n) {\n        int num1 = Integer.parseInt(x.split(\"/\")[0]);\n        int denom1 = Integer.parseInt(x.split(\"/\")[1]);\n        int num2 = Integer.parseInt(n.split(\"/\")[0]);\n        int denom2 = Integer.parseInt(n.split(\"/\")[1]);\n        return (num1 * num2) + \"/\" + (denom1 * denom2);\n    }\n}\n[/JAVA]\n"}
{"result_3":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(float(num1) * float(num2))\n    if '/' in result:\n        return False\n    else:\n        return True\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert simplify(\"1/5\", \"5/1\") == True\n# Test case 2:\nassert simplify(\"1/6\", \"2/1\") == False\n# Test case 3:\nassert simplify(\"7/10\", \"10/2\") == False\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(int(num1) * int(num2)) + '/' + str(int(denom1) * int(denom2))\n    return result\n[/PYTHON]\n[JAVA]\npublic class Simplify {\n    public static void simplify(String x, String n) {\n        int num1 = Integer.parseInt(x.split(\"/\")[0]);\n        int denom1 = Integer.parseInt(x.split(\"/\")[1]);\n        int num2 = Integer.parseInt(n.split(\"/\")[0]);\n        int denom2 = Integer.parseInt(n.split(\"/\")[1]);\n        String result = (num1 * num2) + \"/\" + (denom1 * denom2);\n        System.out.println(result);\n    }\n}\n[/JAVA]\n[CSHARP]\nusing System;\n\npublic static class Simplify {\n    public static void Simplify(string x, string n) {\n        int num1 = Int32.Parse(x.Split('/')[0]);\n        int denom1 = Int32.Parse(x.Split('/')[1]);\n        int num2 = Int32.Parse(n.Split('/')[0]);\n        int denom2 = Int32.Parse(n.Split('/')[1]);\n        string result = (num1 * num2) + \"/\" + (denom1 * denom2);\n        Console.WriteLine(result);\n    }\n}\n[/CSHARP]\n[SCALA]\nobject Simplify {\n    def simplify(x: String, n: String): String = {\n        val Array(num1, denom1) = x.split(\"/\")\n        val Array(num2, denom2) = n.split(\"/\")\n        s\"${num1.toInt * num2.toInt}/${denom1.toInt * denom2.toInt}\"\n    }\n}\n[/SCALA]\n[JAVASCRIPT]\nfunction simplify(x, n) {\n    let num1 = parseInt(x.split('/')[0]);\n    let denom1 = parseInt(x.split('/')[1]);\n    let num2 = parseInt(n.split('/')[0]);\n    let denom2 = parseInt(n.split('/')[1]);\n    return `${num1 * num2}/${denom1 * denom2}`;\n}\n[/JAVASCRIPT]\n"}
{"result_5":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(float(num1) * float(num2))\n    if '/' in result:\n        return False\n    else:\n        return True\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert simplify(\"1/5\", \"5/1\") == True\n# Test case 2:\nassert simplify(\"1/6\", \"2/1\") == False\n# Test case 3:\nassert simplify(\"7/10\", \"10/2\") == False\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(int(num1) * int(num2)) + '/' + str(int(denom1) * int(denom2))\n    return result\n[/PYTHON]\n[JAVA]\npublic class Simplify {\n    public static void main(String[] args) {\n        System.out.println(simplify(\"1/5\", \"5/1\"));\n    }\n\n    public static String simplify(String x, String n) {\n        int num1 = Integer.parseInt(x.split(\"/\")[0]);\n        int denom1 = Integer.parseInt(x.split(\"/\")[1]);\n        int num2 = Integer.parseInt(n.split(\"/\")[0]);\n        int denom2 = Integer.parseInt(n.split(\"/\")[1]);\n        int result = num1 * num2 / (denom1 * denom2);\n        return result + \"/\" + (denom1 * denom2);\n    }\n}\n[/JAVA]\n[CSHARP]\npublic class Simplify\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine(simplify(\"1/5\", \"5/1\"));\n    }\n\n    public static string simplify(string x, string n)\n    {\n        int num1 = int.Parse(x.Split('/')[0]);\n        int denom1 = int.Parse(x.Split('/')[1]);\n        int num2 = int.Parse(n.Split('/')[0]);\n        int denom2 = int.Parse(n.Split('/')[1]);\n        int result = num1 * num2 / (denom1 * denom2);\n        return result + \"/\" + (denom1 * denom2);\n    }\n}\n[/CSHARP]\n[HASKELL]\nsimplify :: Fractional a => String -> String -> Bool\nsimplify x n = denominator (read x :: a) == denominator (read n :: a)\n[/HASKELL]\n[PHP]\nfunction simplify($x, $n){\n    return ($x * $n) % 1 == 0;\n}\n[/PHP]\n"}
{"result_7":"[PYTHON]\ndef simplify(x, n):\n    num1, den1 = x.split('/')\n    num2, den2 = n.split('/')\n    result = str(int(num1) * int(num2)) + '/' + str(int(den1) * int(den2))\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert simplify(\"1/5\", \"5/1\") == \"5/5\"\n# Test case 2:\nassert simplify(\"1/6\", \"2/1\") == \"2/6\"\n# Test case 3:\nassert simplify(\"7/10\", \"10/2\") == \"70/20\"\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(int(num1) * int(num2)) + '/' + str(int(denom1) * int(denom2))\n    if result.endswith('/1'):\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert simplify(\"1/5\", \"5/1\") == True\n# Test case 2:\nassert simplify(\"1/6\", \"2/1\") == False\n# Test case 3:\nassert simplify(\"7/10\", \"10/2\") == False\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef simplify(x, n):\n    num1, denom1 = x.split('/')\n    num2, denom2 = n.split('/')\n    result = str(float(num1) * float(num2))\n    if '.' in result:\n        return False\n    else:\n        return True\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert simplify(\"1/5\", \"5/1\") == True\n# Test case 2:\nassert simplify(\"1/6\", \"2/1\") == False\n# Test case 3:\nassert simplify(\"7/10\", \"10/2\") == False\n[/TESTS]\n"}
