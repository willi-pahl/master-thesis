{"result_0":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 > index2:\n        return planets[index2 + 1:index1]\n    else:\n        return planets[index1 + 1:index2]\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Mercury\", \"Neptune\") == [\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"]\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == [\"Venus\"]\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == [\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 < index2:\n        return tuple(planets[index1+1:index2])\n    else:\n        return tuple(planets[index2+1:index1])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Jupiter\", \"Neptune\") == (\"Saturn\", \"Uranus\")\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == (\"Venus\",)\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 > index2:\n        return planets[index2 + 1:index1]\n    else:\n        return planets[index1 + 1:index2]\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Jupiter\", \"Neptune\") == [\"Saturn\", \"Uranus\"]\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == [\"Venus\"]\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == [\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 > index2:\n        return planets[index2+1:index1]\n    else:\n        return planets[index1+1:index2]\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Mercury\", \"Venus\") == [\"Earth\"]\n# Test case 2:\nassert get_planets_between(\"Venus\", \"Earth\") == [\"Mars\"]\n# Test case 3:\nassert get_planets_between(\"Earth\", \"Mars\") == [\"Jupiter\"]\n# Test case 4:\nassert get_planets_between(\"Mars\", \"Jupiter\") == [\"Saturn\", \"Uranus\", \"Neptune\"]\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 < index2:\n        return tuple(planets[index1+1:index2])\n    else:\n        return tuple(planets[index2+1:index1])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Mercury\", \"Neptune\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\")\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == (\"Venus\",)\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 < index2:\n        return tuple(planets[index1+1:index2])\n    else:\n        return tuple(planets[index2+1:index1])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Jupiter\", \"Neptune\") == (\"Saturn\", \"Uranus\")\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == (\"Venus\",)\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 > index2:\n        return planets[index2 + 1:index1]\n    else:\n        return planets[index1 + 1:index2]\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Jupiter\", \"Neptune\") == [\"Saturn\", \"Uranus\"]\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == [\"Venus\"]\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == [\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 < index2:\n        return tuple(planets[index1+1:index2])\n    else:\n        return tuple(planets[index2+1:index1])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Jupiter\", \"Neptune\") == (\"Saturn\", \"Uranus\")\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == (\"Venus\",)\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 < index2:\n        return tuple(planets[index1+1:index2])\n    else:\n        return tuple(planets[index2+1:index1])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Jupiter\", \"Neptune\") == (\"Saturn\", \"Uranus\")\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == (\"Venus\",)\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef get_planets_between(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 < index2:\n        return tuple(planets[index1+1:index2])\n    else:\n        return tuple(planets[index2+1:index1])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert get_planets_between(\"Mercury\", \"Neptune\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\")\n# Test case 2:\nassert get_planets_between(\"Earth\", \"Mercury\") == (\"Venus\",)\n# Test case 3:\nassert get_planets_between(\"Mercury\", \"Uranus\") == (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n[/TESTS]\n"}
