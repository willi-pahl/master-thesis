{"result_0":"[PYTHON]\ndef solve(s):\n    result = \"\"\n    for char in s:\n        if char.isalpha():\n            result += char.swapcase()\n        else:\n            result += char\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"hello world\") == \"HELLO WORLD\"\n# Test case 2:\nassert solve(\"abcdefghijklmnopqrstuvwxyz\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n# Test case 3:\nassert solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"abcdefghijklmnopqrstuvwxyz\"\n# Test case 4:\nassert solve(\"1234567890\") == \"1234567890\"\n# Test case 5:\nassert solve(\"hello world!\") == \"HELLO WORLD!\"\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef solve(s):\n    result = \"\"\n    for char in s:\n        if char.isalpha():\n            if char.islower():\n                result += char.upper()\n            else:\n                result += char.lower()\n        else:\n            result += char\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"hello world\") == \"HELLO WORLD\"\n# Test case 2:\nassert solve(\"Hello World\") == \"hello world\"\n# Test case 3:\nassert solve(\"1234567890\") == \"0987654321\"\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef solve(s):\n    # Convert to list so we can modify it\n    s_list = list(s)\n    \n    # Iterate through the list and check if each character is a letter\n    for i, c in enumerate(s_list):\n        if c.isalpha():\n            # If the character is a letter, toggle its case\n            if c.islower():\n                s_list[i] = c.upper()\n            else:\n                s_list[i] = c.lower()\n    \n    # Join the list back into a string\n    return \"\".join(s_list)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"hello\") == \"HELLO\"\n# Test case 2:\nassert solve(\"1234\") == \"4321\"\n# Test case 3:\nassert solve(\"ab\") == \"AB\"\n# Test case 4:\nassert solve(\"#a@C\") == \"#A@c\"\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef solve(s):\n    result = \"\"\n    for char in s:\n        if char.isalpha():\n            if char.isupper():\n                result += char.lower()\n            else:\n                result += char.upper()\n        else:\n            result += char\n    return result[::-1]\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"1234\") == \"4321\"\n# Test case 2:\nassert solve(\"ab\") == \"AB\"\n# Test case 3:\nassert solve(\"#a@C\") == \"#A@c\"\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef solve(s):\n    result = \"\"\n    for char in s:\n        if char.isalpha():\n            if char.islower():\n                result += char.upper()\n            else:\n                result += char.lower()\n        else:\n            result += char\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"1234\") == \"4321\"\n# Test case 2:\nassert solve(\"ab\") == \"AB\"\n# Test case 3:\nassert solve(\"#a@C\") == \"#A@c\"\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef solve(s):\n    # Convert to list so we can modify it\n    s_list = list(s)\n    # Check if the string contains any letters\n    if any(c.isalpha() for c in s):\n        # If it does, iterate through the list and switch case of letters\n        for i, c in enumerate(s_list):\n            if c.isalpha():\n                if c.islower():\n                    s_list[i] = c.upper()\n                else:\n                    s_list[i] = c.lower()\n    # If the string contains no letters, reverse it\n    else:\n        s_list.reverse()\n    # Join the list back into a string and return it\n    return \"\".join(s_list)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"1234\") == \"4321\"\n# Test case 2:\nassert solve(\"ab\") == \"AB\"\n# Test case 3:\nassert solve(\"#a@C\") == \"#A@c\"\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef solve(s):\n    # Convert to uppercase\n    uppercase = s.upper()\n    \n    # Convert to lowercase\n    lowercase = s.lower()\n    \n    # Check if the string contains any letters\n    if not any(c.isalpha() for c in s):\n        return uppercase\n    \n    # If the string contains letters, reverse the case of each letter\n    result = \"\"\n    for c in s:\n        if c.isalpha():\n            if c.isupper():\n                result += lowercase[s.index(c)]\n            else:\n                result += uppercase[s.index(c)]\n        else:\n            result += c\n    \n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"\") == \"\"\n# Test case 2:\nassert solve(\"abc\") == \"ABC\"\n# Test case 3:\nassert solve(\"AbC\") == \"aBc\"\n# Test case 4:\nassert solve(\"1234\") == \"4321\"\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef solve(s):\n    result = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                result += s[i].upper()\n            else:\n                result += s[i].lower()\n        else:\n            result += s[i]\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"hello world\") == \"HELLO WORLD\"\n# Test case 2:\nassert solve(\"abcd1234\") == \"ABCD1234\"\n# Test case 3:\nassert solve(\"hello world1234\") == \"HELLO WORLD1234\"\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef solve(s):\n    result = \"\"\n    for c in s:\n        if c.isalpha():\n            result += c.swapcase()\n        else:\n            result += c\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"hello world\") == \"HELLO WORLD\"\n# Test case 2:\nassert solve(\"abcdefghijklmnopqrstuvwxyz\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n# Test case 3:\nassert solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"abcdefghijklmnopqrstuvwxyz\"\n# Test case 4:\nassert solve(\"1234567890\") == \"1234567890\"\n# Test case 5:\nassert solve(\"hello world!\") == \"HELLO WORLD!\"\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef solve(s):\n    result = \"\"\n    for char in s:\n        if char.isalpha():\n            result += char.upper() if char.islower() else char.lower()\n        else:\n            result += char\n    return result[::-1] if not any(char.isalpha() for char in s) else result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert solve(\"hello world\") == \"hwOLlrEO\"\n# Test case 2:\nassert solve(\"abcdefghijklmnopqrstuvwxyz\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n# Test case 3:\nassert solve(\"1234567890\") == \"0987654321\"\n[/TESTS]\n"}
