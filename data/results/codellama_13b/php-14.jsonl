{"result_0":"[PYTHON]\ndef fib4(n):\n    if n <= 1:\n        return n\n    else:\n        fib_n_minus_1 = fib4(n-1)\n        fib_n_minus_2 = fib4(n-2)\n        fib_n_minus_3 = fib4(n-3)\n        fib_n_minus_4 = fib4(n-4)\n        return fib_n_minus_1 + fib_n_minus_2 + fib_n_minus_3 + fib_n_minus_4\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 2\n# Test case 6:\nassert fib4(5) == 4\n# Test case 7:\nassert fib4(6) == 8\n# Test case 8:\nassert fib4(7) == 14\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef fib4(n):\n    if n <= 2:\n        return n\n    \n    fib_n_1 = 0\n    fib_n_2 = 0\n    fib_n_3 = 2\n    fib_n_4 = 0\n    \n    for i in range(3, n+1):\n        fib_n = fib_n_1 + fib_n_2 + fib_n_3 + fib_n_4\n        fib_n_1 = fib_n_2\n        fib_n_2 = fib_n_3\n        fib_n_3 = fib_n_4\n        fib_n_4 = fib_n\n    \n    return fib_n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 2\n# Test case 6:\nassert fib4(5) == 4\n# Test case 7:\nassert fib4(6) == 8\n# Test case 8:\nassert fib4(7) == 14\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef fib4(n):\n    if n <= 2:\n        return n\n    else:\n        fib_n_minus_1 = fib4(n-1)\n        fib_n_minus_2 = fib4(n-2)\n        fib_n_minus_3 = fib4(n-3)\n        fib_n_minus_4 = fib4(n-4)\n        return fib_n_minus_1 + fib_n_minus_2 + fib_n_minus_3 + fib_n_minus_4\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 2\n# Test case 6:\nassert fib4(5) == 4\n# Test case 7:\nassert fib4(6) == 8\n# Test case 8:\nassert fib4(7) == 14\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef fib4(n):\n    if n <= 2:\n        return n\n    else:\n        fib_list = [0, 0, 2]\n        for i in range(3, n+1):\n            fib_list.append(fib_list[i-1] + fib_list[i-2] + fib_list[i-3] + fib_list[i-4])\n        return fib_list[n]\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 2\n# Test case 6:\nassert fib4(5) == 4\n# Test case 7:\nassert fib4(6) == 8\n# Test case 8:\nassert fib4(7) == 14\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef fib4(n):\n    if n <= 1:\n        return n\n    else:\n        fib_n_2 = 0\n        fib_n_3 = 0\n        fib_n_4 = 0\n        for i in range(n-1):\n            fib_n_2 += fib4(i)\n        for i in range(n-2):\n            fib_n_3 += fib4(i)\n        for i in range(n-3):\n            fib_n_4 += fib4(i)\n        return fib_n_2 + fib_n_3 + fib_n_4\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 8\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef fib4(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 0\n    else:\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 0\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef fib4(n):\n    if n <= 2:\n        return n\n    else:\n        fib_n_minus_1 = fib4(n-1)\n        fib_n_minus_2 = fib4(n-2)\n        fib_n_minus_3 = fib4(n-3)\n        fib_n_minus_4 = fib4(n-4)\n        return fib_n_minus_1 + fib_n_minus_2 + fib_n_minus_3 + fib_n_minus_4\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 2\n# Test case 6:\nassert fib4(5) == 4\n# Test case 7:\nassert fib4(6) == 8\n# Test case 8:\nassert fib4(7) == 14\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef fib4(n):\n    if n <= 2:\n        return n\n    else:\n        fib_n_minus_1 = 0\n        fib_n_minus_2 = 2\n        fib_n_minus_3 = 0\n        fib_n_minus_4 = 0\n        for i in range(3, n+1):\n            fib_n = fib_n_minus_1 + fib_n_minus_2 + fib_n_minus_3 + fib_n_minus_4\n            fib_n_minus_4 = fib_n_minus_3\n            fib_n_minus_3 = fib_n_minus_2\n            fib_n_minus_2 = fib_n_minus_1\n            fib_n_minus_1 = fib_n\n        return fib_n\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 2\n# Test case 6:\nassert fib4(5) == 4\n# Test case 7:\nassert fib4(6) == 8\n# Test case 8:\nassert fib4(7) == 14\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef fib4(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 0\n    if n == 2:\n        return 2\n    if n == 3:\n        return 0\n    if n > 3:\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n[/PYTHON]\n[JAVASCRIPT]\nfunction fib4(n) {\n    if (n == 0) {\n        return 0;\n    } else if (n == 1) {\n        return 0;\n    } else if (n == 2) {\n        return 2;\n    } else if (n == 3) {\n        return 0;\n    } else {\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    }\n}\n[/JAVASCRIPT]\n[TYPESCRIPT]\nfunction fib4(n: number): number {\n    if (n == 0) {\n        return 0;\n    } else if (n == 1) {\n        return 0;\n    } else if (n == 2) {\n        return 2;\n    } else if (n == 3) {\n        return 0;\n    } else {\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    }\n}\n[/TYPESCRIPT]\n[JULIA]\nfunction fib4(n::Int)::Int\n    if n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n        return 2\n    elseif n == 3\n        return 0\n    else\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n    end\nend\n[/JULIA]\n"}
{"result_9":"[PYTHON]\ndef fib4(n):\n    if n <= 2:\n        return n\n    \n    fib_list = [0, 0, 2]\n    for i in range(3, n+1):\n        fib_list.append(fib_list[i-1] + fib_list[i-2] + fib_list[i-3] + fib_list[i-4])\n    \n    return fib_list[n]\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert fib4(0) == 0\n# Test case 2:\nassert fib4(1) == 0\n# Test case 3:\nassert fib4(2) == 2\n# Test case 4:\nassert fib4(3) == 0\n# Test case 5:\nassert fib4(4) == 2\n# Test case 6:\nassert fib4(5) == 4\n# Test case 7:\nassert fib4(6) == 8\n# Test case 8:\nassert fib4(7) == 14\n[/TESTS]\n"}
