{"result_0":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and all(a % i != 0 for i in range(2, int(a ** 0.5) + 1)):\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(40) == False\n# Test case 3:\nassert is_multiply_prime(50) == False\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100:\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                return False\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(35) == False\n# Test case 3:\nassert is_multiply_prime(70) == False\n# Test case 4:\nassert is_multiply_prime(100) == False\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and all(a % i for i in range(2, int(a ** 0.5) + 1)):\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(40) == False\n# Test case 3:\nassert is_multiply_prime(50) == False\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100:\n        prime_factors = []\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                prime_factors.append(i)\n        return len(prime_factors) > 1\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(35) == False\n# Test case 3:\nassert is_multiply_prime(70) == True\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and a > 1:\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                return False\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(35) == False\n# Test case 3:\nassert is_multiply_prime(37) == True\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and a > 1:\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                return False\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(35) == False\n# Test case 3:\nassert is_multiply_prime(90) == True\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and a > 1:\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                return False\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(35) == False\n# Test case 3:\nassert is_multiply_prime(24) == True\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and all(a % i for i in range(2, int(a ** 0.5) + 1)):\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(40) == False\n# Test case 3:\nassert is_multiply_prime(50) == False\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and a > 1:\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                return False\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(35) == False\n# Test case 3:\nassert is_multiply_prime(45) == False\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef is_multiply_prime(a):\n    if a < 100 and a > 1:\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                return False\n        return True\n    else:\n        return False\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert is_multiply_prime(30) == True\n# Test case 2:\nassert is_multiply_prime(35) == False\n# Test case 3:\nassert is_multiply_prime(90) == True\n[/TESTS]\n"}
