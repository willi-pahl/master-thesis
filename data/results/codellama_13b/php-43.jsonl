{"result_0":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(1) == [1, 3]\n# Test case 3:\nassert make_a_pile(0) == []\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(4) == [4, 8, 12, 16]\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(1) == [1, 3]\n# Test case 3:\nassert make_a_pile(0) == []\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(1) == [1, 3]\n# Test case 3:\nassert make_a_pile(5) == [5, 9, 13]\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(1) == [1, 3]\n# Test case 3:\nassert make_a_pile(2) == [2, 4, 6]\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(4) == [4, 8, 12]\n# Test case 3:\nassert make_a_pile(5) == [5, 10, 17]\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(10) == [10, 12, 14, 16, 18, 20, 22, 24, 26, 28]\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(1) == [1, 3]\n# Test case 3:\nassert make_a_pile(2) == [2, 4, 6]\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(1) == [1, 3]\n# Test case 3:\nassert make_a_pile(2) == [2, 4, 6]\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef make_a_pile(n):\n    pile = []\n    for i in range(n):\n        if i % 2 == 0:\n            pile.append(i + 1)\n        else:\n            pile.append(i + 2)\n    return pile\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert make_a_pile(3) == [3, 5, 7]\n# Test case 2:\nassert make_a_pile(10) == [10, 12, 14, 16, 18, 20, 22, 24, 26, 28]\n[/TESTS]\n"}
