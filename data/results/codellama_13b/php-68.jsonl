{"result_0":"[PYTHON]\ndef special_filter(numbers):\n    return len([number for number in numbers if number > 10 and str(number)[0] not in '02468' and str(number)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([15, -73, 14, -15]) == 1\n# Test case 2:\nassert special_filter([33, -2, -3, 45, 21, 109]) == 2\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5]) == 0\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef special_filter(numbers):\n    return len([number for number in numbers if number > 10 and str(number)[0] not in '02468' and str(number)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([15, -73, 14, -15]) == 1\n# Test case 2:\nassert special_filter([33, -2, -3, 45, 21, 109]) == 2\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5]) == 0\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef special_filter(numbers):\n    return len([number for number in numbers if number > 10 and str(number)[0] not in '02468' and str(number)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([15, -73, 14, -15]) == 1\n# Test case 2:\nassert special_filter([33, -2, -3, 45, 21, 109]) == 2\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 0\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef special_filter(numbers):\n    return len([number for number in numbers if number > 10 and str(number)[0] not in '02468' and str(number)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([15, -73, 14, -15]) == 1\n# Test case 2:\nassert special_filter([33, -2, -3, 45, 21, 109]) == 2\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 0\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef special_filter(numbers):\n    return len([number for number in numbers if number > 10 and str(number)[0] not in '02468' and str(number)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([]) == 0\n# Test case 2:\nassert special_filter([1]) == 0\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5]) == 0\n# Test case 4:\nassert special_filter([11, 12, 13, 14, 15]) == 1\n# Test case 5:\nassert special_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) == 2\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef special_filter(numbers):\n    return len([num for num in numbers if num > 10 and str(num)[0] not in '02468' and str(num)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([15, -73, 14, -15]) == 1\n# Test case 2:\nassert special_filter([33, -2, -3, 45, 21, 109]) == 2\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5]) == 0\n# Test case 4:\nassert special_filter([11, 22, 33, 44, 55]) == 2\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef special_filter(numbers):\n    return len([number for number in numbers if number > 10 and str(number)[0] not in '02468' and str(number)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([]) == 0\n# Test case 2:\nassert special_filter([1]) == 0\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5]) == 0\n# Test case 4:\nassert special_filter([11, 12, 13, 14, 15]) == 1\n# Test case 5:\nassert special_filter([11, 12, 13, 14, 15, 16]) == 2\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef special_filter(nums):\n    return len([num for num in nums if num > 10 and str(num)[0] not in '02468' and str(num)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([15, -73, 14, -15]) == 1\n# Test case 2:\nassert special_filter([33, -2, -3, 45, 21, 109]) == 2\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 0\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef special_filter(numbers):\n    return len([number for number in numbers if number > 10 and str(number)[0] not in '02468' and str(number)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([]) == 0\n# Test case 2:\nassert special_filter([1]) == 0\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5]) == 0\n# Test case 4:\nassert special_filter([11, 12, 13, 14, 15]) == 1\n# Test case 5:\nassert special_filter([11, 12, 13, 14, 15, 16]) == 2\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef special_filter(numbers):\n    return len([num for num in numbers if num > 10 and str(num)[0] not in '02468' and str(num)[-1] not in '02468'])\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert special_filter([]) == 0\n# Test case 2:\nassert special_filter([1]) == 0\n# Test case 3:\nassert special_filter([1, 2, 3, 4, 5]) == 0\n# Test case 4:\nassert special_filter([11, 12, 13, 14, 15]) == 5\n# Test case 5:\nassert special_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 10\n[/TESTS]\n"}
