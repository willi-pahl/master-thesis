{"result_0":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([]) == 0\n# Test case 2:\nassert double_the_difference([1]) == 1\n# Test case 3:\nassert double_the_difference([1, 3, 5, 7]) == 14\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([1, 3, 2, 0]) == 10\n# Test case 2:\nassert double_the_difference([-1, -2, 0]) == 0\n# Test case 3:\nassert double_the_difference([9, -2]) == 81\n# Test case 4:\nassert double_the_difference([0]) == 0\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0 and x > 0 and isinstance(x, int))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([1, 3, 2, 0]) == 10\n# Test case 2:\nassert double_the_difference([-1, -2, 0]) == 0\n# Test case 3:\nassert double_the_difference([9, -2]) == 81\n# Test case 4:\nassert double_the_difference([0]) == 0\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([1, 3, 2, 0]) == 10\n# Test case 2:\nassert double_the_difference([-1, -2, 0]) == 0\n# Test case 3:\nassert double_the_difference([9, -2]) == 81\n# Test case 4:\nassert double_the_difference([0]) == 0\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0 and x >= 0)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([]) == 0\n# Test case 2:\nassert double_the_difference([1, 3, 5, 7]) == 14\n# Test case 3:\nassert double_the_difference([1, 3, 5, 7, 9]) == 25\n# Test case 4:\nassert double_the_difference([1, 3, 5, 7, 9, 11]) == 36\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([1, 3, 2, 0]) == 10\n# Test case 2:\nassert double_the_difference([-1, -2, 0]) == 0\n# Test case 3:\nassert double_the_difference([9, -2]) == 81\n# Test case 4:\nassert double_the_difference([0]) == 0\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0 and x >= 0 and isinstance(x, int))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([]) == 0\n# Test case 2:\nassert double_the_difference([1]) == 1\n# Test case 3:\nassert double_the_difference([1, 3, 5, 7]) == 14\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0 and x >= 0 and isinstance(x, int))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([]) == 0\n# Test case 2:\nassert double_the_difference([1]) == 1\n# Test case 3:\nassert double_the_difference([1, 3, 5, 7]) == 14\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0 and x > 0 and isinstance(x, int))\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([1, 3, 2, 0]) == 10\n# Test case 2:\nassert double_the_difference([-1, -2, 0]) == 0\n# Test case 3:\nassert double_the_difference([9, -2]) == 81\n# Test case 4:\nassert double_the_difference([0]) == 0\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef double_the_difference(my_list):\n    if not my_list:\n        return 0\n    return sum(x**2 for x in my_list if x % 2 != 0)\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert double_the_difference([1, 3, 2, 0]) == 10\n# Test case 2:\nassert double_the_difference([-1, -2, 0]) == 0\n# Test case 3:\nassert double_the_difference([9, -2]) == 81\n# Test case 4:\nassert double_the_difference([0]) == 0\n[/TESTS]\n"}
