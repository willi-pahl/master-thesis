{"result_0":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1000: \"m\",\n        900: \"cm\",\n        500: \"d\",\n        400: \"cd\",\n        100: \"c\",\n        90: \"xc\",\n        50: \"l\",\n        40: \"xl\",\n        10: \"x\",\n        9: \"ix\",\n        5: \"v\",\n        4: \"iv\",\n        1: \"i\"\n    }\n\n    result = \"\"\n    for value, numeral in roman_numerals.items():\n        while number >= value:\n            result += numeral\n            number -= value\n\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == \"xix\"\n# Test case 2:\nassert int_to_mini_roman(152) == \"clii\"\n# Test case 3:\nassert int_to_mini_roman(426) == \"cdxxvi\"\n[/TESTS]\n"}
{"result_1":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1000: \"m\",\n        900: \"cm\",\n        500: \"d\",\n        400: \"cd\",\n        100: \"c\",\n        90: \"xc\",\n        50: \"l\",\n        40: \"xl\",\n        10: \"x\",\n        9: \"ix\",\n        5: \"v\",\n        4: \"iv\",\n        1: \"i\"\n    }\n\n    result = \"\"\n    for value, numeral in roman_numerals.items():\n        while number >= value:\n            result += numeral\n            number -= value\n\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == \"xix\"\n# Test case 2:\nassert int_to_mini_roman(152) == \"clii\"\n# Test case 3:\nassert int_to_mini_roman(426) == \"cdxxvi\"\n[/TESTS]\n"}
{"result_2":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1: 'i',\n        4: 'iv',\n        5: 'v',\n        9: 'ix',\n        10: 'x',\n        40: 'xl',\n        50: 'l',\n        90: 'xc',\n        100: 'c',\n        400: 'cd',\n        500: 'd',\n        900: 'cm',\n        1000: 'm'\n    }\n\n    result = \"\"\n    while number > 0:\n        for value, numeral in roman_numerals.items():\n            if number >= value:\n                result += numeral\n                number -= value\n                break\n\n    return result.lower()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == 'xix'\n# Test case 2:\nassert int_to_mini_roman(152) == 'clii'\n# Test case 3:\nassert int_to_mini_roman(426) == 'cdxxvi'\n[/TESTS]\n"}
{"result_3":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_dict = {\n        1: 'i',\n        4: 'iv',\n        5: 'v',\n        9: 'ix',\n        10: 'x',\n        40: 'xl',\n        50: 'l',\n        90: 'xc',\n        100: 'c',\n        400: 'cd',\n        500: 'd',\n        900: 'cm',\n        1000: 'm'\n    }\n    \n    result = \"\"\n    while number > 0:\n        for roman, value in roman_dict.items():\n            if number >= roman:\n                number -= roman\n                result += value\n                break\n    return result.lower()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == 'xix'\n# Test case 2:\nassert int_to_mini_roman(152) == 'clii'\n# Test case 3:\nassert int_to_mini_roman(426) == 'cdxxvi'\n[/TESTS]\n"}
{"result_4":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1: 'i',\n        4: 'iv',\n        5: 'v',\n        9: 'ix',\n        10: 'x',\n        40: 'xl',\n        50: 'l',\n        90: 'xc',\n        100: 'c',\n        400: 'cd',\n        500: 'd',\n        900: 'cm',\n        1000: 'm'\n    }\n\n    result = \"\"\n    while number > 0:\n        for values in roman_numerals.items():\n            if number >= values[0]:\n                number -= values[0]\n                result += values[1]\n                break\n\n    return result.lower()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == 'xix'\n# Test case 2:\nassert int_to_mini_roman(152) == 'clii'\n# Test case 3:\nassert int_to_mini_roman(426) == 'cdxxvi'\n[/TESTS]\n"}
{"result_5":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90: \"xc\",\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n    }\n\n    result = \"\"\n    while number > 0:\n        for roman_numeral, value in roman_numerals.items():\n            if number >= value:\n                result += roman_numeral\n                number -= value\n                break\n\n    return result.lower()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(1) == \"i\"\n# Test case 2:\nassert int_to_mini_roman(5) == \"v\"\n# Test case 3:\nassert int_to_mini_roman(9) == \"ix\"\n# Test case 4:\nassert int_to_mini_roman(12) == \"xii\"\n# Test case 5:\nassert int_to_mini_roman(16) == \"xvi\"\n[/TESTS]\n"}
{"result_6":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_dict = {\n        1: 'i',\n        4: 'iv',\n        5: 'v',\n        9: 'ix',\n        10: 'x',\n        40: 'xl',\n        50: 'l',\n        90: 'xc',\n        100: 'c',\n        400: 'cd',\n        500: 'd',\n        900: 'cm',\n        1000: 'm'\n    }\n    \n    result = \"\"\n    while number > 0:\n        for roman, value in roman_dict.items():\n            if number >= value:\n                result += roman * (number // value)\n                number %= value\n                break\n    return result.lower()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == 'xix'\n# Test case 2:\nassert int_to_mini_roman(152) == 'clii'\n# Test case 3:\nassert int_to_mini_roman(426) == 'cdxxvi'\n[/TESTS]\n"}
{"result_7":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1000: \"m\",\n        900: \"cm\",\n        500: \"d\",\n        400: \"cd\",\n        100: \"c\",\n        90: \"xc\",\n        50: \"l\",\n        40: \"xl\",\n        10: \"x\",\n        9: \"ix\",\n        5: \"v\",\n        4: \"iv\",\n        1: \"i\"\n    }\n\n    result = \"\"\n    for value, numeral in roman_numerals.items():\n        while number >= value:\n            result += numeral\n            number -= value\n\n    return result\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == \"xix\"\n# Test case 2:\nassert int_to_mini_roman(152) == \"clii\"\n# Test case 3:\nassert int_to_mini_roman(426) == \"cdxxvi\"\n[/TESTS]\n"}
{"result_8":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90: \"xc\",\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n    }\n\n    result = \"\"\n    while number > 0:\n        for values in roman_numerals.items():\n            if number >= values[0]:\n                number -= values[0]\n                result += values[1]\n                break\n\n    return result.lower()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == \"xix\"\n# Test case 2:\nassert int_to_mini_roman(152) == \"clii\"\n# Test case 3:\nassert int_to_mini_roman(426) == \"cdxxvi\"\n[/TESTS]\n"}
{"result_9":"[PYTHON]\ndef int_to_mini_roman(number):\n    roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90: \"xc\",\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n    }\n\n    result = \"\"\n    while number > 0:\n        for values in roman_numerals.items():\n            if number >= values[0]:\n                result = values[1] + result\n                number -= values[0]\n                break\n\n    return result.lower()\n[/PYTHON]\n[TESTS]\n# Test case 1:\nassert int_to_mini_roman(19) == \"xix\"\n# Test case 2:\nassert int_to_mini_roman(152) == \"clii\"\n# Test case 3:\nassert int_to_mini_roman(426) == \"cdxxvi\"\n[/TESTS]\n"}
