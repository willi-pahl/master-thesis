{"result_0":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largest_factor = 1;\n\n    // Teile n durch 2, solange es gerade ist\n    while ($n % 2 == 0) {\n        $largest_factor = 2;\n        $n"}
{"result_1":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largest_factor = 1;\n\n    // Teile n durch 2, solange es gerade ist\n    while ($n % 2 == 0) {\n        $largest_factor = 2;\n        $n"}
{"result_2":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largestFactor = 1;\n\n    // Durch 2 teilen, solange n gerade ist\n    while ($n % 2 == 0) {\n        $largestFactor = 2;\n        $n /= 2"}
{"result_3":"```php\n<?php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largestFactor = 1;\n\n    // Teile durch 2, solange es gerade ist\n    while ($n % 2 == 0) {\n        $largestFactor = 2;\n        $n"}
{"result_4":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largest_factor = 1;\n\n    // Teile durch 2, solange es geht\n    while ($n % 2 == 0) {\n        $largest_factor = 2;\n        $n /="}
{"result_5":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largestFactor = 1;\n\n    // Teile durch 2, solange es geht\n    while ($n % 2 == 0) {\n        $largestFactor = 2;\n        $n /= 2;"}
{"result_6":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largest_factor = 1;\n\n    // Teile n durch 2, solange es gerade ist\n    while ($n % 2 == 0) {\n        $largest_factor = 2;\n        $n"}
{"result_7":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largestFactor = 1;\n\n    // Teile n wiederholt durch 2\n    while ($n % 2 == 0) {\n        $largestFactor = 2;\n        $n /= 2;"}
{"result_8":"```php\n<?php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largest_factor = 1;\n\n    // Teile durch 2, so lange es geht\n    while ($n % 2 == 0) {\n        $largest_factor = 2;"}
{"result_9":"```php\n\n/**\n * Sie sind ein erfahrener PHP-Programmierer und hier ist Ihre Aufgabe.\n * Gib den größten Primfaktor von n zurück. Gehe davon aus, dass n > 1 und keine Primzahl ist.\n * >>> largest_prime_factor(13195)\n * 29\n * >>> largest_prime_factor(2048)\n * 2\n *\n */\nfunction largestPrimeFactor($n){\n    $largestFactor = 1;\n\n    // Teile n wiederholt durch 2, bis es ungerade ist\n    while ($n % 2 == 0) {\n        $largestFactor = 2;\n        $n"}
