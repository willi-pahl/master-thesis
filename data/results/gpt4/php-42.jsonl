{"result_0":"    // Konvertiere den String in eine Fließkommazahl\n    $floatValue = floatval($value);\n\n    // Bestimme die nächstniedrigere und nächsthöhere Ganzzahl\n    $lower = floor($floatValue);\n    $higher = ceil($floatValue);\n\n    // Berechne die Abstände zur nächstniedrigeren und nächsthöheren Ganzzahl\n    $distanceToLower = $floatValue - $lower;\n    $distanceToHigher = $higher - $floatValue;\n\n    // Wenn die Zahl genau in der Mitte zwischen zwei Ganzzahlen liegt\n    if ($distanceToLower === $distanceToHigher) {\n        // Runde"}
{"result_1":"    // Convert the string value to a float to handle the decimal part\n    $number = floatval($value);\n\n    // Get the integer part of the number\n    $integerPart = intval($number);\n\n    // Calculate the decimal part\n    $decimalPart = $number - $integerPart;\n\n    // Check the decimal part and round accordingly\n    if ($decimalPart > 0.5 || $decimalPart < -0.5) {\n        // Round up away from zero\n        $roundedNumber = $integerPart + ($number > 0 ? 1 : -1);\n    } elseif ($decimalPart == 0.5 || $decimalPart == -0.5) {\n        // If the decimal part"}
{"result_2":"    // Convert the string input into a float\n    $floatValue = floatval($value);\n\n    // Extract the integer part and the decimal part of the number\n    $integerPart = intval($floatValue);\n    $decimalPart = $floatValue - $integerPart;\n\n    // Calculate the absolute value of the decimal part\n    $absDecimalPart = abs($decimalPart);\n\n    // Check if the decimal part is exactly 0.5 (equidistant case)\n    if ($absDecimalPart == 0.5) {\n        // Round away from zero\n        if ($floatValue > 0) {\n            return $integerPart + 1; // For positive numbers\n        } else {\n            return $integer"}
{"result_3":"    // Convert the string to a float for calculation\n    $num = floatval($value);\n\n    // Get the integer part of the number\n    $intPart = intval($num);\n\n    // Calculate the fractional part by subtracting the integer part from the number\n    $fractionPart = $num - $intPart;\n\n    // Check if the fractional part is exactly 0.5\n    if (abs($fractionPart) == 0.5) {\n        // If the number is non-negative\n        if ($num > 0) {\n            // Round up away from zero\n            return $intPart + 1;\n        } else {\n            // Round down away from zero (more negative)\n            return $int"}
{"result_4":"```php\n    // Convert the input string to a float\n    $number = floatval($value);\n\n    // Get the integer part of the number\n    $intPart = intval($number);\n\n    // Calculate the fraction part to decide how to round\n    $fraction = $number - $intPart;\n\n    // If the fraction part is exactly 0.5, we need to round away from zero\n    if (abs($fraction) == 0.5) {\n        if ($number > 0) {\n            // Positive number, round up\n            return $intPart + 1;\n        } else {\n            // Negative number, round down\n            return $intPart - 1;\n        }\n    }"}
{"result_5":"    // First, convert the string to a float.\n    $number = floatval($value);\n\n    // Calculate the floor and ceiling values.\n    $floor = floor($number);\n    $ceil = ceil($number);\n\n    // Check if the number is equidistant from the floor and ceiling.\n    if (($number - $floor) == ($ceil - $number)) {\n        // If equidistant, round away from zero.\n        return $number > 0 ? $ceil : $floor;\n    } else {\n        // Otherwise, round to the nearest integer.\n        return round($number);\n    }\n}\n\n// Test cases\necho closestInteger(\"10\") . \"\n\";     // Outputs: 10\necho closestInteger"}
{"result_6":"    // Convert the input string to a float to handle decimal values\n    $num = floatval($value);\n\n    // Use floor and ceil to find the nearest integers\n    $floorValue = floor($num);\n    $ceilValue = ceil($num);\n\n    // Calculate the distance from the number to the floor and ceiling values\n    $distanceToFloor = $num - $floorValue;\n    $distanceToCeil = $ceilValue - $num;\n\n    // Check if the number is exactly halfway between the floor and ceiling values\n    if ($distanceToFloor === $distanceToCeil) {\n        // Round away from zero if exactly halfway\n        if ($num > 0) {\n            return $ceilValue;\n"}
{"result_7":"    // Convert the input string to a floating-point number\n    $number = floatval($value);\n\n    // Extract the integer part of the number\n    $intPart = intval($number);\n\n    // Calculate the fractional part of the number\n    $fractionalPart = $number - $intPart;\n\n    // Check if the fractional part is exactly 0.5\n    if (abs($fractionalPart) == 0.5) {\n        // If exactly 0.5, round away from zero\n        if ($number > 0) {\n            return $intPart + 1; // For positive numbers, round up\n        } else {\n            return $intPart - 1; // For negative numbers"}
{"result_8":"    // Convert the input value to a float\n    $num = floatval($value);\n\n    // Calculate the floor and ceiling values\n    $floor = floor($num);\n    $ceil = ceil($num);\n\n    // Calculate the difference between the number and the floor/ceil values\n    $diffFloor = $num - $floor;\n    $diffCeil = $ceil - $num;\n\n    // If the number is exactly halfway between two integers\n    if ($diffFloor === 0.5) {\n        // Round away from zero\n        if ($num > 0) {\n            return $ceil;\n        } else {\n            return $floor;\n        }\n    } else {\n        // Otherwise, round to the nearest"}
{"result_9":"    // Convert the input string to a float\n    $number = floatval($value);\n\n    // Get the integer part and the fractional part of the number\n    $intPart = intval($number);\n    $fractionPart = $number - $intPart;\n\n    // Check if the number is negative\n    $isNegative = $number < 0;\n\n    // Check the absolute value of the fractional part to decide rounding\n    if (abs($fractionPart) == 0.5) {\n        // If the fraction is exactly 0.5, round away from zero\n        if ($isNegative) {\n            // If negative, subtract 1 to round away from zero\n            return $intPart - 1;\n"}
