{"result_0":"Hier ist die Lösung:\n\n```php\n/**\n * Funktion, die einen Wert (String) annimmt, der eine Zahl darstellt,\n * und gibt die nächstgelegene Ganzzahl zurück. Wenn die Zahl gleich weit von zwei Ganzzahlen entfernt ist,\n * runden Sie sie weg von Null.\n *\n * @param string $value Die Eingabewert als String\n * @return int Die nächste ganze Zahl\n */\nfunction closestInteger($value){\n    // Zuerst konvertieren wir den String in eine Decimalzahl\n    $decimal = (float)$value;\n    \n    // Dann runden wir die Zahl auf die nächste Ganzzahl ab, wenn sie positiv ist\n    if ($decimal >= 0) {\n        return round($decimal);\n    }\n    \n    // Wenn die Zahl negativ ist, runden wir sie auf die nächste Ganzzahl ab und nehmen den Gegenteil\n    else {\n        $rounded = round(-$decimal);\n        return -$rounded;\n    }\n}\n```\n\nBeispielaufrufe:\n\n```php\necho closestInteger(\"10\") . \"\n\";  // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\";  // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\";  // Ausgabe: -15\n```\n\nIch hoffe, das hilft!"}
{"result_1":"Hier ist die Lösung:\n\n```php\n/**\n * Funktion, die einen Wert (String) annimmt, der eine Zahl darstellt,\n * und gibt die nächstgelegene Ganzzahl zurück. Wenn die Zahl gleich weit von zwei\n * Ganzzahlen entfernt ist, runden Sie sie weg von Null.\n *\n * @param string $value Die Eingabe als String-Representation einer Zahl\n * @return int Die nächstgelegene Ganzzahl\n */\nfunction closestInteger($value){\n    // Konvertieren der Eingabe in einen float-Wert\n    $floatValue = (float)$value;\n    \n    // Runden auf die nächste Ganzzahl, wenn die Zahl gleich weit von zwei Ganzzahlen entfernt ist,\n    // runden Sie sie weg von Null. Dazu wird die Abweichung vom nächsten ganzen Zahl berechnet und\n    // dann mit dem Vorzeichen des Eingabewerts multipliziert.\n    $difference = abs($floatValue - round($floatValue));\n    \n    if ($difference == 0) {\n        return (int)$floatValue;\n    } elseif ($difference < 0.5) {\n        return round($floatValue);\n    } else {\n        // Wenn die Abweichung größer oder gleich 0,5 ist, runden wir weg von Null.\n        if ((int)$floatValue > 0) {\n            return (int)$floatValue + 1;\n        } elseif ((int)$floatValue < 0) {\n            return (int)$floatValue - 1;\n        }\n    }\n}\n```\n\nBeispiel-Aufrufe:\n\n```php\necho closestInteger(\"10\") . \"\n\"; // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"14.5\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\"; // Ausgabe: -15\n```"}
{"result_2":"Hier ist die Lösung:\n\n```php\n/**\n * Runden einer Zahl auf die nächste Ganzzahl, wobei bei Gleichstand zwischen zwei Zahlen diejenige gewählt wird, die weiter von Null entfernt ist.\n *\n * @param string $value Die Zahl als String, die gerundet werden soll.\n *\n * @return int Die nächstgelegene Ganzzahl.\n */\nfunction closestInteger($value){\n    // Die Zahl in einen float umwandeln\n    $number = (float)$value;\n    \n    // Die Zahl auf die nächste Ganzzahl runden\n    if ($number - floor($number) == 0.5) {\n        return $number > 0 ? ceil($number) : floor($number);\n    } else {\n        return round($number);\n    }\n}\n```\n\nIn diesem Code wird zunächst die Zahl in einen float umgewandelt, damit wir mit ihr arbeiten können. Dann wird sie auf die nächste Ganzzahl gerundet. Wenn die Zahl gleich weit von zwei Ganzzahlen entfernt ist (was bedeutet, dass der Rest bei der Division durch 1 gleich 0,5 ist), wird die Zahl auf die nächste Ganzzahl gerundet, die weiter von Null entfernt ist. Ansonsten wird sie einfach gerundet."}
{"result_3":"Hier ist die Lösung:\n\n```php\n/**\n * Runden einer Zahl auf die nächste Ganzzahl, wobei bei Gleichstand zwischen zwei Zahlen \n * immer diejenige gewählt wird, die weiter von Null entfernt ist.\n *\n * @param string $value Die Zahl als String.\n * @return int Die nächstgelegene Ganzzahl.\n */\nfunction closestInteger($value){\n    // Die Zahl als float aus dem String extrahieren\n    $number = (float)$value;\n    \n    // Die Zahl auf die nächste Ganzzahl runden\n    if ($number - floor($number) == 0.5) {\n        return $number > 0 ? ceil($number) : floor($number);\n    } else {\n        return round($number);\n    }\n}\n```\n\nBeispiel-Aufrufe:\n\n```php\necho closestInteger(\"10\") . \"\n\"; // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"14.5\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\"; // Ausgabe: -15\n```"}
{"result_4":"Hier ist die Lösung:\n\n```php\n/**\n * Funktion, die einen Wert (String) annimmt, der eine Zahl darstellt,\n * und gibt die nächstgelegene Ganzzahl zurück. Wenn die Zahl gleich weit von zwei\n * Ganzzahlen entfernt ist, runden Sie sie weg von Null.\n *\n * @param string $value Die Eingabewert als String\n * @return int Die nächstgelegene Ganzzahl\n */\nfunction closestInteger($value){\n    // Zuerst wird der Wert in einen float umgewandelt\n    $floatValue = (float)$value;\n    \n    // Dann wird die Rundung auf den nächsten ganzen Zahl durchgeführt\n    // Wenn die Zahl gleich weit von zwei Ganzzahlen entfernt ist, runden wir sie weg von Null\n    if ($floatValue - floor($floatValue) == ceil($floatValue) - $floatValue) {\n        return abs(floor($floatValue)) > abs(ceil($floatValue)) ? floor($floatValue) : ceil($floatValue);\n    } else {\n        return round($floatValue);\n    }\n}\n```\n\nBeispiel-Aufrufe:\n\n```php\nprint(closestInteger(\"10\") . \"\n\");  // Ausgabe: 10\nprint(closestInteger(\"15.3\") . \"\n\");  // Ausgabe: 15\nprint(closestInteger(\"14.5\") . \"\n\");  // Ausgabe: 15\nprint(closestInteger(\"-14.5\") . \"\n\");  // Ausgabe: -15\n```"}
{"result_5":"Hier ist die Lösung:\n\n```php\n/**\n * Runden einer Zahl auf die nächste Ganzzahl, wobei bei Gleichstand von zwei Ganzzahlen diejenige gewählt wird, die am weitesten von Null entfernt ist.\n *\n * @param string $value Die Zahl als String.\n * @return int Die nächstgelegene Ganzzahl.\n */\nfunction closestInteger($value){\n    // Die Zahl als float aus dem String extrahieren\n    $number = (float)$value;\n    \n    // Die Zahl auf die nächste Ganzzahl runden, wobei bei Gleichstand von zwei Ganzzahlen diejenige gewählt wird, die am weitesten von Null entfernt ist\n    return round($number);\n}\n```\n\nDie Funktion `closestInteger` nimmt einen String als Eingabe an und gibt eine Ganzzahl zurück. Die Zahl wird zunächst als float aus dem String extrahiert. Dann wird sie auf die nächste Ganzzahl gerundet, wobei bei Gleichstand von zwei Ganzzahlen diejenige gewählt wird, die am weitesten von Null entfernt ist.\n\nBeispiel:\n\n```php\necho closestInteger(\"10\") . \"\n\";  // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"14.5\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\"; // Ausgabe: -15\n```"}
{"result_6":"Hier ist die Lösung:\n\n```php\n/**\n * Funktion, die einen Wert (String) annimmt, der eine Zahl darstellt,\n * und gibt die nächstgelegene Ganzzahl zurück. Wenn die Zahl gleich weit von zwei Ganzzahlen entfernt ist,\n * runden Sie sie weg von Null.\n *\n * @param string $value Die Eingabewert als String\n * @return int Die nächstgelegene Ganzzahl\n */\nfunction closestInteger($value){\n    // Zuerst konvertieren wir den String in eine Zahl (float)\n    $number = floatval($value);\n    \n    // Dann runden wir die Zahl auf die nächste ganze Zahl ab, indem wir sie mit der Funktion round() aufrufen\n    // Die zweite Argument von round() ist optional und definiert die Anzahl der Nachkommastellen, nach denen gerundet werden soll.\n    // Wenn wir also 0 als zweites Argument übergeben, wird die Zahl auf die nächste ganze Zahl abgerundet\n    $roundedNumber = round($number);\n    \n    // Schließlich geben wir die gerundete Zahl zurück\n    return $roundedNumber;\n}\n```\n\nBeispielaufrufe:\n\n```php\necho closestInteger(\"10\") . \"\n\";  // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\";  // Ausgabe: 15\necho closestInteger(\"14.5\") . \"\n\";  // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\";  // Ausgabe: -15\n```"}
{"result_7":"Hier ist die Lösung:\n\n```php\n/**\n * Runden einer Zahl auf die nächste Ganzzahl, wobei bei Gleichstand zwischen zwei Zahlen diejenige gewählt wird, die weiter von Null entfernt ist.\n *\n * @param string $value Die Zahl als String, die gerundet werden soll.\n * @return int Die nächstgelegene Ganzzahl.\n */\nfunction closestInteger($value){\n    // Die Zahl als Float aus dem String extrahieren\n    $number = (float)$value;\n    \n    // Die Zahl auf die nächste Ganzzahl runden, wobei bei Gleichstand zwischen zwei Zahlen diejenige gewählt wird, die weiter von Null entfernt ist\n    if ($number - floor($number) == 0.5) {\n        return $number > 0 ? ceil($number) : floor($number);\n    } else {\n        return round($number);\n    }\n}\n```\n\nBeispiel-Aufrufe:\n\n```php\necho closestInteger(\"10\") . \"\n\"; // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"14.5\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\"; // Ausgabe: -15\n```"}
{"result_8":"Hier ist die Lösung:\n\n```php\n/**\n * Runden einer Zahl auf die nächste Ganzzahl, wobei bei Gleichstand zwischen zwei Zahlen die weitaus entferntere von Null gewählt wird.\n *\n * @param string $value Die Zahl als String, die gerundet werden soll.\n *\n * @return int Die nächstgelegene Ganzzahl.\n */\nfunction closestInteger($value){\n    // Die Zahl in einen float umwandeln\n    $number = (float)$value;\n    \n    // Die Zahl auf die nächste Ganzzahl runden\n    if ($number - floor($number) == 0.5) {\n        return $number > 0 ? ceil($number) : floor($number);\n    } else {\n        return round($number);\n    }\n}\n```\n\nBeispiel-Aufrufe:\n\n```php\necho closestInteger(\"10\") . \"\n\"; // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"14.5\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\"; // Ausgabe: -15\n```"}
{"result_9":"Hier ist die Lösung:\n\n```php\n/**\n * Funktion, die einen Wert (String) annimmt, der eine Zahl darstellt,\n * und gibt die nächstgelegene Ganzzahl zurück. Wenn die Zahl gleich weit von zwei\n * Ganzzahlen entfernt ist, runden Sie sie weg von Null.\n *\n * @param string $value Die Eingabewert als String\n * @return int Die nächstgelegene Ganzzahl\n */\nfunction closestInteger($value){\n    // Zuerst müssen wir den Wert in einen float umwandeln,\n    // damit wir ihn runden können\n    $floatValue = (float)$value;\n    \n    // Dann runden wir den Wert auf die nächste ganze Zahl ab\n    if ($floatValue - floor($floatValue) == 0.5) {\n        // Wenn der Wert gleich weit von zwei Ganzzahlen entfernt ist,\n        // runden wir ihn weg von Null\n        return $floatValue > 0 ? ceil($floatValue) : floor($floatValue);\n    } else {\n        // Ansonsten runden wir den Wert auf die nächste ganze Zahl ab\n        return round($floatValue);\n    }\n}\n```\n\nBeispielaufrufe:\n\n```php\necho closestInteger(\"10\") . \"\n\";  // Ausgabe: 10\necho closestInteger(\"15.3\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"14.5\") . \"\n\"; // Ausgabe: 15\necho closestInteger(\"-14.5\") . \"\n\"; // Ausgabe: -15\n```"}
