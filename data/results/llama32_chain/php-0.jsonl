{"result_0":"```php\n<?php\n\n/**\n * Überprüft, ob das Guthaben eines Bankkontos zu irgendeinem Zeitpunkt unter Null fällt.\n *\n * @param array $transaktionen Eine Liste von Einzahlungs- und Abhebungsvorgängen.\n * @return bool Wahr, wenn das Guthaben des Kontos zu irgendeinem Zeitpunkt unter Null fällt, falsch andernfalls.\n */\nfunction belowZero(array $transaktionen): bool\n{\n    // Sortiere die Transaktionen nach der Zeit\n    usort($transaktionen, function ($a, $b) {\n        return $a[1] <=> $b[1];\n    });\n\n    // Anfangsguthaben ist Null\n    $saldo = 0;\n\n    foreach ($transaktionen as list($betrag, $zeit)) {\n        // Wenn der Betrag negativ ist, ändert sich das Guthaben nicht\n        if ($betrag < 0) {\n            continue;\n        }\n\n        // Aktualisiere das Guthaben\n        $saldo += $betrag;\n\n        // Wenn das Guthaben unter Null fällt, kehre zurück und setze es auf Null\n        if ($saldo < 0) {\n            $saldo = 0;\n        }\n    }\n\n    return $saldo < 0;\n}\n\n// Beispieldaten für die Eingabeparameter\n$transaktionen = [\n    [100, '2022-01-01'],\n    [-50, '2022-01-02'],\n    [200, '2022-01-03'],\n    [150, '2022-01-04'],\n    [-75, '2022-01-05'],\n];\n\n// Ausführe die Funktion\n$result = belowZero($transaktionen);\n\nprint($result ? 'Ja' : 'Nein'); // Ausgabe: Nein\n\n?>\n```"}
{"result_1":"```php\n<?php\n\n/**\n * Überprüft, ob das Guthaben eines Bankkontos zu irgendeinem Zeitpunkt unter Null fällt.\n *\n * @param array $transaktionen Eine Liste von Einzahlungs- und Abhebungsvorgängen.\n * @return bool Wahr, wenn das Guthaben des Kontos zu irgendeinem Zeitpunkt unter Null fällt, falsch andernfalls.\n */\nfunction belowZero(array $transaktionen): bool\n{\n    // Sortiere die Transaktionen nach der Zeit (Datum)\n    usort($transaktionen, function ($a, $b) {\n        return $a['datum'] <=> $b['datum'];\n    });\n\n    // Berechne das Guthaben des Kontos\n    $saldo = 0;\n    foreach ($transaktionen as $transaktion) {\n        if ($transaktion['typ'] === 'Einzahlung') {\n            $saldo += $transaktion['betrag'];\n        } elseif ($transaktion['typ'] === 'Abhebung') {\n            $saldo -= $transaktion['betrag'];\n        }\n\n        // Überprüfe, ob das Guthaben unter Null fällt\n        if ($saldo < 0) {\n            return true;\n        }\n    }\n\n    // Wenn die Funktion nicht zurückgegeben wurde, bedeutet dies, dass das Guthaben nie unter Null gefallen ist\n    return false;\n}\n\n// Beispieldaten für die Eingabeparameter\n$transaktionen = [\n    ['datum' => '2022-01-01', 'typ' => 'Einzahlung', 'betrag' => 100],\n    ['datum' => '2022-01-02', 'typ' => 'Abhebung', 'betrag' => 50],\n    ['datum' => '2022-01-03', 'typ' => 'Einzahlung', 'betrag' => 200],\n];\n\n// Ausführe die Funktion\n$result = belowZero($transaktionen);\necho $result ? 'Das Guthaben fällt zu irgendeinem Zeitpunkt unter Null.' : 'Das Guthaben bleibt immer über oder gleich Null.';\n\n?>\n```"}
{"result_2":"```php\n<?php\n\n/**\n * Überprüft, ob das Guthaben eines Bankkontos zu irgendeinem Zeitpunkt unter Null fällt.\n *\n * @param array $transaktionen Eine Liste von Einzahlungs- und Abhebungsvorgängen.\n * @return bool Wahr, wenn das Guthaben des Kontos zu irgendeinem Zeitpunkt unter Null fällt, falsch andernfalls.\n */\nfunction belowZero(array $transaktionen): bool\n{\n    // Sortiere die Transaktionen nach der Zeit, um sicherzustellen, dass die Abhebungen vor den Einzahlungen liegen\n    usort($transaktionen, function ($a, $b) {\n        return $a[1] <=> $b[1];\n    });\n\n    // Berechnet das Guthaben des Kontos nach jeder Transaktion\n    $saldo = 0;\n    foreach ($transaktionen as list($betrag, $zeit)) {\n        if ($betrag < 0) {\n            // Wenn eine Abhebung erfolgt, reduziere das Guthaben\n            $saldo += $betrag;\n        } elseif ($betrag > 0) {\n            // Wenn eine Einzahlung erfolgt, erhöhe das Guthaben\n            $saldo -= $betrag;\n        }\n\n        // Überprüfe, ob das Guthaben zu irgendeinem Zeitpunkt unter Null fällt\n        if ($saldo < 0) {\n            return true;\n        }\n    }\n\n    // Wenn keine Abhebung erfolgt ist, ist das Guthaben immer positiv oder null\n    return false;\n}\n\n// Beispieldaten für die Eingabeparameter\n$transaktionen = [\n    [-100, '2022-01-01'],  // Einzahlung von 100 Euro am 1. Januar 2022\n    [50, '2022-01-02'],     // Abhebung von 50 Euro am 2. Januar 2022\n    [200, '2022-01-03'],    // Einzahlung von 200 Euro am 3. Januar 2022\n    [-150, '2022-01-04'],   // Abhebung von 150 Euro am 4. Januar 2022\n];\n\n// Ausführe die Funktion und überprüfe das Ergebnis\n$result = belowZero($transaktionen);\necho $result ? 'Das Guthaben ist zu irgendeinem Zeitpunkt unter Null gefallen' : 'Das Guthaben ist nie unter Null gefallen';\n\n?>\n```"}
{"result_3":"```php\n<?php\n\n/**\n * Überprüft, ob das Guthaben eines Bankkontos zu irgendeinem Zeitpunkt unter Null fällt.\n *\n * @param array $transaktionen Eine Liste von Einzahlungs- und Abhebungsvorgängen.\n * @return bool Wahr, wenn das Guthaben des Kontos zu irgendeinem Zeitpunkt unter Null fällt, falsch andernfalls.\n */\nfunction belowZero(array $transaktionen): bool\n{\n    // Sortiere die Transaktionen nach der Zeit, um sicherzustellen, dass die Abhebungen vor den Einzahlungen liegen\n    usort($transaktionen, function ($a, $b) {\n        return $a[1] <=> $b[1];\n    });\n\n    // Führe die Transaktionen durch und halte das aktuelle Guthaben auf\n    $guthaben = 0;\n    foreach ($transaktionen as list($betrag, $zeit)) {\n        if ($betrag < 0) {\n            // Abhebung: subtrahiere den Betrag vom Guthaben\n            $guthaben += $betrag;\n        } else {\n            // Einzahlung: füge den Betrag zum Guthaben hinzu\n            $guthaben -= $betrag;\n        }\n    }\n\n    // Überprüfe, ob das Guthaben jemals unter Null gefallen ist\n    return $guthaben < 0;\n}\n\n// Beispieldaten für die Eingabeparameter\n$transaktionen = [\n    [-100, '2022-01-01'], // Einzahlung von 100 € am 1. Januar 2022\n    [50, '2022-01-15'], // Abhebung von 50 € am 15. Januar 2022\n    [200, '2022-02-01'], // Einzahlung von 200 € am 1. Februar 2022\n    [-20, '2022-03-01'], // Abhebung von 20 € am 1. März 2022\n];\n\n// Führe die Überprüfung durch und drucke das Ergebnis\necho belowZero($transaktionen) ? 'Ja' : 'Nein'; // Ausgabe: Ja\n\n?>\n```"}
{"result_4":"Basis für die Lösung:\n```php\n<?php\n\n/**\n * Überprüft, ob das Guthaben eines Bankkontos zu irgendeinem Zeitpunkt unter Null fällt.\n *\n * @param array $transaktionen Eine Liste von Einzahlungs- und Abhebungsvorgängen.\n * @return bool Wahr, wenn das Guthaben zu irgendeinem Zeitpunkt unter Null fällt, falsch andernfalls.\n */\nfunction belowZero(array $transaktionen): bool\n{\n    // Sortiere die Transaktionen nach der Zeit (Datum)\n    usort($transaktionen, function ($a, $b) {\n        return strtotime($a['datum']) - strtotime($b['datum']);\n    });\n\n    // Berechnet das Guthaben nach jeder Transaktion\n    $guthaben = 0;\n    foreach ($transaktionen as $transaktion) {\n        switch ($transaktion['typ']) {\n            case 'Einzahlung':\n                $guthaben += $transaktion['betrag'];\n                break;\n            case 'Abhebung':\n                if ($guthaben >= $transaktion['betrag']) {\n                    $guthaben -= $transaktion['betrag'];\n                } else {\n                    return true; // Guthaben ist zu niedrig, um eine Abhebung durchzuführen\n                }\n                break;\n        }\n    }\n\n    // Überprüft, ob das Guthaben nach der letzten Transaktion unter Null fällt\n    return $guthaben < 0;\n}\n\n// Beispieldaten für die Eingabeparameter\n$transaktionen = [\n    ['datum' => '2022-01-01', 'typ' => 'Einzahlung', 'betrag' => 100],\n    ['datum' => '2022-01-02', 'typ' => 'Abhebung', 'betrag' => 50],\n    ['datum' => '2022-01-03', 'typ' => 'Einzahlung', 'betrag' => 200],\n];\n\n// Ausführen der Funktion\n$result = belowZero($transaktionen);\necho $result ? 'Ja, das Guthaben fällt zu einem Zeitpunkt unter Null.' : 'Nein, das Guthaben fällt nie unter Null.';\n```"}
