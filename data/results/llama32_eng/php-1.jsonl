{"result_0":" /**\n  * This function calculates the sum and product of a list of integers.\n  *\n  * @param array $numbers A list of integers\n  *\n  * @return array A tuple containing the sum and product of all integers in the list\n  *               (0, 1) if the input list is empty\n  */\n function sumProduct($numbers){\n    // Initialize variables to store the sum and product\n    $totalSum = 0;\n    $totalProduct = 1;\n\n    // Iterate over each number in the list\n    foreach ($numbers as $num) {\n        // Add the current number to the total sum\n        $totalSum += $num;\n        \n        // Multiply the current number with the total product\n        $totalProduct *= $num;\n    }\n\n    // Return a tuple containing the total sum and product\n    return array($totalSum, $totalProduct);\n}"}
{"result_1":" /**\n  * Returns a tuple consisting of the sum and product of all integers in the given list.\n  * If the list is empty, returns (0, 1).\n  *\n  * @param array $numbers A list of integers\n  * @return array A tuple containing the sum and product of the integers\n  */\nfunction sumProduct($numbers){\n    // Initialize variables to store the sum and product\n    $totalSum = 0;\n    $totalProduct = 1;\n\n    // Iterate over each number in the list\n    foreach ($numbers as $number) {\n        // Add the current number to the total sum\n        $totalSum += $number;\n        \n        // Multiply the current number with the total product\n        $totalProduct *= $number;\n    }\n\n    // Return a tuple containing the total sum and product\n    return array($totalSum, $totalProduct);\n}"}
{"result_2":" /**\n  * This function calculates the sum and product of a list of integers.\n  *\n  * @param array $numbers A list of integers\n  *\n  * @return array A tuple containing the sum and product of all integers in the list\n  */\n\n function sumProduct($numbers){\n \n    // Initialize variables to store the sum and product, with default values of 0 and 1 respectively\n    $totalSum = 0;\n    $totalProduct = 1;\n\n    // Iterate over each number in the list\n    foreach ($numbers as $num) {\n        // Add the current number to the total sum\n        $totalSum += $num;\n        \n        // Multiply the current number with the total product\n        $totalProduct *= $num;\n    }\n\n    // Return a tuple containing the total sum and product\n    return array($totalSum, $totalProduct);\n}\n\n// Test cases\nprint_r(sumProduct([]));  // Expected output: Array ( [0] => 0 [1] => 1 )\nprint_r(sumProduct([1, 2, 3, 4]));  // Expected output: Array ( [0] => 10 [1] => 24 )"}
{"result_3":" /**\n  * This function calculates the sum and product of a list of integers.\n  *\n  * @param array $numbers A list of integers.\n  *\n  * @return array A tuple containing the sum and product of all integers in the list.\n  *               If the list is empty, it returns (0, 1).\n  */\n function sumProduct($numbers){\n    // Initialize variables to store the sum and product\n    $totalSum = 0;\n    $totalProduct = 1;\n\n    // Iterate over each number in the list\n    foreach ($numbers as $num) {\n        // Add the current number to the total sum\n        $totalSum += $num;\n        \n        // Multiply the current number with the total product\n        $totalProduct *= $num;\n    }\n\n    // Return a tuple containing the total sum and product\n    return array($totalSum, $totalProduct);\n}"}
{"result_4":" /**\n  * This function calculates the sum and product of all integers in a given list.\n  *\n  * @param array $numbers A list of integers\n  *\n  * @return array A tuple containing the sum and product of all integers in the list\n  */\nfunction sumProduct($numbers){\n    // Initialize variables to store the sum and product, with default values of 0 and 1 respectively\n    $totalSum = 0;\n    $totalProduct = 1;\n\n    // Iterate over each number in the list\n    foreach ($numbers as $num) {\n        // Add the current number to the total sum\n        $totalSum += $num;\n        \n        // Multiply the current number with the total product\n        $totalProduct *= $num;\n    }\n\n    // Return a tuple containing the total sum and product\n    return array($totalSum, $totalProduct);\n}\n\n// Test cases\nprint_r(sumProduct([]));  // Output: Array ( [0] => 0 [1] => 1 )\nprint_r(sumProduct([1, 2, 3, 4]));  // Output: Array ( [0] => 10 [1] => 24 )"}
