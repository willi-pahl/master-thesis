{"result_0":" /**\n  * Returns the closest integer to the given value, rounding away from zero if equidistant.\n  *\n  * @param string $value A string representing a number\n  * @return int The closest integer to the given value\n  */\n function closestInteger($value) {\n    // Convert the input string to a float\n    $num = (float)$value;\n    \n    // If the number is an integer, return it as is\n    if ($num == (int)$num) {\n        return (int)$num;\n    }\n    \n    // Calculate the distance from the number to the nearest integers below and above it\n    $below = (int)$num - (int)$num;\n    $above = (int)(($num + 0.5));\n    \n    // If the number is equidistant from both, choose the one that's farther from zero\n    if ($abs($num - $below) == $abs($num - $above)) {\n        return $above > 0 ? $above : -$above;\n    }\n    \n    // Otherwise, just round to the nearest integer\n    return (int)$num;\n}\n\n// Test cases\necho closestInteger(\"10\") . \"\n\"; // Output: 10\necho closestInteger(\"15.3\") . \"\n\"; // Output: 15\necho closestInteger(\"-14.5\") . \"\n\"; // Output: -15"}
{"result_1":" /**\n  * Returns the closest integer to a given number, rounding away from zero if equidistant.\n  *\n  * @param string $value A string representing a number\n  * @return int The closest integer to the given value\n  */\n function closestInteger($value) {\n    // Convert the input string to a float\n    $num = (float)$value;\n    \n    // If the number is an integer, return it immediately\n    if ($num == (int)$num) {\n        return (int)$num;\n    }\n    \n    // Calculate the distance from the number to the nearest integers below and above it\n    $below = abs($num - (int)$num);\n    $above = abs((int)$num - $num);\n    \n    // If the number is equidistant from two integers, round away from zero\n    if ($below == $above) {\n        return (int)$num + (($num >= 0) ? 1 : -1);\n    }\n    \n    // Otherwise, simply return the nearest integer\n    return $num < 0 ? (int)$num - 1 : (int)$num;\n}"}
{"result_2":" /**\n  * Returns the closest integer to a given value, rounding away from zero if equidistant.\n  *\n  * @param string $value A string representing a number.\n  *\n  * @return int The closest integer to the given value.\n  */\n function closestInteger($value) {\n    // Convert the input string to a float\n    $num = (float)$value;\n    \n    // If the number is an integer, return it immediately\n    if ($num == (int)$num) {\n        return (int)$num;\n    }\n    \n    // Calculate the distance from zero for both possible integers\n    $lower = (int)($num - 0.5);\n    $upper = (int)($num + 0.5);\n    \n    // If the lower integer is closer to zero, return it; otherwise, return the upper integer\n    if ($abs($lower) < $abs($upper)) {\n        return $lower;\n    } else {\n        return $upper;\n    }\n}\n\n// Test cases\nprint(closestInteger(\"10\") . \"\n\");  // Output: 10\nprint(closestInteger(\"15.3\") . \"\n\"); // Output: 15\nprint(closestInteger(\"-14.5\") . \"\n\"); // Output: -15"}
{"result_3":"<?php\n\n/**\n * Returns the closest integer to the given value, rounding away from zero if equidistant.\n *\n * @param string $value A string representing a number\n *\n * @return int The closest integer to the given value\n */\nfunction closestInteger($value) {\n    // Convert the input string to a float\n    $num = (float)$value;\n\n    // If the number is an integer, return it immediately\n    if ($num == (int)$num) {\n        return (int)$num;\n    }\n\n    // Calculate the distance from zero for both positive and negative numbers\n    $distanceToZeroPositive = abs($num - (int)$num);\n    $distanceToZeroNegative = abs(-$num - (int)-$num);\n\n    // If the number is equidistant from two integers, round away from zero\n    if ($distanceToZeroPositive == $distanceToZeroNegative) {\n        return (int)$num > 0 ? (int)$num + 1 : (int)$num - 1;\n    }\n\n    // Otherwise, simply return the closest integer\n    return (int)$num < 0 ? -$num : (int)$num;\n}\n\n// Test cases\nprint(closestInteger(\"10\") . \"\n\");  // Output: 10\nprint(closestInteger(\"15.3\") . \"\n\"); // Output: 15\nprint(closestInteger(\"-14.5\") . \"\n\"); // Output: -15"}
{"result_4":" /**\n  * Returns the closest integer to a given number, rounding away from zero if equidistant.\n  *\n  * @param string $value A string representing a number\n  * @return int The closest integer to the given value\n  */\n function closestInteger($value) {\n    // Convert the input string to a float\n    $num = (float)$value;\n    \n    // If the number is an integer, return it immediately\n    if ($num == (int)$num) {\n        return (int)$num;\n    }\n    \n    // Calculate the distance from the number to the nearest integers below and above it\n    $below = abs($num - (int)$num);\n    $above = abs((int)$num - $num);\n    \n    // If the number is equidistant from two integers, choose the one that is farther from zero\n    if ($below == $above) {\n        return (int)$num > 0 ? (int)$num : -(int)$num;\n    }\n    \n    // Otherwise, round to the nearest integer below or above, depending on which distance is smaller\n    return $below < $above ? (int)$num - 1 : (int)$num + 1;\n}"}
