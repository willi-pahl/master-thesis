{"result_0":"<?php\n\n/**\n * This function calculates the average of two positive integers n and m (inclusive),\n * rounds it to the nearest integer, converts it to binary, and returns the result.\n * If n is greater than m, it returns -1.\n *\n * @param int $n The first positive integer.\n * @param int $m The second positive integer.\n *\n * @return string The average of n and m in binary format, or -1 if n > m.\n */\nfunction roundedAvg($n, $m){\n    // Check if n is greater than m\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Calculate the sum of integers from n to m (inclusive)\n    $total = array_sum(range($n, $m));\n\n    // Calculate the average\n    $avg = floor($total / ($m - $n + 1));\n\n    // Convert the average to binary and remove the '0b' prefix\n    $binaryAvg = decbin($avg);\n\n    return \"0b\" . $binaryAvg;\n}\n\n// Test cases\necho roundedAvg(1, 5) . \"\n\";  // Output: 0b11\necho roundedAvg(7, 5) . \"\n\";   // Output: -1\necho roundedAvg(10, 20) . \"\n\"; // Output: 0b1111\necho roundedAvg(20, 33) . \"\n\"; // Output: 0b11010"}
{"result_1":" /**\n  * This function calculates the average of two integers from n to m (inclusive),\n  * rounds it to the nearest integer, converts it to binary and returns as a string.\n  * If n is greater than m, it returns -1.\n  *\n  * @param int $n The starting number\n  * @param int $m The ending number\n  * @return string The average in binary or -1 if n > m\n  */\nfunction roundedAvg($n, $m){\n    // Check if n is greater than m and return -1 if true\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Calculate the sum of numbers from n to m (inclusive)\n    $total = array_sum(range($n, $m));\n\n    // Calculate the average\n    $avg = floor($total / ($m - $n + 1));\n\n    // Convert the average to binary and remove the '0b' prefix\n    $binaryAvg = decbin($avg);\n\n    return '0b' . $binaryAvg;\n}\n\n// Test cases\necho roundedAvg(1, 5) . \"\n\"; // Output: \"0b11\"\necho roundedAvg(7, 5) . \"\n\"; // Output: -1\necho roundedAvg(10, 20) . \"\n\"; // Output: \"0b1111\"\necho roundedAvg(20, 33) . \"\n\"; // Output: \"0b11010\""}
{"result_2":"<?php\n\n/**\n * This function calculates the average of two positive integers n and m (inclusive),\n * rounds it to the nearest integer, converts it to binary, and returns the result.\n * If n is greater than m, it returns -1.\n *\n * @param int $n The starting number\n * @param int $m The ending number\n * @return string The binary representation of the rounded average, or -1 if n > m\n */\nfunction roundedAvg($n, $m){\n    // Check if n is greater than m and return -1 if true\n    if ($n > $m) {\n        return \"-1\";\n    }\n\n    // Calculate the sum of numbers from n to m (inclusive)\n    $total = array_sum(range($n, $m));\n\n    // Calculate the average by dividing the total by 2 (since we're including both ends)\n    $avg = floor($total / 2);\n\n    // Convert the average to binary and remove the '0b' prefix\n    $binaryAvg = decbin($avg);\n\n    return \"0b\" . $binaryAvg;\n}\n\n// Test cases\necho roundedAvg(1, 5) . \"\n\";  // Output: \"0b11\"\necho roundedAvg(7, 5) . \"\n\";   // Output: -1\necho roundedAvg(10, 20) . \"\n\"; // Output: \"0b1111\"\necho roundedAvg(20, 33) . \"\n\"; // Output: \"0b11010\""}
{"result_3":" /**\n  * This function calculates the average of two integers from n to m (inclusive),\n  * rounds it to the nearest integer, converts it to binary and returns it as a string.\n  * If n is greater than m, it returns -1.\n  *\n  * @param int $n The starting number\n  * @param int $m The ending number\n  * @return string The average in binary format or -1 if n > m\n  */\nfunction roundedAvg($n, $m){\n    // Check if n is greater than m and return -1 if true\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Calculate the sum of numbers from n to m (inclusive)\n    $total = ($m - $n + 1) * ($n + $m) / 2;\n\n    // Round the average to the nearest integer\n    $avg = round($total);\n\n    // Convert the average to binary and return it as a string\n    return '0b' . decbin($avg);\n}"}
{"result_4":" /**\n  * This function calculates the average of two integers from n to m (inclusive),\n  * rounds it to the nearest integer, converts it to binary and returns as a string.\n  * If n is greater than m, it returns -1.\n  *\n  * @param int $n The starting number\n  * @param int $m The ending number\n  *\n  * @return string The average of n to m in binary format or -1 if n > m\n  */\nfunction roundedAvg($n, $m){\n    // Check if n is greater than m and return -1 if true\n    if ($n > $m) {\n        return '-1';\n    }\n\n    // Calculate the sum of numbers from n to m (inclusive)\n    $total = ($m - $n + 1) * ($n + $m) / 2;\n\n    // Round the average to the nearest integer\n    $avg = round($total);\n\n    // Convert the average to binary and remove the '0b' prefix\n    $binaryAvg = decbin($avg);\n\n    return '0b' . $binaryAvg;\n}\n\n// Test cases\necho roundedAvg(1, 5) . \"\n\";  // Output: \"0b11\"\necho roundedAvg(7, 5) . \"\n\";   // Output: -1\necho roundedAvg(10, 20) . \"\n\"; // Output: \"0b1111\"\necho roundedAvg(20, 33) . \"\n\"; // Output: \"0b11010\""}
