{"result_0":"<?php\n\n/**\n * Sorts a space-delimited string of numbers from 'zero' to 'nine' in ascending order.\n *\n * @param string $numbers A space-delimited string of numbers.\n *\n * @return string The input string with numbers sorted from smallest to largest.\n */\nfunction sortNumbers($numbers){\n    // Define an array mapping the numbers to their corresponding integer values\n    $numberMap = [\n        'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\n        'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9\n    ];\n\n    // Split the input string into an array of numbers\n    $numbersArray = explode(' ', $numbers);\n\n    // Sort the array based on the integer values of the numbers\n    sort($numbersArray, function($a, $b) use ($numberMap) {\n        return $numberMap[$a] <=> $numberMap[$b];\n    });\n\n    // Join the sorted array back into a string with spaces in between\n    $sortedNumbers = implode(' ', $numbersArray);\n\n    return $sortedNumbers;\n}\n\n// Test the function\nprint(sortNumbers('three one five'));  // Output: 'one three five'"}
{"result_1":"<?php\n\n/**\n * Sorts a space-delimited string of numbers from 'zero' to 'nine' in ascending order.\n *\n * @param string $numbers A space-delimited string of numbers.\n *\n * @return string The input string with numbers sorted from smallest to largest.\n */\nfunction sortNumbers($numbers){\n    // Define the valid choices and their corresponding numerical values\n    $choices = [\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    ];\n\n    // Split the input string into an array of numbers\n    $numbersArray = explode(' ', $numbers);\n\n    // Sort the array based on the numerical values\n    sort($numbersArray, function($a, $b) use ($choices) {\n        return $choices[$a] <=> $choices[$b];\n    });\n\n    // Join the sorted array back into a string with spaces in between\n    $sortedNumbers = implode(' ', $numbersArray);\n\n    return $sortedNumbers;\n}\n\n// Test the function\nprint(sortNumbers('three one five'));  // Output: 'one three five'"}
{"result_2":" /**\n  * Sorts a space-delimited string of numbers from 'zero' to 'nine' in ascending order.\n  *\n  * @param string $numbers A space-delimited string of numbers.\n  * @return string The input string with numbers sorted from smallest to largest.\n  */\nfunction sortNumbers($numbers){\n    // Define the valid choices\n    $choices = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\n    // Split the input string into an array of numbers\n    $numArray = explode(' ', $numbers);\n\n    // Check if all numbers are valid choices\n    foreach ($numArray as $number) {\n        if (!in_array($number, $choices)) {\n            throw new Exception(\"Invalid number: '$number'\");\n        }\n    }\n\n    // Sort the array of numbers\n    sort($numArray);\n\n    // Join the sorted array back into a string with spaces in between\n    $sortedNumbers = implode(' ', $numArray);\n\n    return $sortedNumbers;\n}\n\n// Test the function\nprint(sortNumbers('three one five'));  // Outputs: \"one three five\""}
{"result_3":"<?php\n\n/**\n * Sorts a space-delimited string of numbers from 'zero' to 'nine' in ascending order.\n *\n * @param string $numbers A space-delimited string of numbers.\n *\n * @return string The input string with numbers sorted from smallest to largest.\n */\nfunction sortNumbers($numbers){\n    // Define an array mapping the input strings to their corresponding numerical values\n    $numberMap = [\n        'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\n        'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9\n    ];\n\n    // Split the input string into an array of numbers\n    $numbersArray = explode(' ', $numbers);\n\n    // Sort the array using the number map to compare values\n    sort($numbersArray, function($a, $b) use ($numberMap) {\n        return $numberMap[$a] <=> $numberMap[$b];\n    });\n\n    // Join the sorted array back into a string with spaces in between\n    $sortedNumbers = implode(' ', $numbersArray);\n\n    return $sortedNumbers;\n}\n\n// Test the function\nprint(sortNumbers('three one five'));  // Output: 'one three five'"}
{"result_4":" /**\n  * Sorts a space-delimited string of numbers from 'zero' to 'nine' in ascending order.\n  *\n  * @param string $numbers A space-delimited string of numbers.\n  *\n  * @return string The input string with numbers sorted from smallest to largest.\n  */\nfunction sortNumbers($numbers){\n    // Define the valid choices as an array for efficient lookups\n    $choices = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\n    // Split the input string into an array of numbers\n    $numArray = explode(' ', $numbers);\n\n    // Use a foreach loop to replace each number with its corresponding choice and sort the array\n    $sortedNumArray = [];\n    foreach ($choices as $choice) {\n        if (in_array($choice, $numArray)) {\n            $sortedNumArray[] = $choice;\n        }\n    }\n\n    // Sort the array of choices in ascending order\n    sort($sortedNumArray);\n\n    // Join the sorted array back into a string with spaces in between each number\n    $sortedNumbers = implode(' ', $sortedNumArray);\n\n    return $sortedNumbers;\n}\n\n// Test the function\necho sortNumbers('three one five');  // Outputs: \"one three five\""}
