{"result_0":"```php\n/**\n * Diese Funktion berechnet den Durchschnitt der Ganzzahlen von n bis m (einschließlich n und m),\n * rundet die Antwort auf die nächste Ganzzahl und konvertiert diese in binär.\n * Wenn n größer als m ist, gibt sie -1 zurück.\n *\n * @param int $n Die kleinere Ganzzahl.\n * @param int $m Die größere Ganzzahl.\n * @return string Die binäre Darstellung des Durchschnitts oder -1 wenn n > m.\n */\nfunction roundedAvg($n, $m) {\n    // Überprüfen, ob n größer als m ist\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Berechnen des Durchschnitts\n    $avg = ($n + $m) / 2;\n\n    // Runden auf die nächste Ganzzahl\n    $roundedAvg = round($avg);\n\n    // Konvertieren in binär und vornehen \"0b\"\n    $binary = decbin($roundedAvg);\n    $binary = '0b' . $binary;\n\n    return $binary;\n}\n\n// Testfälle\nprint(roundedAvg(1, 5) . \"\n\");  // => \"0b11\"\nprint(roundedAvg(7, 5) . \"\n\");  // => \"-1\"\nprint(roundedAvg(10, 20) . \"\n\");  // => \"0b1111\"\nprint(roundedAvg(20, 33) . \"\n\");  // => \"0b11010\"\n```"}
{"result_1":"```php\n/**\n * Diese Funktion berechnet den Durchschnitt der Ganzzahlen von n bis m (einschließlich n und m),\n * rundet die Antwort auf die nächste Ganzzahl und konvertiert diese in binär.\n * Wenn n größer als m ist, gibt sie -1 zurück.\n *\n * @param int $n Die kleinere Ganzzahl\n * @param int $m Die größere Ganzzahl\n * @return string Die binäre Darstellung des Durchschnitts oder -1 wenn n > m\n */\nfunction roundedAvg($n, $m) {\n    // Überprüfen, ob n größer als m ist und gegebenenfalls -1 zurückgeben\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Den Durchschnitt der Ganzzahlen von n bis m berechnen\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n\n    // Den Durchschnitt auf die nächste Ganzzahl runden\n    $roundedAvg = round($avg);\n\n    // Den gerundeten Durchschnitt in binär umwandeln\n    $binary = decbin($roundedAvg);\n\n    // Die binäre Darstellung als String mit '0b' vornehen und zurückgeben\n    return '0b' . $binary;\n}\n```\n\nBeispiele:\n```php\necho roundedAvg(1, 5);   // => \"0b11\"\necho roundedAvg(7, 5);   // => -1\necho roundedAvg(10, 20); // => \"0b1111\"\necho roundedAvg(20, 33); // => \"0b11010\"\n```"}
{"result_2":"```php\n/**\n * Berechnet den Durchschnitt der Ganzzahlen von n bis m (einschließlich n und m), \n * rundet die Antwort auf die nächste Ganzzahl und konvertiert diese in binär.\n * Wenn n größer als m ist, gibt -1 zurück.\n *\n * @param int $n Die erste Ganzzahl\n * @param int $m Die zweite Ganzzahl\n * @return string|string Die binäre Darstellung des Durchschnitts oder -1 wenn n > m\n */\nfunction roundedAvg($n, $m) {\n    // Überprüfen, ob n größer als m ist und gegebenenfalls -1 zurückgeben\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Berechnen des Durchschnitts der Ganzzahlen von n bis m\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n\n    // Runden des Durchschnitts auf die nächste Ganzzahl\n    $roundedAvg = round($avg);\n\n    // Konvertieren des Durchschnitts in binär und vornehnung mit \"0b\"\n    $binaryAvg = decbin($roundedAvg);\n    return \"0b\" . $binaryAvg;\n}\n\n// Testfälle\necho roundedAvg(1, 5) . \"\n\";  // => \"0b11\"\necho roundedAvg(7, 5) . \"\n\";  // => -1\necho roundedAvg(10, 20) . \"\n\";  // => \"0b1111\"\necho roundedAvg(20, 33) . \"\n\";  // => \"0b11010\"\n```\n\nHinweis: Die Funktion `decbin()` konvertiert eine Dezimalzahl in eine binäre Zahl. Die Funktion `round()` rundet die Zahl auf die nächste Ganzzahl. Die Schleife berechnet den Durchschnitt der Zahlen von `$n` bis `$m`. Wenn `$n` größer als `$m` ist, wird -1 zurückgegeben."}
{"result_3":"```php\n/**\n * Diese Funktion berechnet den Durchschnitt der Ganzzahlen von n bis m (einschließlich n und m), \n * rundet die Antwort auf die nächste Ganzzahl und konvertiert diese in binär.\n * Wenn n größer als m ist, gibt sie -1 zurück.\n *\n * @param int $n Die kleinere Ganzzahl.\n * @param int $m Die größere Ganzzahl.\n * @return string Die binäre Darstellung des Durchschnitts oder -1 wenn n > m.\n */\nfunction roundedAvg($n, $m) {\n    // Überprüfen, ob n größer als m ist\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Berechnen der Summe aller Ganzzahlen von n bis m\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\n    // Berechnen des Durchschnitts\n    $avg = $sum / ($m - $n + 1);\n\n    // Runden auf die nächste Ganzzahl\n    $roundedAvg = round($avg);\n\n    // Konvertieren in binär und vornehen \"0b\"\n    $binary = decbin($roundedAvg);\n    return \"0b\" . $binary;\n}\n\n// Testfälle\necho roundedAvg(1, 5) . \"\n\";  // => \"0b11\"\necho roundedAvg(7, 5) . \"\n\";  // => \"-1\"\necho roundedAvg(10, 20) . \"\n\";  // => \"0b1111\"\necho roundedAvg(20, 33) . \"\n\";  // => \"0b11010\"\n```\n\nDiese Funktion berechnet den Durchschnitt der Ganzzahlen von `$n` bis `$m`, rundet die Antwort auf die nächste Ganzzahl und konvertiert diese in binär. Wenn `$n` größer als `$m` ist, gibt sie `-1` zurück. Die Funktion verwendet eine Schleife, um die Summe aller Ganzzahlen zu berechnen, und dann den Durchschnitt. Anschließend wird der Durchschnitt auf die nächste Ganzzahl gerundet und in binär konvertiert. Das Ergebnis wird als Zeichenkette zurückgegeben, wobei \"0b\" vorangestellt ist, um es als binäre Zahl zu kennzeichnen."}
{"result_4":"```php\n/**\n * Diese Funktion berechnet den Durchschnitt der Ganzzahlen von n bis m (einschließlich n und m),\n * rundet die Antwort auf die nächste Ganzzahl und konvertiert diese in binär.\n * Wenn n größer als m ist, gibt sie -1 zurück.\n *\n * @param int $n Die kleinere Ganzzahl.\n * @param int $m Die größere Ganzzahl.\n * @return string Die binäre Darstellung des Durchschnitts oder -1 wenn n > m.\n */\nfunction roundedAvg($n, $m) {\n    // Überprüfen, ob n größer als m ist\n    if ($n > $m) {\n        return -1;\n    }\n\n    // Berechnen der Summe aller Ganzzahlen von n bis m\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\n    // Berechnen des Durchschnitts\n    $avg = $sum / ($m - $n + 1);\n\n    // Runden auf die nächste Ganzzahl\n    $roundedAvg = round($avg);\n\n    // Konvertieren in binär und vornehen \"0b\"\n    $binary = decbin($roundedAvg);\n    return '0b' . $binary;\n}\n\n// Testfälle\necho roundedAvg(1, 5) . \"\n\";  // => \"0b11\"\necho roundedAvg(7, 5) . \"\n\";  // => \"-1\"\necho roundedAvg(10, 20) . \"\n\";  // => \"0b1111\"\necho roundedAvg(20, 33) . \"\n\";  // => \"0b11010\"\n```\n\nDiese Funktion verwendet einen Schleifensatz, um die Summe aller Ganzzahlen von `$n` bis `$m` zu berechnen. Anschließend wird der Durchschnitt berechnet und auf die nächste Ganzzahl gerundet. Die binäre Darstellung des Durchschnitts wird mit `decbin()` ermittelt und vornehan \"0b\" angehängt, um das Ergebnis zu liefern. Wenn `$n` größer als `$m` ist, wird -1 zurückgegeben."}
