{"result_0":"```php\n/**\n * Diese Funktion nimmt einen String $s entgegen und kehrt die Groß- und Kleinschreibung von Buchstaben um,\n * oder belässt es so wie es ist, wenn der String keine Buchstaben enthält.\n *\n * @param string $s Der Eingabe-String\n * @return string Der resultierende String\n */\nfunction solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $char = $s[$i];\n        // Überprüfen, ob das Zeichen ein Buchstabe ist\n        if (ctype_alpha($char)) {\n            // Wenn es ein Buchstabe ist, umkehren wir die Groß- und Kleinschreibung\n            $result .= strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n        } else {\n            // Wenn es kein Buchstabe ist, belassen wir es so wie es ist\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\n// Testfälle\necho solve(\"1234\") . \"\n\";  // \"4321\"\necho solve(\"ab\") . \"\n\";     // \"AB\"\necho solve(\"#a@C\") . \"\n\";   // \"#A@c\"\n```"}
{"result_1":"```php\n/**\n * Diese Funktion nimmt einen String $s entgegen und kehrt die Groß- und Kleinschreibung von Buchstaben um.\n * Wenn der String keine Buchstaben enthält, kehrt sie den gesamten String um.\n *\n * @param string $s Der Eingabe-String\n * @return string Der resultierende String\n */\nfunction solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $char = $s[$i];\n        if (ctype_alpha($char)) {\n            // Wenn der Char ein Buchstabe ist, kehre seine Groß- und Kleinschreibung um\n            $result .= strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n        } else {\n            // Wenn der Char kein Buchstabe ist, belasse ihn so wie er ist\n            $result .= $char;\n        }\n    }\n    // Wenn der String keine Buchstaben enthält, kehre den gesamten String um\n    if (!preg_match('/[a-zA-Z]/', $s)) {\n        $result = strrev($s);\n    }\n    return $result;\n}\n\n// Testfälle\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\"; // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n```"}
{"result_2":"```php\n/**\n * Diese Funktion nimmt einen String $s entgegen und kehrt alle Buchstaben um, \n * oder belasst sie wenn es keine Buchstaben enthält.\n * \n * @param string $s Der Eingabe-String\n * @return string Der resultierende String\n */\nfunction solve($s) {\n    // Überprüfe ob der String nur aus Zahlen besteht\n    if (ctype_digit($s)) {\n        // Wenn ja, kehre den String um\n        return strrev($s);\n    }\n\n    $result = '';\n    // Iteriere über jeden Charakter im String\n    for ($i = 0; $i < strlen($s); $i++) {\n        $char = $s[$i];\n        // Überprüfe ob der Charakter ein Buchstabe ist\n        if (ctype_alpha($char)) {\n            // Wenn ja, kehre die Groß- und Kleinschreibung um\n            $result .= strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n        } else {\n            // Wenn nein, belasse den Charakter so wie er ist\n            $result .= $char;\n        }\n    }\n\n    return $result;\n}\n\n// Testfälle\necho solve(\"1234\") . \"\n\";  // \"4321\"\necho solve(\"ab\") . \"\n\";     // \"AB\"\necho solve(\"#a@C\") . \"\n\";   // \"#A@c\"\n```"}
{"result_3":"```php\n/**\n * Diese Funktion nimmt einen String $s entgegen und kehrt alle Buchstaben um, \n * oder belasst sie wenn es keine Buchstaben enthält.\n * \n * @param string $s Der Eingabe-String\n * @return string Der resultierende String\n */\nfunction solve($s) {\n    // Überprüfen, ob der String überhaupt Buchstaben enthält\n    if (!preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn nicht, den ursprünglichen String zurückgeben\n        return strrev($s);\n    }\n\n    // Durchlaufen des Strings und Umkehren von Groß- und Kleinschreibung bei Buchstaben\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $char = $s[$i];\n        if (ctype_alpha($char)) {\n            // Wenn der Char ein Buchstabe ist, umkehren von Groß- und Kleinschreibung\n            $result .= ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else {\n            // Wenn nicht, den Char so wie er ist hinzufügen\n            $result .= $char;\n        }\n    }\n\n    return $result;\n}\n\n// Testfälle\necho solve(\"1234\") . \"\n\";  // \"4321\"\necho solve(\"ab\") . \"\n\";     // \"AB\"\necho solve(\"#a@C\") . \"\n\";   // \"#A@c\"\n```"}
{"result_4":"```php\n/**\n * Diese Funktion nimmt einen String $s entgegen.\n * Wenn s[i] ein Buchstabe ist, kehrt seine Groß- und Kleinschreibung um,\n * ansonsten belasse es so wie es ist.\n * Wenn der String keine Buchstaben enthält, kehre den String um.\n *\n * @param string $s\n * @return string\n */\nfunction solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $char = $s[$i];\n        if (ctype_alpha($char)) {\n            // Wenn der Char ein Buchstabe ist, kehre seine Groß- und Kleinschreibung um\n            $result .= strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n        } else {\n            // Ansonsten belasse es so wie es ist\n            $result .= $char;\n        }\n    }\n    // Wenn der String keine Buchstaben enthält, kehre den String um\n    if (!preg_match('/[a-zA-Z]/', $s)) {\n        $result = strrev($s);\n    }\n    return $result;\n}\n\n// Testfälle\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\"; // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n```"}
