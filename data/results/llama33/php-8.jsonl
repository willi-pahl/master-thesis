{"result_0":"```php\n/**\n * Diese Funktion gibt nur die positiven Zahlen in der Liste zurück.\n *\n * @param array $l Die Eingabe-Liste mit Zahlen.\n * @return array Die Liste mit nur den positiven Zahlen.\n */\nfunction getPositive($l) {\n    // Wir verwenden ein Array-Funktion, um eine neue Liste zu erstellen,\n    // die nur die Elemente enthält, die die Bedingung erfüllen.\n    return array_filter($l, function ($x) {\n        // Eine Zahl ist positiv, wenn sie größer als Null ist.\n        return $x > 0;\n    });\n}\n\n// Testen Sie die Funktion mit den bereitigten Beispielen.\nprint_r(getPositive([-1, 2, -4, 5, 6]));\n// Ergebnis: [2, 5, 6]\n\nprint_r(getPositive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n// Ergebnis: [5, 3, 2, 3, 9, 123, 1]\n```"}
{"result_1":"```php\n/**\n * Diese Funktion filtert eine Liste von Zahlen und gibt nur die positiven Zahlen zurück.\n *\n * @param array $l Eine Liste von Ganzzahlen.\n * @return array Eine Liste mit nur den positiven Zahlen.\n */\nfunction getPositive($l) {\n    return array_filter($l, function ($x) {\n        return $x > 0;\n    });\n}\n\n// Testfälle\nprint_r(getPositive([-1, 2, -4, 5, 6]));\n// Ausgabe: [2, 5, 6]\n\nprint_r(getPositive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n// Ausgabe: [5, 3, 2, 3, 9, 123, 1]\n```\n\nDiese Funktion nutzt die `array_filter`-Funktion von PHP, um eine neue Liste zu erstellen, die nur die Elemente enthält, für die die Bedingung `$x > 0` erfüllt ist. Die Ergebnisliste wird dann zurückgegeben."}
{"result_2":"```php\n/**\n * Gibt nur positive Zahlen in der Liste zurück.\n *\n * @param array $l Die Eingabe-Liste mit Zahlen\n * @return array Die Ausgabe-Liste mit positiven Zahlen\n */\nfunction get_positive($l) {\n    return array_filter($l, function ($x) { return $x > 0; });\n}\n\n// Testfälle\nprint_r(get_positive([-1, 2, -4, 5, 6]));\n// Ausgabe: [2, 5, 6]\n\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n// Ausgabe: [5, 3, 2, 3, 9, 123, 1]\n```"}
{"result_3":"```php\n/**\n * Gibt nur positive Zahlen in der Liste zurück.\n *\n * @param array $l Die Eingabe-Liste mit Zahlen\n * @return array Die Ausgabe-Liste mit positiven Zahlen\n */\nfunction get_positive($l) {\n    return array_filter($l, function ($x) { return $x > 0; });\n}\n\n// Testfälle\nprint_r(get_positive([-1, 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n```\n\nDiese Funktion nutzt die `array_filter`-Funktion von PHP, um nur die positiven Zahlen aus der Eingabe-Liste `$l` zurückzugeben. Die `array_filter`-Funktion wendet eine Callback-Funktion auf jedes Element einer Liste an und gibt eine neue Liste mit den Elementen zurück, für die die Callback-Funktion `true` zurückgibt.\n\nIn diesem Fall wird die Callback-Funktion `$x > 0` verwendet, um nur die positiven Zahlen aus der Liste zurückzugeben."}
{"result_4":"```php\n/**\n * Diese Funktion filtert eine Liste von Zahlen und gibt nur die positiven Zahlen zurück.\n *\n * @param array $l Die Liste von Zahlen.\n * @return array Die Liste mit nur den positiven Zahlen.\n */\nfunction get_positive($l) {\n    // Wir verwenden ein Array-Filter, um nur die positiven Zahlen zu erhalten\n    return array_filter($l, function ($x) {\n        // Eine Zahl ist positiv, wenn sie größer als 0 ist\n        return $x > 0;\n    });\n}\n\n// Testfälle\nprint_r(get_positive([-1, 2, -4, 5, 6]));\n// Ergebnis: [2, 5, 6]\n\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n// Ergebnis: [5, 3, 2, 3, 9, 123, 1]\n```"}
