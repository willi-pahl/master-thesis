{"result_0":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen, dann jedes Wort analysieren und zählen, wie viele Konsonanten es enthält. Schließlich geben wir eine Liste der Wörter zurück, die genau `n` Konsonanten haben.\n\nHier ist eine mögliche Implementierung:\n\n```php\n<?php\n\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie ein Array, um die Ergebnisse zu speichern\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten hat, fügen Sie es zur Ergebnisliste hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie die Liste der Wörter zurück, die genau n Konsonanten enthalten\n    return $result;\n}\n\n// Beispiele\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n\n?>\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir definieren ein Array `$vowels`, das alle Vokale (groß und klein) enthält.\n2. **Wörter aufteilen**: Mit `explode(' ', $s)` teilen wir die Eingabezeichenkette in Wörter auf.\n3. **Konsonanten zählen**: Für jedes Wort durchlaufen wir seine Buchstaben und zählen, wie viele davon keine Vokale sind (also Konsonanten).\n4. **Ergebnis speichern**: Wenn ein Wort genau `n` Konsonanten hat, fügen wir es in das Ergebnisarray `$result` ein.\n5. **Ergebnis zurückgeben**: Schließlich geben wir das Ergebnisarray zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabe erfüllen."}
{"result_1":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen, dann jedes Wort analysieren und zählen, wie viele Konsonanten es enthält. Wenn ein Wort genau `n` Konsonanten hat, fügen wir es der Ergebnisliste hinzu. Hier ist eine mögliche Implementierung:\n\n```php\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie ein Array, um die Ergebnisse zu speichern\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten hat, fügen Sie es zur Ergebnisliste hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie die Ergebnisliste zurück\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir erstellen ein Array `$vowels`, das alle Vokale (groß- und kleingeschrieben) enthält.\n2. **Wörter aufteilen**: Die Funktion `explode(' ', $s)` teilt die Zeichenkette `$s` an jedem Leerzeichen in ein Array von Wörtern.\n3. **Konsonanten zählen**: Für jedes Wort durchlaufen wir seine Buchstaben und zählen, wie viele davon keine Vokale sind (also Konsonanten).\n4. **Ergebnis speichern**: Wenn die Anzahl der Konsonanten im Wort genau `n` ist, fügen wir das Wort zur Ergebnisliste `$result` hinzu.\n5. **Ergebnis zurückgeben**: Schließlich geben wir die Liste der Wörter mit genau `n` Konsonanten zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabe erfüllen."}
{"result_2":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen, dann jedes Wort analysieren und zählen, wie viele Konsonanten es enthält. Wenn ein Wort genau `n` Konsonanten hat, fügen wir es der Ergebnisliste hinzu. Hier ist eine mögliche Implementierung:\n\n```php\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie ein Array, um die Ergebnisse zu speichern\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten hat, fügen Sie es zur Ergebnisliste hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie die Ergebnisliste zurück\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir erstellen ein Array `$vowels`, das alle Vokale (groß und klein) enthält.\n2. **Wörter aufteilen**: Mit `explode(' ', $s)` teilen wir die Eingabezeichenkette in Wörter auf, die durch Leerzeichen getrennt sind.\n3. **Konsonanten zählen**: Für jedes Wort zählen wir die Anzahl der Konsonanten, indem wir jeden Buchstaben überprüfen und prüfen, ob er kein Vokal ist.\n4. **Ergebnis speichern**: Wenn ein Wort genau `n` Konsonanten hat, fügen wir es in das Ergebnisarray `$result` ein.\n5. **Ergebnis zurückgeben**: Schließlich geben wir das Ergebnisarray zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabe erfüllen."}
{"result_3":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen, dann jedes Wort analysieren und zählen, wie viele Konsonanten es enthält. Schließlich geben wir eine Liste der Wörter zurück, die genau `n` Konsonanten enthalten.\n\nHier ist die Implementierung:\n\n```php\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie ein Array, um die Ergebnisse zu speichern\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten enthält, fügen Sie es zur Ergebnisliste hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie die Liste der Wörter zurück, die genau n Konsonanten enthalten\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir definieren ein Array `$vowels`, das alle Vokale (groß- und kleingeschrieben) enthält.\n2. **Wörter aufteilen**: Die Eingabezeichenkette wird mit `explode(' ', $s)` in Wörter aufgeteilt.\n3. **Konsonanten zählen**: Für jedes Wort durchlaufen wir jeden Buchstaben und zählen die Anzahl der Konsonanten, indem wir überprüfen, ob der Buchstabe nicht in `$vowels` enthalten ist.\n4. **Ergebnis speichern**: Wenn ein Wort genau `n` Konsonanten enthält, fügen wir es dem Ergebnisarray `$result` hinzu.\n5. **Ergebnis zurückgeben**: Schließlich geben wir das Ergebnisarray zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabe erfüllen."}
{"result_4":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen und dann jedes Wort analysieren, um die Anzahl der Konsonanten zu zählen. Wenn ein Wort genau `n` Konsonanten enthält, fügen wir es in das Ergebnis-Array ein.\n\nHier ist eine mögliche Implementierung:\n\n```php\n<?php\n\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie das Ergebnis-Array\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten enthält, fügen Sie es dem Ergebnis hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie das Ergebnis-Array zurück\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n\n?>\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir definieren ein Array `$vowels`, das alle Vokale (groß- und kleinbuchstübig) enthält.\n2. **Wörter aufteilen**: Die Zeichenkette wird mit `explode(' ', $s)` in Wörter aufgeteilt, wobei Leerzeichen als Trennzeichen dienen.\n3. **Konsonanten zählen**: Für jedes Wort durchlaufen wir jeden Buchstaben und überprüfen, ob er kein Vokal ist. Falls nicht, erhöhen wir den Zähler `$consonantCount`.\n4. **Ergebnis-Array füllen**: Wenn die Anzahl der Konsonanten in einem Wort genau `n` beträgt, fügen wir das Wort dem Ergebnis-Array `$result` hinzu.\n5. **Ergebnis zurückgeben**: Schließlich geben wir das Ergebnis-Array zurück.\n\nDiese Implementierung sollte die gewünschten Ergebnisse für die gegebenen Beispiele liefern."}
{"result_5":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen und dann jedes Wort analysieren, um die Anzahl der Konsonanten zu bestimmen. Wenn ein Wort genau `n` Konsonanten enthält, fügen wir es in das Ergebnis-Array ein.\n\nHier ist eine mögliche Implementierung:\n\n```php\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie das Ergebnis-Array\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten enthält, fügen Sie es dem Ergebnis hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie das Ergebnis-Array zurück\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir erstellen ein Array `$vowels`, das alle Vokale (groß und klein) enthält.\n2. **Wörter extrahieren**: Die Funktion `explode(' ', $s)` teilt die Zeichenkette `$s` an jedem Leerzeichen in ein Array von Wörtern auf.\n3. **Konsonanten zählen**: Für jedes Wort zählen wir die Anzahl der Konsonanten, indem wir jeden Buchstaben überprüfen und prüfen, ob er kein Vokal ist.\n4. **Ergebnis sammeln**: Wenn ein Wort genau `n` Konsonanten enthält, fügen wir es in das Ergebnis-Array `$result` ein.\n5. **Ergebnis zurückgeben**: Schließlich geben wir das Ergebnis-Array zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabe erfüllen."}
{"result_6":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen, jedes Wort analysieren und zählen, wie viele Konsonanten es enthält. Wenn ein Wort genau `n` Konsonanten hat, fügen wir es der Ergebnisliste hinzu. Hier ist eine mögliche Implementierung:\n\n```php\n<?php\n\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie ein Array, um die Ergebnisse zu speichern\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten hat, fügen Sie es zur Ergebnisliste hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie die Ergebnisliste zurück\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n\n?>\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir erstellen ein Array `$vowels`, das alle Vokale (groß und klein) enthält.\n2. **Wörter aufteilen**: Die Funktion `explode(' ', $s)` teilt die Zeichenkette `$s` an jedem Leerzeichen in ein Array von Wörtern.\n3. **Konsonanten zählen**: Für jedes Wort durchlaufen wir jeden Buchstaben und überprüfen, ob er kein Vokal ist (d.h., ob er nicht in `$vowels` enthalten ist). Falls ja, erhöhen wir den Zähler `$consonantCount`.\n4. **Ergebnisliste erstellen**: Wenn ein Wort genau `n` Konsonanten hat, fügen wir es der Ergebnisliste `$result` hinzu.\n5. **Ergebnis zurückgeben**: Schließlich geben wir die Liste der Wörter mit genau `n` Konsonanten zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabe erfüllen."}
{"result_7":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen, dann jedes Wort analysieren und zählen, wie viele Konsonanten es enthält. Wenn ein Wort genau `n` Konsonanten hat, fügen wir es der Ergebnisliste hinzu. Hier ist eine mögliche Implementierung:\n\n```php\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie ein Array, um die Ergebnisse zu speichern\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten hat, fügen Sie es zur Ergebnisliste hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie die Ergebnisliste zurück\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir erstellen ein Array `$vowels`, das alle Vokale (groß und klein) enthält.\n2. **Wörter aufteilen**: Die Funktion `explode(' ', $s)` teilt die Zeichenkette `$s` an jedem Leerzeichen in ein Array von Wörtern.\n3. **Konsonanten zählen**: Für jedes Wort durchlaufen wir jeden Buchstaben und überprüfen, ob er kein Vokal ist (also ein Konsonant). Wir erhöhen den Zähler `$consonantCount` für jeden gefundenen Konsonanten.\n4. **Ergebnis speichern**: Wenn die Anzahl der Konsonanten in einem Wort genau `n` beträgt, fügen wir das Wort zur Ergebnisliste `$result` hinzu.\n5. **Ergebnis zurückgeben**: Schließlich geben wir die Liste der Wörter mit genau `n` Konsonanten zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabe erfüllen."}
{"result_8":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen und dann jedes Wort analysieren, um die Anzahl der Konsonanten zu zählen. Wenn ein Wort genau `n` Konsonanten enthält, fügen wir es in das Ergebnis-Array ein.\n\nHier ist eine mögliche Implementierung:\n\n```php\n<?php\n\nfunction selectWords($s, $n) {\n    // Leere Liste zurückgeben, wenn die Eingabezeichenkette leer ist\n    if (empty($s)) {\n        return [];\n    }\n\n    // Die Zeichenkette in Wörter aufteilen\n    $words = explode(' ', $s);\n    $result = [];\n\n    // Über jedes Wort iterieren\n    foreach ($words as $word) {\n        // Anzahl der Konsonanten zählen\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            $char = strtolower($word[$i]);\n            if (ctype_alpha($char) && !in_array($char, ['a', 'e', 'i', 'o', 'u'])) {\n                $consonantCount++;\n            }\n        }\n\n        // Wenn das Wort genau n Konsonanten enthält, in das Ergebnis-Array aufnehmen\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n\n    return $result;\n}\n\n// Beispiele\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n\n?>\n```\n\n### Erklärung:\n1. **Leere Zeichenkette**: Zuerst überprüfen wir, ob die Eingabezeichenkette leer ist. Falls ja, geben wir eine leere Liste zurück.\n2. **Aufteilen in Wörter**: Wir verwenden `explode(' ', $s)` um die Zeichenkette in ein Array von Wörtern zu teilen.\n3. **Konsonanten zählen**: Für jedes Wort iterieren wir über seine Buchstaben und zählen die Konsonanten, indem wir überprüfen, ob der Buchstabe kein Vokal ist (`a`, `e`, `i`, `o`, `u`) und ein alphabetisches Zeichen.\n4. **Ergebnis-Array**: Wenn ein Wort genau `n` Konsonanten enthält, fügen wir es in das Ergebnis-Array ein.\n5. **Rückgabe**: Schließlich geben wir das Ergebnis-Array zurück.\n\nDiese Implementierung sollte die Anforderungen der Aufgabenstellung erfüllen."}
{"result_9":"Um die Funktion `selectWords` zu implementieren, müssen wir die Eingabezeichenkette in Wörter aufteilen, dann jedes Wort analysieren und zählen, wie viele Konsonanten es enthält. Wenn ein Wort genau `n` Konsonanten hat, fügen wir es der Ergebnisliste hinzu. Hier ist eine mögliche Implementierung:\n\n```php\nfunction selectWords($s, $n) {\n    // Definieren Sie die Menge der Vokale\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    \n    // Teilen Sie die Zeichenkette in Wörter auf\n    $words = explode(' ', $s);\n    \n    // Initialisieren Sie ein Array, um die Ergebnisse zu speichern\n    $result = [];\n    \n    // Durchlaufen Sie jedes Wort\n    foreach ($words as $word) {\n        // Zählen Sie die Anzahl der Konsonanten im Wort\n        $consonantCount = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonantCount++;\n            }\n        }\n        \n        // Wenn das Wort genau n Konsonanten hat, fügen Sie es zur Ergebnisliste hinzu\n        if ($consonantCount === $n) {\n            $result[] = $word;\n        }\n    }\n    \n    // Geben Sie die Ergebnisliste zurück\n    return $result;\n}\n\n// Testfälle\nprint_r(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nprint_r(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nprint_r(selectWords(\"simple white space\", 2));     // []\nprint_r(selectWords(\"Hello world\", 4));            // [\"world\"]\nprint_r(selectWords(\"Uncle sam\", 3));              // [\"Uncle\"]\n```\n\n### Erklärung:\n1. **Vokale definieren**: Wir definieren ein Array `$vowels`, das alle Vokale (groß- und kleingeschrieben) enthält.\n2. **Wörter aufteilen**: Die Zeichenkette wird mit `explode(' ', $s)` in Wörter geteilt, die in einem Array gespeichert werden.\n3. **Konsonanten zählen**: Für jedes Wort durchlaufen wir jeden Buchstaben und überprüfen, ob er kein Vokal ist (also ein Konsonant). Wir zählen dann die Anzahl der Konsonanten.\n4. **Ergebnis speichern**: Wenn das Wort genau `n` Konsonanten hat, fügen wir es in das Ergebnisarray `$result` ein.\n5. **Ergebnis zurückgeben**: Schließlich geben wir das Array mit den Wörtern zurück, die die Bedingung erfüllen.\n\nDiese Implementierung sollte korrekt funktionieren, solange die Eingabezeichenkette nur Buchstaben und Leerzeichen enthält."}
