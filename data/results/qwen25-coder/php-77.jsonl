{"result_0":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n1. Wir überprüfen, ob der String Buchstaben enthält.\n2. Wenn er Buchstaben enthält, kehren wir die Groß- und Kleinschreibung jedes Buchstabens um.\n3. Falls der String keine Buchstaben enthält, kehren wir den gesamten String um.\n\nHier ist die vollständige Implementierung:\n\n```php\n<?php\n\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Kehre Groß- und Kleinschreibung jedes Buchstabens um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, kehre die Schreibung um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Sonst belasse den Character unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Kehre den gesamten String um, falls keine Buchstaben enthalten sind\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n- **`preg_match('/[a-zA-Z]/', $s)`**: Diese Funktion überprüft, ob der String `$s` mindestens einen Buchstaben enthält.\n- **`ctype_alpha($char)`**: Überprüft, ob ein Zeichen ein Buchstabe ist.\n- **`ctype_upper($char)`**: Überprüft, ob ein Buchstabe großgeschrieben ist.\n- **`strtolower($char)` und `strtoupper($char)`**: Diese Funktionen wandeln einen Buchstaben in Kleinbuchstaben oder Großbuchstaben um.\n- **`strrev($s)`**: Kehrt den gesamten String um.\n\nDiese Implementierung deckt alle gegebenen Anforderungen ab."}
{"result_1":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n```php\n<?php\n\n/**\n * Kehrt die Groß- und Kleinschreibung von Buchstaben um oder kehrt den gesamten String um,\n * wenn keine Buchstaben vorhanden sind.\n *\n * @param string $s Der Eingabestring.\n * @return string Der verarbeitete String.\n */\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn Buchstaben vorhanden sind, kehre ihre Groß- und Kleinschreibung um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, kehre die Schreibweise um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Sonst belasse den Character unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Wenn keine Buchstaben vorhanden sind, kehre den String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n1. **Prüfung auf Buchstaben**: Wir verwenden `preg_match('/[a-zA-Z]/', $s)` um zu überprüfen, ob der String mindestens einen Buchstaben enthält.\n2. **Groß- und Kleinschreibung umkehren**:\n   - Wir iterieren durch jeden Character des Strings.\n   - Wenn es sich um einen Buchstaben handelt (`ctype_alpha($char)`), kehren wir seine Groß- oder Kleinschreibung mit `strtolower()` und `strtoupper()` um.\n   - Nicht-Buchstaben werden unverändert an den Resultatstring angehängt.\n3. **String umkehren**:\n   - Falls der String keine Buchstaben enthält, verwenden wir `strrev($s)` um den gesamten String zu kehren.\n\nDiese Implementierung deckt alle gegebenen Anforderungen ab und liefert die erwarteten Ergebnisse für die Beispiele."}
{"result_2":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n1. Überprüfen, ob der String Buchstaben enthält.\n2. Wenn er Buchstaben enthält, ändern wir die Groß- und Kleinschreibung jedes Buchstabens.\n3. Falls der String keine Buchstaben enthält, kehren wir den gesamten String um.\n\nHier ist die vollständige Implementierung in PHP:\n\n```php\n<?php\n\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn er Buchstaben enthält, ändern wir die Groß- und Kleinschreibung jedes Buchstabens\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, ändern wir die Groß- und Kleinschreibung\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Ansonsten belassen wir den Character unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Falls der String keine Buchstaben enthält, kehren wir den gesamten String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n- **`preg_match('/[a-zA-Z]/', $s)`**: Diese Funktion überprüft, ob der String `$s` mindestens einen Buchstaben enthält.\n- **`ctype_alpha($char)`**: Überprüft, ob ein Zeichen ein Buchstabe ist.\n- **`ctype_upper($char)`**: Überprüft, ob ein Buchstabe großgeschrieben ist.\n- **`strtolower($char)` und `strtoupper($char)`**: Diese Funktionen ändern die Groß- und Kleinschreibung eines Buchstabens.\n- **`strrev($s)`**: Kehrt den gesamten String um.\n\nDiese Implementierung deckt alle gegebenen Anforderungen ab."}
{"result_3":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n```php\n<?php\n\n/**\n * Kehrt die Groß- und Kleinschreibung von Buchstaben um oder kehrt den gesamten String um,\n * wenn keine Buchstaben vorhanden sind.\n *\n * @param string $s Der Eingabestring.\n * @return string Der verarbeitete String.\n */\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn Buchstaben vorhanden sind, kehre ihre Groß- und Kleinschreibung um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, kehre die Schreibweise um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Wenn es kein Buchstabe ist, belasse ihn unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Wenn keine Buchstaben vorhanden sind, kehre den gesamten String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // Ausgabe: \"4321\"\necho solve(\"ab\") . \"\n\";   // Ausgabe: \"AB\"\necho solve(\"#a@C\") . \"\n\"; // Ausgabe: \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n1. **Prüfung auf Buchstaben**: Wir verwenden `preg_match('/[a-zA-Z]/', $s)` um zu überprüfen, ob der String `$s` mindestens einen Buchstaben enthält.\n2. **Groß- und Kleinschreibung umkehren**:\n   - Wenn der String Buchstaben enthält, iterieren wir durch jeden Zeichen des Strings.\n   - Für jedes Zeichen prüfen wir mit `ctype_alpha($char)`, ob es sich um einen Buchstaben handelt.\n   - Falls ja, verwenden wir `ctype_upper($char)` und `strtolower()` oder `strtoupper()`, um die Schreibweise zu invertieren.\n   - Nicht-Buchstaben werden unverändert an den Ergebnisstring angehängt.\n3. **String umkehren**:\n   - Wenn der String keine Buchstaben enthält, verwenden wir `strrev($s)`, um den gesamten String umzukehren.\n\nDiese Implementierung deckt alle gegebenen Anforderungen ab und liefert die erwarteten Ergebnisse für die Beispiele."}
{"result_4":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n```php\n<?php\n\n/**\n * Kehrt die Groß- und Kleinschreibung von Buchstaben um oder kehrt den gesamten String um,\n * wenn keine Buchstaben vorhanden sind.\n *\n * @param string $s Der Eingabestring.\n * @return string Der verarbeitete String.\n */\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn Buchstaben vorhanden sind, kehre ihre Groß- und Kleinschreibung um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, kehre die Schreibweise um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Sonst belasse den Character unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Wenn keine Buchstaben vorhanden sind, kehre den gesamten String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n1. **Prüfung auf Buchstaben**: Wir verwenden `preg_match` mit dem regulären Ausdruck `/[a-zA-Z]/`, um zu überprüfen, ob der String mindestens einen Buchstaben enthält.\n2. **Groß- und Kleinschreibung umkehren**:\n   - Wenn Buchstaben vorhanden sind, iterieren wir durch jeden Character des Strings.\n   - Für jeden Buchstaben verwenden wir `ctype_alpha` zur Überprüfung, ob es sich um einen Buchstaben handelt.\n   - Mit `ctype_upper` und `strtolower` sowie `strtoupper` kehren wir die Groß- und Kleinschreibung um.\n3. **String umkehren**:\n   - Wenn keine Buchstaben vorhanden sind, verwenden wir `strrev`, um den gesamten String umzukehren.\n\nDiese Implementierung erfüllt alle Anforderungen der Aufgabe."}
{"result_5":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n```php\n<?php\n\n/**\n * Kehrt die Groß- und Kleinschreibung von Buchstaben um oder kehrt den gesamten String um,\n * wenn keine Buchstaben vorhanden sind.\n *\n * @param string $s Der Eingabestring.\n * @return string Der verarbeitete String.\n */\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn Buchstaben vorhanden sind, kehre ihre Groß- und Kleinschreibung um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, kehre die Schreibweise um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Sonst belasse den Character unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Wenn keine Buchstaben vorhanden sind, kehre den String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n1. **Prüfung auf Buchstaben**: Wir verwenden `preg_match('/[a-zA-Z]/', $s)` um zu überprüfen, ob der String mindestens einen Buchstaben enthält.\n2. **Groß- und Kleinschreibung umkehren**:\n   - Wir iterieren über jeden Zeichen im String.\n   - Wenn das Zeichen ein Buchstabe ist (`ctype_alpha($char)`), kehren wir seine Groß- oder Kleinschreibung um.\n   - Sonst fügen wir das Zeichen unverändert zum Ergebnis hinzu.\n3. **String umkehren**: Falls der String keine Buchstaben enthält, verwenden wir `strrev($s)`, um den gesamten String umzukehren.\n\nDiese Implementierung deckt alle gegebenen Beispiele ab und sollte für weitere ähnliche Eingaben korrekt funktionieren."}
{"result_6":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n1. Überprüfen, ob der String Buchstaben enthält.\n2. Wenn er Buchstaben enthält, ändern wir die Groß- und Kleinschreibung jedes Buchstabens.\n3. Wenn er keine Buchstaben enthält, kehren wir den gesamten String um.\n\nHier ist die vollständige Implementierung in PHP:\n\n```php\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        $result = '';\n        // Durchlaufe jeden Character im String\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            // Überprüfen, ob der Character ein Buchstabe ist\n            if (ctype_alpha($char)) {\n                // Ändere die Groß- und Kleinschreibung\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Wenn es kein Buchstabe ist, belasse ihn unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Kehre den String um, wenn er keine Buchstaben enthält\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n```\n\n### Erklärung:\n- `preg_match('/[a-zA-Z]/', $s)`: Diese Funktion überprüft, ob der String `$s` mindestens einen Buchstaben enthält.\n- `ctype_alpha($char)`: Überprüft, ob ein Character ein Buchstabe ist.\n- `ctype_upper($char)`: Überprüft, ob ein Character ein Großbuchstabe ist.\n- `strtolower($char)` und `strtoupper($char)`: Ändern die Schreibweise eines Buchstabens von Groß- zu Klein- oder umgekehrt.\n- `strrev($s)`: Kehrt den gesamten String um.\n\nDiese Implementierung deckt alle gegebenen Anforderungen ab."}
{"result_7":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n```php\n<?php\n\n/**\n * Kehrt die Groß- und Kleinschreibung von Buchstaben um oder kehrt den gesamten String um,\n * wenn keine Buchstaben vorhanden sind.\n *\n * @param string $s Der Eingabestring.\n * @return string Der verarbeitete String.\n */\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn Buchstaben vorhanden sind, kehre ihre Groß- und Kleinschreibung um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn der Charakter ein Buchstabe ist, kehre die Schreibweise um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Sonst belasse den Charakter unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Wenn keine Buchstaben vorhanden sind, kehre den gesamten String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n1. **Prüfung auf Buchstaben**: Wir verwenden `preg_match('/[a-zA-Z]/', $s)` um zu überprüfen, ob der String `$s` mindestens einen Buchstaben enthält.\n2. **Umwandlung von Groß- und Kleinschreibung**:\n   - Wenn der String Buchstaben enthält, iterieren wir durch jeden Zeichen des Strings.\n   - Für jedes Zeichen prüfen wir mit `ctype_alpha($char)`, ob es sich um einen Buchstaben handelt.\n   - Falls ja, kehren wir die Groß- und Kleinschreibung mit `strtolower()` oder `strtoupper()` um.\n   - Nicht-alphabetische Zeichen werden unverändert an den Ergebnisstring angehängt.\n3. **Umkehren des Strings**: Wenn der String keine Buchstaben enthält, verwenden wir `strrev($s)` um den gesamten String zu kehren.\n\nDiese Implementierung deckt alle gegebenen Anforderungen ab und liefert die erwarteten Ergebnisse für die Beispiele."}
{"result_8":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n```php\n<?php\n\n/**\n * Kehrt die Groß- und Kleinschreibung von Buchstaben um oder kehrt den gesamten String um,\n * wenn keine Buchstaben vorhanden sind.\n *\n * @param string $s Der Eingabestring.\n * @return string Der verarbeitete String.\n */\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn Buchstaben vorhanden sind, kehre ihre Groß- und Kleinschreibung um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, kehre die Schreibweise um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Sonst belasse den Character unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Wenn keine Buchstaben vorhanden sind, kehre den gesamten String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n1. **Prüfung auf Buchstaben**: Wir verwenden `preg_match` mit dem regulären Ausdruck `/[a-zA-Z]/`, um zu überprüfen, ob der String mindestens einen Buchstaben enthält.\n2. **Groß- und Kleinschreibung umkehren**:\n   - Wenn der String Buchstaben enthält, iterieren wir durch jeden Character des Strings.\n   - Für jeden Buchstaben verwenden wir `ctype_alpha` zur Überprüfung, ob es sich um einen Buchstaben handelt.\n   - Mit `ctype_upper` und `strtolower` sowie `strtoupper` kehren wir die Groß- und Kleinschreibung um.\n3. **String umkehren**:\n   - Wenn der String keine Buchstaben enthält, verwenden wir `strrev`, um den gesamten String zu kehren.\n\nDiese Implementierung deckt alle gegebenen Beispiele ab und erfüllt die Anforderungen der Aufgabe."}
{"result_9":"Um die Aufgabe zu lösen, können wir die Funktion `solve` wie folgt implementieren:\n\n```php\n<?php\n\n/**\n * Kehrt die Groß- und Kleinschreibung von Buchstaben um oder kehrt den gesamten String um,\n * wenn keine Buchstaben vorhanden sind.\n *\n * @param string $s Der Eingabestring.\n * @return string Der verarbeitete String.\n */\nfunction solve($s) {\n    // Überprüfen, ob der String Buchstaben enthält\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        // Wenn Buchstaben vorhanden sind, kehre ihre Groß- und Kleinschreibung um\n        $result = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n            $char = $s[$i];\n            if (ctype_alpha($char)) {\n                // Wenn es ein Buchstabe ist, kehre die Schreibweise um\n                if (ctype_upper($char)) {\n                    $result .= strtolower($char);\n                } else {\n                    $result .= strtoupper($char);\n                }\n            } else {\n                // Sonst belasse den Zeichen unverändert\n                $result .= $char;\n            }\n        }\n        return $result;\n    } else {\n        // Wenn keine Buchstaben vorhanden sind, kehre den gesamten String um\n        return strrev($s);\n    }\n}\n\n// Beispiele\necho solve(\"1234\") . \"\n\"; // \"4321\"\necho solve(\"ab\") . \"\n\";   // \"AB\"\necho solve(\"#a@C\") . \"\n\"; // \"#A@c\"\n\n?>\n```\n\n### Erklärung:\n1. **Prüfung auf Buchstaben**: Wir verwenden `preg_match` mit dem regulären Ausdruck `/[a-zA-Z]/`, um zu überprüfen, ob der String mindestens einen Buchstaben enthält.\n2. **Umwandlung von Groß- und Kleinschreibung**:\n   - Wenn der String Buchstaben enthält, iterieren wir durch jeden Zeichen des Strings.\n   - Für jedes Zeichen prüfen wir mit `ctype_alpha`, ob es ein Buchstabe ist.\n   - Falls es ein Buchstabe ist, verwenden wir `ctype_upper` und `strtolower` oder `strtoupper`, um die Schreibweise zu wechseln.\n   - Nicht-buchstabische Zeichen werden unverändert an den Ergebnisstring angehängt.\n3. **Umkehren des Strings**:\n   - Falls der String keine Buchstaben enthält, verwenden wir `strrev` um den gesamten String umzukehren.\n\nDiese Implementierung deckt alle gegebenen Anforderungen ab und liefert die erwarteten Ergebnisse für die Beispiele."}
